{"ast":null,"code":"// import React, {useEffect, useRef, useState} from 'react';\n// import * as style from \"../css/light/pageIndex\";\n// import getOverallTotal from './getOverallTotal';\n// export default function Pages(props) {\n//   const [total, setTotal] = useState(setTimeout(() => getOverallTotal(props)), 0.1)\n//   const [pageStyle, setPageStyle] = useState(style.pageNumber)\n//   const firstNum = useRef(null);\n//   const lastNum = useRef(null);\n//   const leftTab = useRef(null);\n//   const rightTab = useRef(null);\n//   useEffect(() => {\n//     setTotal(getOverallTotal(props))\n//   })\n//   const renderPageList = () => {\n//     let pages = []\n//     try {\n//       if (total == 0) {\n//         firstNum.current.innerHTML = 0\n//         firstNum.current.style.margin = \"8px 2px 0px 0px\"\n//         lastNum.current.style.display = \"none\"\n//         rightTab.current.style.display = \"none\"\n//         leftTab.current.style.display = \"none\"\n//         return\n//       }\n//       if (total === 1) {\n//         firstNum.current.innerHTML = 1\n//         firstNum.current.style.margin = \"8px 2px 0px 0px\"\n//         lastNum.current.style.display = \"none\"\n//         rightTab.current.style.display = \"none\"\n//         leftTab.current.style.display = \"none\"\n//         return\n//       }\n//       if (total > 1 && total < 9) {\n//         firstNum.current.innerHTML = 1\n//         firstNum.current.style.margin = \"8px 8px 0px 0px\"\n//         lastNum.current.style.display = \"none\"\n//         rightTab.current.style.display = \"none\"\n//         leftTab.current.style.display = \"none\"\n//       }\n//       if (total > 9) {\n//         firstNum.current.innerHTML = 1\n//         firstNum.current.style.margin = \"8px 8px 0px 0px\"\n//         lastNum.current.style.display = \"initial\"\n//         rightTab.current.style.display = \"initial\"\n//         lastNum.current.innerHTML = total\n//       }\n//     }\n//     catch {/*First render*/}\n//     for (let i = 2; i < total; i++) pages.push(i)\n//     return (\n//       <div style={{display: \"flex\"}}>{pages.map((i, item) => (<div key={`Page${i}`} id={i} style={pageStyle}>{i}</div>))}</div>\n//     )    \n//   }\n//   return (\n//     <div style={{display: \"flex\"}}>  \n//       <div style={style.leftArrow}/>\n//         <div style={{display: \"flex\"}}>\n//           <div ref={firstNum} style={style.firstPage}>1</div>\n//           <div ref={leftTab} style={style.leftTab}>|</div>\n//           <div onClick={e => console.log(e.target.innerHTML)} style={{display: \"flex\", maxWidth: \"192px\", overflow: \"hidden\", paddingRight: \"\"}}>{renderPageList()}</div>\n//           <div ref={rightTab} style={style.rightTab}>|</div>\n//           <div ref={lastNum} style={style.lastPage}>{total}</div>\n//         </div>\n//       <div style={style.rightArrow}/>\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/pages.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, {useEffect, useRef, useState} from 'react';\r\n// import * as style from \"../css/light/pageIndex\";\r\n// import getOverallTotal from './getOverallTotal';\r\n\r\n// export default function Pages(props) {\r\n//   const [total, setTotal] = useState(setTimeout(() => getOverallTotal(props)), 0.1)\r\n//   const [pageStyle, setPageStyle] = useState(style.pageNumber)\r\n//   const firstNum = useRef(null);\r\n//   const lastNum = useRef(null);\r\n//   const leftTab = useRef(null);\r\n//   const rightTab = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     setTotal(getOverallTotal(props))\r\n//   })\r\n\r\n//   const renderPageList = () => {\r\n//     let pages = []\r\n\r\n//     try {\r\n//       if (total == 0) {\r\n//         firstNum.current.innerHTML = 0\r\n//         firstNum.current.style.margin = \"8px 2px 0px 0px\"\r\n//         lastNum.current.style.display = \"none\"\r\n//         rightTab.current.style.display = \"none\"\r\n//         leftTab.current.style.display = \"none\"\r\n//         return\r\n//       }\r\n//       if (total === 1) {\r\n//         firstNum.current.innerHTML = 1\r\n//         firstNum.current.style.margin = \"8px 2px 0px 0px\"\r\n//         lastNum.current.style.display = \"none\"\r\n//         rightTab.current.style.display = \"none\"\r\n//         leftTab.current.style.display = \"none\"\r\n//         return\r\n//       }\r\n//       if (total > 1 && total < 9) {\r\n//         firstNum.current.innerHTML = 1\r\n//         firstNum.current.style.margin = \"8px 8px 0px 0px\"\r\n//         lastNum.current.style.display = \"none\"\r\n//         rightTab.current.style.display = \"none\"\r\n//         leftTab.current.style.display = \"none\"\r\n//       }\r\n//       if (total > 9) {\r\n//         firstNum.current.innerHTML = 1\r\n//         firstNum.current.style.margin = \"8px 8px 0px 0px\"\r\n//         lastNum.current.style.display = \"initial\"\r\n//         rightTab.current.style.display = \"initial\"\r\n//         lastNum.current.innerHTML = total\r\n//       }\r\n//     }\r\n//     catch {/*First render*/}\r\n\r\n//     for (let i = 2; i < total; i++) pages.push(i)\r\n\r\n//     return (\r\n//       <div style={{display: \"flex\"}}>{pages.map((i, item) => (<div key={`Page${i}`} id={i} style={pageStyle}>{i}</div>))}</div>\r\n//     )    \r\n//   }\r\n\r\n//   return (\r\n//     <div style={{display: \"flex\"}}>  \r\n//       <div style={style.leftArrow}/>\r\n//         <div style={{display: \"flex\"}}>\r\n//           <div ref={firstNum} style={style.firstPage}>1</div>\r\n//           <div ref={leftTab} style={style.leftTab}>|</div>\r\n//           <div onClick={e => console.log(e.target.innerHTML)} style={{display: \"flex\", maxWidth: \"192px\", overflow: \"hidden\", paddingRight: \"\"}}>{renderPageList()}</div>\r\n//           <div ref={rightTab} style={style.rightTab}>|</div>\r\n//           <div ref={lastNum} style={style.lastPage}>{total}</div>\r\n//         </div>\r\n//       <div style={style.rightArrow}/>\r\n//     </div>\r\n//   )\r\n// }"]},"metadata":{},"sourceType":"module"}