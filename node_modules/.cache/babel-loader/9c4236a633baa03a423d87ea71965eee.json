{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, React, useState } from 'react';\nimport * as style from \"../css/searchList\";\nimport ListDeviceItem from \"./listDeviceItem\";\nimport ListUserItem from \"./listUserItem\";\nimport ListDidItem from \"./listDidItem\";\nimport { renderDidIndexMenu } from './searchList/renderDidIndexMenu';\nimport { renderUserIndexMenu } from './searchList/renderUserIndexMenu';\nimport { renderDeviceIndexMenu } from './searchList/renderDeviceIndexMenu';\nimport { renderDidList } from './searchList/renderDidList';\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport getDidData from \"./getDidData\";\nimport Pages from \"./pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet string = \"\";\nlet searchDevice = getDeviceData;\nlet searchUser = getUserData;\nlet searchDid = getDidData;\nlet deviceRelevantSearch = \"mac\";\nlet userRelevantSearch = \"id\";\nlet didRelevantSearch = \"did\";\nlet filteredDeviceSearch = getDeviceData;\nlet filteredUserSearch = getUserData;\nlet filteredDidSearch = getDidData;\nlet phoneContainer = [];\nexport default function SearchList() {\n  _s();\n\n  const [device, setDevice] = useState(searchDevice);\n  const [user, setUser] = useState(searchUser);\n  const [did, setDid] = useState(searchDid);\n  const [totalCount, setTotalCount] = useState([{\n    \"device\": Math.ceil(filteredDeviceSearch.length / 100)\n  }, {\n    \"user\": Math.ceil(filteredUserSearch.length / 100)\n  }, {\n    \"did\": Math.ceil(filteredDidSearch.length / 100)\n  }]);\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\n  const [userDisplay, setUserDisplay] = useState(true);\n  const [didDisplay, setDidDisplay] = useState(true);\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\n  const [searchTypeDidStyle, setSearchTypeDidStyle] = useState(style.searchTypeDidStyle);\n  const deviceIndexRef = useRef(null);\n  const userIndexRef = useRef(null);\n  const scrollRef = useRef({\n    scrollTop: 0\n  }); //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\n\n  const returnSearch = () => {\n    let deviceInfoType = [];\n    let userInfoType = [];\n    let didInfoType = [];\n    let unfilteredDeviceSearch = [];\n    let unfilteredUserSearch = [];\n    let unfilteredDidSearch = [];\n    searchDevice.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          deviceInfoType.push(e.type);\n          unfilteredDeviceSearch.push(profile);\n        }\n      });\n    });\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\n    searchUser.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          userInfoType.push(e.type);\n          unfilteredUserSearch.push(profile);\n        }\n      });\n    });\n    filteredUserSearch = [...new Set(unfilteredUserSearch)];\n    searchDid.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          didInfoType.push(e.type);\n          unfilteredDidSearch.push(profile);\n        }\n      });\n    });\n    filteredDidSearch = [...new Set(unfilteredDidSearch)];\n    setTotalCount([{\n      \"device\": Math.ceil(filteredDeviceSearch.length / 100)\n    }, {\n      \"user\": Math.ceil(filteredUserSearch.length / 100)\n    }, {\n      \"did\": Math.ceil(filteredDidSearch.length / 100)\n    }]); //Highlights most relavent searchindex.\n\n    let deviceCounts = [];\n    deviceInfoType.forEach(e => {\n      deviceCounts[e] = (deviceCounts[e] || 0) + 1;\n    });\n    deviceRelevantSearch = Object.keys(deviceCounts)[0];\n    deviceInfoType = [];\n    let userCounts = [];\n    userInfoType.forEach(e => {\n      userCounts[e] = (userCounts[e] || 0) + 1;\n    });\n    userRelevantSearch = Object.keys(userCounts)[0];\n    userInfoType = [];\n    let didCounts = [];\n    didInfoType.forEach(e => {\n      didCounts[e] = (didCounts[e] || 0) + 1;\n    });\n    didRelevantSearch = Object.keys(didCounts)[0];\n    didInfoType = [];\n  };\n\n  const handleInputChange = e => {\n    string = e.target.value.toLowerCase();\n    returnSearch();\n    setDevice(filteredDeviceSearch);\n    setUser(filteredUserSearch);\n    setDid(filteredDidSearch);\n  };\n\n  const handleSearchTypeChange = e => {\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setSearchTypeDidStyle(style.searchTypeDidStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(false);\n      setDidDisplay(false);\n      return;\n    }\n\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeDidStyle(style.searchTypeDidStyle);\n      setDeviceDisplay(false);\n      setUserDisplay(true);\n      setDidDisplay(false);\n      return;\n    }\n\n    if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeDidStyle(style.searchTypeDidStyleHighlight);\n      setDeviceDisplay(false);\n      setUserDisplay(false);\n      setDidDisplay(true);\n      return;\n    }\n\n    if (e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setSearchTypeDidStyle(style.searchTypeDidStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(true);\n      setDidDisplay(true);\n      return;\n    }\n  }; //Renders a list with all devices returned to filteredSearch and passed to device state.\n\n\n  const renderPhoneList = () => {\n    phoneContainer = [];\n    let i = 0;\n\n    while (i < 100) {\n      if (!device[i]) break;\n      phoneContainer.push(device[i]);\n      i++;\n    }\n\n    if (deviceDisplay) {\n      return phoneContainer.map((item, i) => /*#__PURE__*/_jsxDEV(ListDeviceItem, {\n        mac: item[0].data,\n        user: item[1].data,\n        line: item[2].data,\n        mask: item[3].data,\n        ip: item[4].data,\n        location: item[5].data\n      }, `ID${i}D`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderUserList = () => {\n    let container = [];\n    let i = 0;\n\n    while (i < 100) {\n      if (!user[i]) break;\n      container.push(user[i]);\n      i++;\n    }\n\n    if (userDisplay) {\n      return container.map((item, i) => /*#__PURE__*/_jsxDEV(ListUserItem, {\n        id: item[0].data,\n        name: item[1].data,\n        primary: item[2].data,\n        department: item[3].data,\n        device: item[4].data,\n        location: item[5].data\n      }, `ID${i}U`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: \"59.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        minWidth: \"59.5vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleSearchTypeChange(e),\n          style: searchTypeDeviceStyle,\n          children: \"Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleSearchTypeChange(e),\n          style: searchTypeUserStyle,\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleSearchTypeChange(e),\n          style: searchTypeDidStyle,\n          children: \"DID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        style: style.listContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: deviceIndexRef,\n          children: renderDeviceIndexMenu(deviceDisplay, filteredDeviceSearch, deviceRelevantSearch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), renderPhoneList(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: userIndexRef,\n          children: renderUserIndexMenu(userDisplay, filteredUserSearch, userRelevantSearch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), renderUserList(), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: renderDidIndexMenu(didDisplay, filteredDidSearch, didRelevantSearch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), renderDidList(did, didDisplay)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pages, {\n        total: totalCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"wJ2WdI0xkb3aAunc9dju7568390=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList.jsx"],"names":["useRef","React","useState","style","ListDeviceItem","ListUserItem","ListDidItem","renderDidIndexMenu","renderUserIndexMenu","renderDeviceIndexMenu","renderDidList","getDeviceData","getUserData","getDidData","Pages","string","searchDevice","searchUser","searchDid","deviceRelevantSearch","userRelevantSearch","didRelevantSearch","filteredDeviceSearch","filteredUserSearch","filteredDidSearch","phoneContainer","SearchList","device","setDevice","user","setUser","did","setDid","totalCount","setTotalCount","Math","ceil","length","deviceDisplay","setDeviceDisplay","userDisplay","setUserDisplay","didDisplay","setDidDisplay","searchTypeDeviceStyle","setSearchTypeDeviceStyle","searchTypeUserStyle","setSearchTypeUserStyle","searchTypeDidStyle","setSearchTypeDidStyle","deviceIndexRef","userIndexRef","scrollRef","scrollTop","returnSearch","deviceInfoType","userInfoType","didInfoType","unfilteredDeviceSearch","unfilteredUserSearch","unfilteredDidSearch","forEach","profile","e","data","toString","toLowerCase","includes","push","type","Set","deviceCounts","Object","keys","userCounts","didCounts","handleInputChange","target","value","handleSearchTypeChange","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyleHighlight","searchTypeDidStyleHighlight","renderPhoneList","i","map","item","renderUserList","container","minWidth","display","searchInputStyle","listContainerStyle"],"mappings":"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","sourcesContent":["import {useRef, React, useState} from 'react';\r\nimport * as style from \"../css/searchList\";\r\nimport ListDeviceItem from \"./listDeviceItem\";\r\nimport ListUserItem from \"./listUserItem\";\r\nimport ListDidItem from \"./listDidItem\";\r\nimport { renderDidIndexMenu } from './searchList/renderDidIndexMenu';\r\nimport { renderUserIndexMenu } from './searchList/renderUserIndexMenu';\r\nimport { renderDeviceIndexMenu } from './searchList/renderDeviceIndexMenu';\r\nimport { renderDidList } from './searchList/renderDidList';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport Pages from \"./pages\";\r\n\r\nlet string = \"\";\r\nlet searchDevice = getDeviceData;\r\nlet searchUser = getUserData;\r\nlet searchDid = getDidData;\r\nlet deviceRelevantSearch = \"mac\";\r\nlet userRelevantSearch = \"id\"\r\nlet didRelevantSearch = \"did\"\r\nlet filteredDeviceSearch = getDeviceData;\r\nlet filteredUserSearch = getUserData;\r\nlet filteredDidSearch = getDidData;\r\nlet phoneContainer = [];\r\n\r\nexport default function SearchList() {\r\n  const [device, setDevice] = useState(searchDevice);\r\n  const [user, setUser] = useState(searchUser);\r\n  const [did, setDid] = useState(searchDid);\r\n  const [totalCount, setTotalCount] = useState([{\"device\":Math.ceil(filteredDeviceSearch.length/ 100)}, {\"user\":Math.ceil(filteredUserSearch.length/ 100)}, {\"did\":Math.ceil(filteredDidSearch.length/ 100)}])\r\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\r\n  const [userDisplay, setUserDisplay] = useState(true);\r\n  const [didDisplay, setDidDisplay] = useState(true);\r\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\r\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\r\n  const [searchTypeDidStyle, setSearchTypeDidStyle] = useState(style.searchTypeDidStyle);\r\n  const deviceIndexRef = useRef(null);\r\n  const userIndexRef = useRef(null);\r\n  const scrollRef = useRef({scrollTop: 0});\r\n  \r\n  //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\r\n  const returnSearch = () => {\r\n    let deviceInfoType = [];\r\n    let userInfoType = [];\r\n    let didInfoType = [];\r\n    let unfilteredDeviceSearch = [];\r\n    let unfilteredUserSearch = [];\r\n    let unfilteredDidSearch = [];\r\n  \r\n    searchDevice.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          deviceInfoType.push(e.type);\r\n          unfilteredDeviceSearch.push(profile);\r\n        }\r\n      });\r\n    });\r\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\r\n  \r\n    searchUser.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          userInfoType.push(e.type);\r\n          unfilteredUserSearch.push(profile);\r\n        }\r\n      })\r\n    })\r\n    filteredUserSearch = [...new Set(unfilteredUserSearch)];\r\n\r\n    searchDid.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          didInfoType.push(e.type);\r\n          unfilteredDidSearch.push(profile);\r\n        }\r\n      })\r\n    })\r\n    filteredDidSearch = [...new Set(unfilteredDidSearch)];\r\n    setTotalCount([{\"device\":Math.ceil(filteredDeviceSearch.length/ 100)}, {\"user\":Math.ceil(filteredUserSearch.length/ 100)}, {\"did\":Math.ceil(filteredDidSearch.length/ 100)}])\r\n\r\n  \r\n    //Highlights most relavent searchindex.\r\n    let deviceCounts = [];\r\n    deviceInfoType.forEach(e => {\r\n      deviceCounts[e] = (deviceCounts[e] || 0) + 1;\r\n    });\r\n    deviceRelevantSearch = Object.keys(deviceCounts)[0];\r\n    deviceInfoType = [];\r\n\r\n    let userCounts = [];\r\n    userInfoType.forEach(e => {\r\n      userCounts[e] = (userCounts[e] || 0) + 1;\r\n    });\r\n    userRelevantSearch = Object.keys(userCounts)[0];\r\n    userInfoType = [];\r\n\r\n    let didCounts = [];\r\n    didInfoType.forEach(e => {\r\n      didCounts[e] = (didCounts[e] || 0) + 1;\r\n    });\r\n    didRelevantSearch = Object.keys(didCounts)[0];\r\n    didInfoType = [];\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    string = e.target.value.toLowerCase();\r\n    returnSearch();\r\n    setDevice(filteredDeviceSearch);\r\n    setUser(filteredUserSearch);\r\n    setDid(filteredDidSearch)\r\n  }\r\n\r\n  const handleSearchTypeChange = e => {\r\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setSearchTypeDidStyle(style.searchTypeDidStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(false)\r\n      setDidDisplay(false)\r\n      return\r\n    }\r\n\r\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {  \r\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeDidStyle(style.searchTypeDidStyle)\r\n      setDeviceDisplay(false)\r\n      setUserDisplay(true)\r\n      setDidDisplay(false)\r\n      return\r\n    }\r\n\r\n    if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {  \r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeDidStyle(style.searchTypeDidStyleHighlight)\r\n      setDeviceDisplay(false)\r\n      setUserDisplay(false)\r\n      setDidDisplay(true)\r\n      return\r\n    }\r\n\r\n    if (e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setSearchTypeDidStyle(style.searchTypeDidStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(true)\r\n      setDidDisplay(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  //Renders a list with all devices returned to filteredSearch and passed to device state.\r\n  const renderPhoneList = () => {\r\n    phoneContainer = []\r\n    let i = 0\r\n    while (i < 100) {\r\n      if (!device[i]) break\r\n      phoneContainer.push(device[i])\r\n      i++\r\n    }\r\n    \r\n    if (deviceDisplay) {\r\n      return phoneContainer.map((item, i) => (\r\n        <ListDeviceItem\r\n          key={`ID${i}D`}\r\n          mac={item[0].data}\r\n          user={item[1].data}\r\n          line={item[2].data}\r\n          mask={item[3].data}\r\n          ip={item[4].data}\r\n          location={item[5].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    let container = []\r\n    let i = 0\r\n    while (i < 100) {\r\n      if (!user[i]) break\r\n      container.push(user[i])\r\n      i++;\r\n    }\r\n    if (userDisplay) {\r\n      return container.map((item, i) => (\r\n        <ListUserItem\r\n          key={`ID${i}U`}\r\n          id={item[0].data}\r\n          name={item[1].data}\r\n          primary={item[2].data}\r\n          department={item[3].data}\r\n          device={item[4].data}\r\n          location={item[5].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{minWidth: \"59.5vw\"}}>\r\n      <div style={{display: \"flex\", minWidth: \"59.5vw\"}}>\r\n        <div style={{display: \"flex\"}}>\r\n          <div onClick={e => handleSearchTypeChange(e)} style={searchTypeDeviceStyle}>Device</div>\r\n          <div onClick={e => handleSearchTypeChange(e)} style={searchTypeUserStyle}>User</div>\r\n          <div onClick={e => handleSearchTypeChange(e)} style={searchTypeDidStyle}>DID</div>\r\n        </div>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      </div>\r\n      <div >\r\n        <div ref={scrollRef} style={style.listContainerStyle}>\r\n          <div ref={deviceIndexRef}>{renderDeviceIndexMenu(deviceDisplay, filteredDeviceSearch, deviceRelevantSearch)}</div>\r\n          {renderPhoneList()}\r\n          <div ref={userIndexRef}>{renderUserIndexMenu(userDisplay, filteredUserSearch, userRelevantSearch)}</div>\r\n          {renderUserList()}\r\n          <div>{renderDidIndexMenu(didDisplay, filteredDidSearch, didRelevantSearch)}</div>\r\n          {renderDidList(did, didDisplay)}\r\n        </div>\r\n        <Pages total={totalCount}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}