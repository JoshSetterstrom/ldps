{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport * as style from \"../css/light/main\";\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\nimport getUserData from \"./dataRetrieval/getUserData\";\nimport Focused from \"./focused/focused\"; // import getDidData from \"./dataRetrieval/getDidData\";\n\nimport ProfileList from \"./profileList/profileList\";\nimport ProfileButtons from \"./profileButtons/profileButtons\";\nimport ProfileTotal from \"./profileTotal/profileTotal\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getApi = async listToRender => {\n  let promises = [];\n  let profileListContainer = {};\n  listToRender.forEach(profile => {\n    promises.push(axios.get(`http://localhost:5000/${profile}`));\n    Promise.all(promises).then(async result => {\n      console.log(200);\n\n      switch (profile) {\n        case \"Devices\":\n          profileListContainer['devices'] = {\n            \"devices\": await getDeviceData(result[0])\n          };\n          break;\n\n        case \"Users\":\n          profileListContainer['users'] = {\n            \"users\": await getUserData(result[1])\n          };\n          break;\n\n        default:\n          return;\n      }\n    }).catch(err => console.log(err));\n  });\n  return new Promise((resolve, reject) => {\n    console.log(profileListContainer);\n    resolve(profileListContainer);\n    reject(err => console.log(\"Could not retireve data.\"));\n  });\n}; //Extends Main\n\n\nexport default function Main() {\n  _s();\n\n  const [profileData, setProfileData] = useState([]);\n  const [listToRender, setListToRender] = useState([\"Devices\", \"Users\"]);\n  const [profileDataToRender, setProfileDataToRender] = useState([]);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50);\n  const [focused, setFocused] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      await getApi(listToRender).then(res => console.log(res));\n    }\n\n    getData(); // Removed listToRender dependency so DOM does not re-render every time\n    // profile button is clicked\n    // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.main,\n    children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n      listToRender: listToRender,\n      setListToRender: setListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.containerLeft,\n      children: [/*#__PURE__*/_jsxDEV(ProfileList, {\n        focused: focused,\n        setFocused: setFocused,\n        listToRender: listToRender,\n        profileData: profileData,\n        profileDataToRender: profileDataToRender,\n        setProfileDataToRender: setProfileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Focused, {\n        focused: focused,\n        setFocused: setFocused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileTotal, {\n      listToRender: listToRender,\n      profileDataToRender: profileDataToRender,\n      totalToRenderNumber: totalToRenderNumber,\n      setTotalToRenderNumber: setTotalToRenderNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"wvA5wBNLpfvFyK7QKOEeFP9U3U4=\");\n\n_c = Main;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/main.jsx"],"names":["React","useEffect","useState","style","getDeviceData","getUserData","Focused","ProfileList","ProfileButtons","ProfileTotal","axios","getApi","listToRender","promises","profileListContainer","forEach","profile","push","get","Promise","all","then","result","console","log","catch","err","resolve","reject","Main","profileData","setProfileData","setListToRender","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","focused","setFocused","getData","res","main","containerLeft"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\r\nimport * as style from \"../css/light/main\";\r\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\r\nimport getUserData from \"./dataRetrieval/getUserData\";\r\nimport Focused from \"./focused/focused\"\r\n// import getDidData from \"./dataRetrieval/getDidData\";\r\nimport ProfileList from \"./profileList/profileList\"\r\nimport ProfileButtons from \"./profileButtons/profileButtons\"\r\nimport ProfileTotal from \"./profileTotal/profileTotal\"\r\nimport axios from 'axios';\r\n\r\nconst getApi = async (listToRender) => {\r\n  let promises = []\r\n  let profileListContainer = {}\r\n\r\n  listToRender.forEach(profile => {\r\n    promises.push(axios.get(`http://localhost:5000/${profile}`))\r\n    Promise.all(promises)\r\n      .then(async result => {\r\n        console.log(200)\r\n        switch(profile) {\r\n          case \"Devices\":\r\n            profileListContainer['devices'] = {\"devices\": await getDeviceData(result[0])}\r\n            break;\r\n          case \"Users\":\r\n            profileListContainer['users'] = {\"users\": await getUserData(result[1])}\r\n            break;\r\n          default: return;\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  })\r\n\r\n  return new Promise((resolve, reject) => {\r\n    console.log(profileListContainer)\r\n    resolve(profileListContainer)\r\n    reject(err => console.log(\"Could not retireve data.\"))\r\n  })\r\n}\r\n\r\n//Extends Main\r\nexport default function Main() {\r\n  const [profileData, setProfileData] = useState([])\r\n  const [listToRender, setListToRender] = useState([\"Devices\", \"Users\"])\r\n  const [profileDataToRender, setProfileDataToRender] = useState([])\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50)\r\n  const [focused, setFocused] = useState([])\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      await getApi(listToRender)\r\n        .then(res => console.log(res))\r\n    }\r\n\r\n    getData()\r\n    \r\n    \r\n  // Removed listToRender dependency so DOM does not re-render every time\r\n  // profile button is clicked\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div style={style.main}>\r\n      <ProfileButtons\r\n        listToRender={listToRender}\r\n        setListToRender={setListToRender}/>\r\n      <div style={style.containerLeft}>\r\n        <ProfileList \r\n          focused={focused}\r\n          setFocused={setFocused}\r\n          listToRender={listToRender}\r\n          profileData={profileData}\r\n          profileDataToRender={profileDataToRender}\r\n          setProfileDataToRender={setProfileDataToRender}\r\n          totalToRenderNumber={totalToRenderNumber}/>\r\n        <Focused focused={focused} setFocused={setFocused}/>\r\n      </div>\r\n      <ProfileTotal \r\n        listToRender={listToRender}\r\n        profileDataToRender={profileDataToRender} \r\n        totalToRenderNumber={totalToRenderNumber} \r\n        setTotalToRenderNumber={setTotalToRenderNumber}/>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}