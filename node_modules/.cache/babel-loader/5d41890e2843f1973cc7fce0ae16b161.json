{"ast":null,"code":"export default function getHcsLink(profile, location_hierarchy) {\n  let link = \"\";\n  let store = \"\";\n\n  try {\n    let pkid = profile['meta']['pkid'];\n    let type = `link_${profile['type'].slice(0, -1)}`;\n    if (profile['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\";\n    if (profile['meta']['hierarchy'].split(\"Store \").length === 1) store = \"londond_drugs\";else store = \"store_\" + profile['meta']['hierarchy'].split(\"Store \")[1];\n    profile['meta']['hierarchy'].split(\"Store \");\n    link = location_hierarchy[0][type];\n    link = link.replace(\"{1}\", location_hierarchy[1][store]);\n    link = link.replace(\"{2}\", pkid);\n  } catch {\n    /*catch non-existing device*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["getHcsLink","profile","location_hierarchy","link","store","pkid","type","slice","includes","split","length","replace"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,kBAA7B,EAAiD;AAC9D,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAI;AACF,QAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAAX;AACA,QAAIK,IAAI,GAAI,QAAOL,OAAO,CAAC,MAAD,CAAP,CAAgBM,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAA6B,EAAhD;AAEA,QAAIN,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BO,QAA7B,CAAsC,aAAtC,CAAJ,EAA0DJ,KAAK,GAAG,aAAR;AAC1D,QAAIH,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BQ,KAA7B,CAAmC,QAAnC,EAA6CC,MAA7C,KAAwD,CAA5D,EAA+DN,KAAK,GAAG,eAAR,CAA/D,KACKA,KAAK,GAAG,WAAWH,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BQ,KAA7B,CAAmC,QAAnC,EAA6C,CAA7C,CAAnB;AAELR,IAAAA,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BQ,KAA7B,CAAmC,QAAnC;AAEAN,IAAAA,IAAI,GAAGD,kBAAkB,CAAC,CAAD,CAAlB,CAAsBI,IAAtB,CAAP;AACAH,IAAAA,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,KAAb,EAAoBT,kBAAkB,CAAC,CAAD,CAAlB,CAAsBE,KAAtB,CAApB,CAAP;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,KAAb,EAAoBN,IAApB,CAAP;AACD,GAbD,CAeA,MAAM;AAAC;AAA8B;;AAErC,SAAOF,IAAP;AACD","sourcesContent":["export default function getHcsLink(profile, location_hierarchy) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  try {\r\n    let pkid = profile['meta']['pkid']\r\n    let type = `link_${profile['type'].slice(0, -1)}`\r\n\r\n    if (profile['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\"\r\n    if (profile['meta']['hierarchy'].split(\"Store \").length === 1) store = \"londond_drugs\"\r\n    else store = \"store_\" + profile['meta']['hierarchy'].split(\"Store \")[1]\r\n\r\n    profile['meta']['hierarchy'].split(\"Store \")\r\n    \r\n    link = location_hierarchy[0][type]\r\n    link = link.replace(\"{1}\", location_hierarchy[1][store])\r\n    link = link.replace(\"{2}\", pkid)\r\n  }\r\n\r\n  catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}