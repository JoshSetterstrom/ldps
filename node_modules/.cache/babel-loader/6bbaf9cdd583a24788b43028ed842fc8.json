{"ast":null,"code":"import profiles from \"../data/profileList.json\";\nexport default function getDeviceData() {\n  let profileList = [];\n\n  const {\n    MongoClient\n  } = require('mongodb');\n\n  const client = newMongoClient(\"mongodb://localhost:27017\");\n  profiles['devices'].forEach((device, i) => {\n    print(client); // const data = require(`../data/devices/${device}.json`);\n\n    profileList.push([{\n      type: \"mac\",\n      index: \"MAC Address\",\n      data: function () {\n        try {\n          return !data.data.name.toUpperCase() ? \"\" : data.data.name.toUpperCase();\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"product\",\n      index: \"Product\",\n      data: function () {\n        try {\n          return !data.data.product ? \"\" : data.data.product;\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"user\",\n      index: \"User ID\",\n      data: function () {\n        try {\n          return !data.data.ownerUserName ? \"\" : data.data.ownerUserName;\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"description\",\n      index: \"Description\",\n      data: function () {\n        try {\n          return !data.data.description ? \"\" : data.data.description;\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"primary\",\n      index: \"Primary Line\",\n      data: function () {\n        try {\n          return !data.data.lines.line[0].dirn.pattern ? \"\" : data.data.lines.line[0].dirn.pattern;\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"mask\",\n      index: \"E164 Mask\",\n      data: function () {\n        try {\n          return !data.data.lines.line[0].e164Mask ? \"\" : data.data.lines.line[0].e164Mask;\n        } catch {\n          return \"\";\n        }\n      }()\n    }, {\n      type: \"location\",\n      index: \"Location\",\n      data: function () {\n        try {\n          return !data.meta.hierarchy.split(\"_\").pop() ? \"\" : data.meta.hierarchy.split(\"_\").pop();\n        } catch {\n          return \"\";\n        }\n      }()\n    }]);\n  });\n  return profileList;\n}\n;","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDeviceData.js"],"names":["profiles","getDeviceData","profileList","MongoClient","require","client","newMongoClient","forEach","device","i","print","push","type","index","data","name","toUpperCase","product","ownerUserName","description","lines","line","dirn","pattern","e164Mask","meta","hierarchy","split","pop"],"mappings":"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","sourcesContent":["import profiles from \"../data/profileList.json\";\r\n\r\nexport default function getDeviceData() {\r\n  let profileList = [];\r\n  const {MongoClient} = require('mongodb');\r\n  const client = newMongoClient(\"mongodb://localhost:27017\")\r\n\r\n  profiles['devices'].forEach((device, i) => {\r\n    print(client)\r\n    // const data = require(`../data/devices/${device}.json`);\r\n\r\n    profileList.push([\r\n      {\r\n        type: \"mac\",\r\n        index: \"MAC Address\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.name.toUpperCase() \r\n            ? \"\"\r\n            : data.data.name.toUpperCase() \r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"product\",\r\n        index: \"Product\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.product\r\n            ? \"\"\r\n            : data.data.product\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"user\",\r\n        index: \"User ID\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.ownerUserName\r\n            ? \"\"\r\n            : data.data.ownerUserName\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"description\",\r\n        index: \"Description\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.description\r\n            ? \"\"\r\n            : data.data.description\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.lines.line[0].dirn.pattern\r\n            ? \"\"\r\n            : data.data.lines.line[0].dirn.pattern\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"mask\",\r\n        index: \"E164 Mask\",\r\n        data: function() {\r\n          try {\r\n            return !data.data.lines.line[0].e164Mask\r\n            ? \"\"\r\n            : data.data.lines.line[0].e164Mask\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      },\r\n      {\r\n        type: \"location\",\r\n        index: \"Location\",\r\n        data: function() {\r\n          try {\r\n            return !data.meta.hierarchy.split(\"_\").pop()\r\n            ? \"\"\r\n            : data.meta.hierarchy.split(\"_\").pop()\r\n          } \r\n          catch {return \"\"}\r\n        }()\r\n      }\r\n    ]);\r\n  });\r\n\r\n  return profileList;\r\n};"]},"metadata":{},"sourceType":"module"}