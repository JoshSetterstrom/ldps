{"ast":null,"code":"import profiles from \"../../data/allstream_profile_list.json\";\nimport validateString from \"./validateString\";\nimport getHcsLink from \"./getHcsLink\";\nexport default function getDeviceData() {\n  let profileList = [];\n  profiles['devices'].forEach((device, i) => {\n    const data = require(`../../data/devices/${device}.json`);\n\n    profileList.push([{\n      key: i,\n      type: \"mac\",\n      index: \"MAC Address\",\n      data: () => {\n        try {\n          return data.resources[0].data.name.toUpperCase();\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.name.toUpperCase())\n\n    }, {\n      key: i,\n      type: \"product\",\n      index: \"Product\",\n      data: () => {\n        try {\n          return data.resources[0].data.product;\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.product)\n\n    }, {\n      key: i,\n      type: \"user\",\n      index: \"User ID\",\n      data: () => {\n        try {\n          return data.resources[0].data.ownerUserName;\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.ownerUserName)\n\n    }, {\n      key: i,\n      type: \"description\",\n      index: \"Description\",\n      data: () => {\n        try {\n          return data.resources[0].data.description;\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.description)\n\n    }, {\n      key: i,\n      type: \"primary\",\n      index: \"Primary Line\",\n      data: () => {\n        try {\n          return data.resources[0].data.lines.line[0].dirn.pattern;\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.lines.line[0].dirn.pattern)\n\n    }, {\n      key: i,\n      type: \"mask\",\n      index: \"E164 Mask\",\n      data: () => {\n        try {\n          return data.resources[0].data.lines.line[0].e164Mask;\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].data.lines.line[0].e164Mask)\n\n    }, {\n      key: i,\n      type: \"location\",\n      index: \"Location\",\n      data: () => {\n        try {\n          return data.resources[0].data.name.toUpperCase();\n        } catch {\n          return \"\";\n        }\n      } // data: validateString(data.resources[0].meta.hierarchy.split(\"_\").pop())\n\n    }, {\n      key: i,\n      type: \"link\",\n      index: \"Link\",\n      data: getHcsLink(data.resources[0].data.name, \"devices\")\n    }]);\n  });\n  return profileList;\n}\n;\ngetDeviceData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/getDeviceData.js"],"names":["profiles","validateString","getHcsLink","getDeviceData","profileList","forEach","device","i","data","require","push","key","type","index","resources","name","toUpperCase","product","ownerUserName","description","lines","line","dirn","pattern","e164Mask"],"mappings":"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","sourcesContent":["import profiles from \"../../data/allstream_profile_list.json\"\r\nimport validateString from \"./validateString\"\r\nimport getHcsLink from \"./getHcsLink\";\r\n\r\nexport default function getDeviceData() {\r\n  let profileList = [];\r\n\r\n  profiles['devices'].forEach((device, i) => {\r\n    const data = require(`../../data/devices/${device}.json`);\r\n\r\n    profileList.push([\r\n      {\r\n        key: i,\r\n        type: \"mac\",\r\n        index: \"MAC Address\",\r\n        data: () => {try {return data.resources[0].data.name.toUpperCase()} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.name.toUpperCase())\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"product\",\r\n        index: \"Product\",\r\n        data: () => {try {return data.resources[0].data.product} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.product)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"user\",\r\n        index: \"User ID\",\r\n        data: () => {try {return data.resources[0].data.ownerUserName} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.ownerUserName)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"description\",\r\n        index: \"Description\",\r\n        data: () => {try {return data.resources[0].data.description} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.description)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: () => {try {return data.resources[0].data.lines.line[0].dirn.pattern} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.lines.line[0].dirn.pattern)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"mask\",\r\n        index: \"E164 Mask\",\r\n        data: () => {try {return data.resources[0].data.lines.line[0].e164Mask} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].data.lines.line[0].e164Mask)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"location\",\r\n        index: \"Location\",\r\n        data: () => {try {return data.resources[0].data.name.toUpperCase()} catch {return \"\"}}\r\n        // data: validateString(data.resources[0].meta.hierarchy.split(\"_\").pop())\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"link\",\r\n        index: \"Link\",\r\n        data: getHcsLink(data.resources[0].data.name, \"devices\")\r\n      }\r\n    ]);\r\n  });\r\n  return profileList;\r\n};\r\n\r\ngetDeviceData()"]},"metadata":{},"sourceType":"module"}