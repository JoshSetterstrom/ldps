{"ast":null,"code":"export default function getUserData(data) {\n  let profileList = [];\n  data['data'].forEach(profile => {\n    profileList.push([{\n      index: \"User ID\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['userid'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Display\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['displayName'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Primary Line\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['primaryExtension']['pattern'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Department\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['title'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"MAC Address\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['Phone'][0]['name'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Location\",\n      data: (() => {\n        try {\n          let destruct = profile['meta']['hierarchy'];\n          destruct = destruct.split(\"London Drugs.\")[1];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"\",\n      index: \"\",\n      data: \"\"\n    }]);\n  });\n  return new Promise((resolve, reject) => {\n    resolve(profileList);\n    reject(\"Unable to retireve users.\");\n  });\n}\n;","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getUserData.js"],"names":["getUserData","data","profileList","forEach","profile","push","index","destruct","split","type","Promise","resolve","reject"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIC,WAAW,GAAG,EAAlB;AAEAD,EAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaE,OAAb,CAAqBC,OAAO,IAAI;AAC9BF,IAAAA,WAAW,CAACG,IAAZ,CAAiB,CACf;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,QAAhB,CAAf;AACA,iBAAOG,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KADe,EAWf;AACED,MAAAA,KAAK,EAAE,SADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,aAAhB,CAAf;AACA,iBAAOG,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAXe,EAqBf;AACED,MAAAA,KAAK,EAAE,cADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,kBAAhB,EAAoC,SAApC,CAAf;AACA,iBAAOG,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KArBe,EA+Bf;AACED,MAAAA,KAAK,EAAE,YADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,OAAhB,CAAf;AACA,iBAAOG,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KA/Be,EAyCf;AACED,MAAAA,KAAK,EAAE,aADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,MAA5B,CAAf;AACA,iBAAOG,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAzCe,EAmDf;AACED,MAAAA,KAAK,EAAE,UADT;AAEEL,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIM,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,CAAf;AACAG,UAAAA,QAAQ,GAAGA,QAAQ,CAACC,KAAT,CAAe,eAAf,EAAgC,CAAhC,CAAX;AACA,iBAAOD,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAJD,CAKA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OAPK;AAFR,KAnDe,EA8Df;AACEE,MAAAA,IAAI,EAAE,EADR;AAEEH,MAAAA,KAAK,EAAE,EAFT;AAGEL,MAAAA,IAAI,EAAE;AAHR,KA9De,CAAjB;AAoED,GArED;AAuEA,SAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCD,IAAAA,OAAO,CAACT,WAAD,CAAP;AACAU,IAAAA,MAAM,CAAC,2BAAD,CAAN;AACD,GAHM,CAAP;AAID;AAAA","sourcesContent":["export default function getUserData(data) {\r\n  let profileList = [];\r\n  \r\n  data['data'].forEach(profile => {\r\n    profileList.push([\r\n      {\r\n        index: \"User ID\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['userid'];\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Display\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['displayName'];\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Primary Line\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['primaryExtension']['pattern'];\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Department\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['title'];\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"MAC Address\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['Phone'][0]['name'];\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['meta']['hierarchy'];\r\n            destruct = destruct.split(\"London Drugs.\")[1]\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"\",\r\n        index: \"\",\r\n        data: \"\"\r\n      }\r\n    ]);\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(profileList)\r\n    reject(\"Unable to retireve users.\")\r\n  })\r\n};"]},"metadata":{},"sourceType":"module"}