{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\profileTotal\\\\profileTotalInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\"; // Extends ProfileTotal //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileTotalInput(_ref) {\n  _s();\n\n  let {\n    style,\n    totalToRenderNumber,\n    userInputRecord,\n    setUserInputRecord,\n    setTotalToRenderNumber\n  } = _ref;\n  // Event listener to check items/page value on user input // \n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\n  }, [setTotalToRenderNumber, userInputRecord]); // Renders items/page element //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalInputContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitleOther,\n      children: \"Items/Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: totalToRenderNumber,\n      style: style.totalInput,\n      onChange: e => setUserInputRecord(parseInt(e.target.value)),\n      onKeyPress: onKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalButton,\n      onClick: () => setTotalToRenderNumber(userInputRecord),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButtonLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileTotalInput, \"Lul42KsYeOfF/ZA3NNc0vJEvm2s=\");\n\n_c = ProfileTotalInput;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileTotalInput\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileTotal/profileTotalInput.jsx"],"names":["useCallback","ProfileTotalInput","style","totalToRenderNumber","userInputRecord","setUserInputRecord","setTotalToRenderNumber","onKeyPress","e","key","totalInputContainer","totalTitleOther","totalInput","parseInt","target","value","totalButton","totalButtonLine"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CAEA;;;AACA,eAAe,SAASC,iBAAT,OAEgC;AAAA;;AAAA,MAFL;AACxCC,IAAAA,KADwC;AACjCC,IAAAA,mBADiC;AACZC,IAAAA,eADY;AAExCC,IAAAA,kBAFwC;AAEpBC,IAAAA;AAFoB,GAEK;AAE7C;AACA,QAAMC,UAAU,GAAGP,WAAW,CAACQ,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBH,sBAAsB,CAACF,eAAD,CAAtB;AACxB,GAF6B,EAE3B,CAACE,sBAAD,EAAyBF,eAAzB,CAF2B,CAA9B,CAH6C,CAQ7C;;AACA,sBACE;AAAK,IAAA,KAAK,EAAEF,KAAK,CAACQ,mBAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAER,KAAK,CAACS,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACI,MAAA,WAAW,EAAER,mBADjB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACU,UAFjB;AAGI,MAAA,QAAQ,EAAEJ,CAAC,IAAIH,kBAAkB,CAACQ,QAAQ,CAACL,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT,CAHrC;AAII,MAAA,UAAU,EAAER;AAJhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AACI,MAAA,KAAK,EAAEL,KAAK,CAACc,WADjB;AAEI,MAAA,OAAO,EAAE,MAAMV,sBAAsB,CAACF,eAAD,CAFzC;AAAA,6BAGE;AAAK,QAAA,KAAK,EAAEF,KAAK,CAACe;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/BuBhB,iB;;KAAAA,iB;AA+BvB","sourcesContent":["import { useCallback } from \"react\";\r\n\r\n// Extends ProfileTotal //\r\nexport default function ProfileTotalInput({\r\n  style, totalToRenderNumber, userInputRecord,\r\n  setUserInputRecord, setTotalToRenderNumber}) {\r\n\r\n  // Event listener to check items/page value on user input // \r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\r\n  }, [setTotalToRenderNumber, userInputRecord]);\r\n\r\n\r\n  // Renders items/page element //\r\n  return (\r\n    <div style={style.totalInputContainer}>\r\n      <div style={style.totalTitleOther}>Items/Page</div>\r\n\r\n      {/* Renders input element for items/page referencing onKeyPress */}\r\n      <input \r\n          placeholder={totalToRenderNumber} \r\n          style={style.totalInput} \r\n          onChange={e => setUserInputRecord(parseInt(e.target.value))}\r\n          onKeyPress={onKeyPress}/>\r\n\r\n      {/* Renders the enter button for items/page */}\r\n      <div \r\n          style={style.totalButton}\r\n          onClick={() => setTotalToRenderNumber(userInputRecord)}>\r\n        <div style={style.totalButtonLine}></div>  \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}