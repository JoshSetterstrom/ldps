{"ast":null,"code":"export default function getLineData(data) {\n  return data.map(profile => {\n    return [{\n      type: \"lines\",\n      index: \"Line\",\n      data: profile['data']['pattern'] ? profile['data']['pattern'] : \"\"\n    }, {\n      index: \"Alerting Name\",\n      data: profile['data']['alertingName'] ? profile['data']['alertingName'] : \"\"\n    }, {\n      index: \"Description\",\n      data: profile['data']['description'] ? profile['data']['description'] : \"\"\n    }, {\n      index: \"Device\",\n      data: profile['data']['associatedDevices'] ? profile['data']['associatedDevices']['device'][0] : \"\"\n    }, {\n      index: \"Forward\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['callForwardAll']['destination'];\n\n          if (destruct === null) {\n            let vm = profile['data']['callForwardAll']['forwardToVoiceMail'];\n            return vm ? \"Voicemail\" : \"None\";\n          }\n\n          return destruct;\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Location\",\n      data: profile['meta']['hierarchy'] ? profile['meta']['hierarchy'].split(\"London Drugs.\")[1] : \"\"\n    }];\n  });\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldps/src/common/api/getLineData.js"],"names":["getLineData","data","map","profile","type","index","destruct","vm","split"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACxC,SAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AACzB,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEJ,MAAAA,IAAI,EAAEE,OAAO,CAAC,MAAD,CAAP,CAAgB,SAAhB,IAA6BA,OAAO,CAAC,MAAD,CAAP,CAAgB,SAAhB,CAA7B,GAA0D;AAHlE,KADK,EAML;AACEE,MAAAA,KAAK,EAAE,eADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAAC,MAAD,CAAP,CAAgB,cAAhB,IAAkCA,OAAO,CAAC,MAAD,CAAP,CAAgB,cAAhB,CAAlC,GAAoE;AAF5E,KANK,EAUL;AACEE,MAAAA,KAAK,EAAE,aADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAAC,MAAD,CAAP,CAAgB,aAAhB,IAAiCA,OAAO,CAAC,MAAD,CAAP,CAAgB,aAAhB,CAAjC,GAAkE;AAF1E,KAVK,EAcL;AACEE,MAAAA,KAAK,EAAE,QADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAAC,MAAD,CAAP,CAAgB,mBAAhB,IACAA,OAAO,CAAC,MAAD,CAAP,CAAgB,mBAAhB,EAAqC,QAArC,EAA+C,CAA/C,CADA,GACoD;AAH5D,KAdK,EAmBL;AACEE,MAAAA,KAAK,EAAE,SADT;AAEEJ,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIK,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgB,gBAAhB,EAAkC,aAAlC,CAAf;;AACA,cAAIG,QAAQ,KAAK,IAAjB,EAAuB;AACrB,gBAAIC,EAAE,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgB,gBAAhB,EAAkC,oBAAlC,CAAT;AACA,mBAAOI,EAAE,GAAG,WAAH,GAAgB,MAAzB;AACD;;AACD,iBAAOD,QAAP;AACD,SAPD,CAQA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OAVK;AAFR,KAnBK,EAiCL;AACED,MAAAA,KAAK,EAAE,UADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,IACAA,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BK,KAA7B,CAAmC,eAAnC,EAAoD,CAApD,CADA,GACyD;AAHjE,KAjCK,CAAP;AAuCD,GAxCM,CAAP;AAyCD","sourcesContent":["export default function getLineData(data) {\r\n  return data.map(profile => {\r\n    return [\r\n      {\r\n        type: \"lines\",\r\n        index: \"Line\",\r\n        data: profile['data']['pattern'] ? profile['data']['pattern'] : \"\"\r\n      },\r\n      {\r\n        index: \"Alerting Name\",\r\n        data: profile['data']['alertingName'] ? profile['data']['alertingName'] : \"\"\r\n      },\r\n      {\r\n        index: \"Description\",\r\n        data: profile['data']['description'] ? profile['data']['description'] : \"\"\r\n      },\r\n      {\r\n        index: \"Device\",\r\n        data: profile['data']['associatedDevices']\r\n            ? profile['data']['associatedDevices']['device'][0] : \"\"\r\n      },\r\n      {\r\n        index: \"Forward\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['callForwardAll']['destination']\r\n            if (destruct === null) {\r\n              let vm = profile['data']['callForwardAll']['forwardToVoiceMail']\r\n              return vm ? \"Voicemail\": \"None\"\r\n            }\r\n            return destruct\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: profile['meta']['hierarchy']\r\n            ? profile['meta']['hierarchy'].split(\"London Drugs.\")[1] : \"\"\r\n      }\r\n    ]\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}