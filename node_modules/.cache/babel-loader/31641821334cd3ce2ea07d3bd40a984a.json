{"ast":null,"code":"export default function getDeviceData(data) {\n  let profileList = [];\n  data['data'].forEach(profile => {\n    profileList.push([{\n      // type: \"mac\",\n      index: \"MAC Address\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['name'].toUpperCase();\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n\n        ;\n      })()\n    }, {\n      // type: \"product\",\n      index: \"Product\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['product'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      // type: \"user\",\n      index: \"User ID\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['ownerUserName'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      // type: \"description\",\n      index: \"Description\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['description'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      // type: \"primary\",\n      index: \"Primary Line\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['lines']['line'][0]['dirn']['pattern'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      // type: \"mask\",\n      index: \"E164 Mask\",\n      data: (() => {\n        try {\n          let destruct = profile['lines']['line'][0]['e164Mask'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      // type: \"location\",\n      index: \"Location\",\n      data: (() => {\n        try {\n          let destruct = profile['meta']['hierarchy'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }]);\n  });\n  return new Promise((resolve, reject) => {\n    resolve(profileList);\n    reject(\"Unable to retireve devices.\");\n  });\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDeviceData.js"],"names":["getDeviceData","data","profileList","forEach","profile","push","index","destruct","toUpperCase","Promise","resolve","reject"],"mappings":"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","sourcesContent":["export default function getDeviceData(data) {\r\n  let profileList = [];\r\n\r\n  data['data'].forEach(profile => {\r\n    profileList.push([\r\n      {\r\n        // type: \"mac\",\r\n        index: \"MAC Address\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['name'].toUpperCase();\r\n            return destruct ? destruct : \"\";\r\n          }\r\n          catch {return \"\"};\r\n        })()\r\n      },\r\n      {\r\n        // type: \"product\",\r\n        index: \"Product\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['product']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        // type: \"user\",\r\n        index: \"User ID\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['ownerUserName']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        // type: \"description\",\r\n        index: \"Description\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['description']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        // type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['lines']['line'][0]['dirn']['pattern']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        // type: \"mask\",\r\n        index: \"E164 Mask\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['lines']['line'][0]['e164Mask']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        // type: \"location\",\r\n        index: \"Location\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['meta']['hierarchy']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      }\r\n    ])\r\n  })\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(profileList)\r\n    reject(\"Unable to retireve devices.\")\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}