{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\total.jsx\";\nimport React, { useCallback } from \"react\";\nimport * as style from \"../../css/light/totalBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total({\n  setPageNumber,\n  profile,\n  listToRender\n}) {\n  console.log(profile);\n\n  const renderTotalItems = () => {\n    return listToRender.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalBarItem,\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitle1,\n      children: \"Total Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), renderTotalItems()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this); // const onKeyPress = useCallback(e => {\n  //   if (e.key === \"Enter\") setPageNumber(tempItem)\n  // }, [setPageNumber, tempItem])\n  // const renderTotalBarItems = () => {\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\n  //     <div style={style.totalBarItem}>\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\n  //     </div>\n  //   ))\n  // }\n  // return (\n  //   <div style={style.totalContainer}>\n  //     <div style={style.totalTitle1}>Total Count</div>\n  //     {renderTotalBarItems()}\n  //     <div style={style.totalTitle2}>Items/Page</div>\n  //     <input placeholder=\"10\" style={style.totalInput} \n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\n  //       onKeyPress={onKeyPress}\n  //     />\n  //     <div \n  //       style={style.totalButton}\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\n  //     >\n  //       <div style={style.totalButtonLine}></div>\n  //     </div>\n  //   </div>\n  // )\n}\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/total.jsx"],"names":["React","useCallback","style","Total","setPageNumber","profile","listToRender","console","log","renderTotalItems","map","item","i","totalBarItem","totalContainer","totalTitle1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAf,EAAuD;AAEpEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AAEA,QAAMI,gBAAgB,GAAG,MAAM;AAC7B,WAAOH,YAAY,CAACI,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBACtB;AAAK,MAAA,KAAK,EAAEV,KAAK,CAACW,YAAlB;AAAA,gBAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAET,KAAK,CAACY,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEZ,KAAK,CAACa,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,gBAAgB,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAVoE,CAiBpE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;KA9CuBN,K","sourcesContent":["import React, {useCallback} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function Total({setPageNumber, profile, listToRender}) {\r\n\r\n  console.log(profile)\r\n\r\n  const renderTotalItems = () => {\r\n    return listToRender.map((item, i) => (\r\n      <div style={style.totalBarItem}>{item}</div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitle1}>Total Count</div>\r\n      {renderTotalItems()}\r\n    </div>\r\n  )\r\n\r\n  // const onKeyPress = useCallback(e => {\r\n  //   if (e.key === \"Enter\") setPageNumber(tempItem)\r\n  // }, [setPageNumber, tempItem])\r\n\r\n  // const renderTotalBarItems = () => {\r\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\r\n  //     <div style={style.totalBarItem}>\r\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\r\n  //     </div>\r\n  //   ))\r\n  // }\r\n\r\n  // return (\r\n  //   <div style={style.totalContainer}>\r\n  //     <div style={style.totalTitle1}>Total Count</div>\r\n  //     {renderTotalBarItems()}\r\n  //     <div style={style.totalTitle2}>Items/Page</div>\r\n  //     <input placeholder=\"10\" style={style.totalInput} \r\n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\r\n  //       onKeyPress={onKeyPress}\r\n  //     />\r\n  //     <div \r\n  //       style={style.totalButton}\r\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\r\n  //     >\r\n  //       <div style={style.totalButtonLine}></div>\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}"]},"metadata":{},"sourceType":"module"}