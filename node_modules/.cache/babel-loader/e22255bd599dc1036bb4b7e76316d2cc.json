{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\LDREACT\\\\src\\\\common\\\\total\\\\total.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport * as style from \"../../css/light/totalBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total({\n  totalToRenderNumber,\n  setTotatToRenderNumber,\n  profile,\n  listToRender\n}) {\n  _s();\n\n  const [userInputRecord, setUserInputRecord] = useState(\"\");\n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setTotatToRenderNumber(userInputRecord);\n  }, [setTotatToRenderNumber, userInputRecord]); // const renderTotalItems = () => {\n  //   return listToRender?.map((item, i) => (\n  //     <div style={style.totalBarItem}>\n  //       {`${item}: ${profile[item.toLowerCase()]?.length}`}\n  //     </div>\n  //   ))\n  // }\n\n  const renderItemsPerPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginLeft: \"auto\",\n        paddingRight: \"3px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalTitle2,\n        children: \"Items/Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: totalToRenderNumber,\n        style: style.totalInput,\n        onChange: e => setUserInputRecord(parseInt(e.target.value)),\n        onKeyPress: onKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButton,\n        onClick: () => setTotatToRenderNumber(userInputRecord),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style.totalButtonLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitle1,\n      children: \"Total Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Total, \"3dh7auNqujkmNsFgyGjhAzUMpD4=\");\n\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/total/total.jsx"],"names":["React","useCallback","useState","style","Total","totalToRenderNumber","setTotatToRenderNumber","profile","listToRender","userInputRecord","setUserInputRecord","onKeyPress","e","key","renderItemsPerPage","display","marginLeft","paddingRight","totalTitle2","totalInput","parseInt","target","value","totalButton","totalButtonLine","totalContainer","totalTitle1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,mBAAD;AAAsBC,EAAAA,sBAAtB;AAA8CC,EAAAA,OAA9C;AAAuDC,EAAAA;AAAvD,CAAf,EAAqF;AAAA;;AAClG,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMS,UAAU,GAAGV,WAAW,CAACW,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBP,sBAAsB,CAACG,eAAD,CAAtB;AACxB,GAF6B,EAE3B,CAACH,sBAAD,EAAyBG,eAAzB,CAF2B,CAA9B,CAHkG,CAOlG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE,MAA9B;AAAsCC,QAAAA,YAAY,EAAE;AAApD,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEd,KAAK,CAACe,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACI,QAAA,WAAW,EAAEb,mBADjB;AAEI,QAAA,KAAK,EAAEF,KAAK,CAACgB,UAFjB;AAGI,QAAA,QAAQ,EAAEP,CAAC,IAAIF,kBAAkB,CAACU,QAAQ,CAACR,CAAC,CAACS,MAAF,CAASC,KAAV,CAAT,CAHrC;AAII,QAAA,UAAU,EAAEX;AAJhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACI,QAAA,KAAK,EAAER,KAAK,CAACoB,WADjB;AAEI,QAAA,OAAO,EAAE,MAAMjB,sBAAsB,CAACG,eAAD,CAFzC;AAAA,+BAIE;AAAK,UAAA,KAAK,EAAEN,KAAK,CAACqB;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,KAAK,EAAErB,KAAK,CAACsB,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEtB,KAAK,CAACuB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGZ,kBAAkB,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1CuBV,K;;KAAAA,K","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function Total({totalToRenderNumber, setTotatToRenderNumber, profile, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\")\r\n\r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotatToRenderNumber(userInputRecord)\r\n  }, [setTotatToRenderNumber, userInputRecord])\r\n\r\n  // const renderTotalItems = () => {\r\n  //   return listToRender?.map((item, i) => (\r\n  //     <div style={style.totalBarItem}>\r\n  //       {`${item}: ${profile[item.toLowerCase()]?.length}`}\r\n  //     </div>\r\n  //   ))\r\n  // }\r\n\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div style={{display: \"flex\", marginLeft: \"auto\", paddingRight: \"3px\"}}>\r\n        <div style={style.totalTitle2}>Items/Page</div>\r\n        <input \r\n            placeholder={totalToRenderNumber} \r\n            style={style.totalInput} \r\n            onChange={e => setUserInputRecord(parseInt(e.target.value))}\r\n            onKeyPress={onKeyPress}\r\n        />\r\n        <div \r\n            style={style.totalButton}\r\n            onClick={() => setTotatToRenderNumber(userInputRecord)}\r\n        >\r\n          <div style={style.totalButtonLine}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitle1}>Total Count</div>\r\n      {/* {renderTotalItems()} */}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}