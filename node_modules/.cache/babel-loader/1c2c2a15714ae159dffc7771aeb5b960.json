{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\renderDidList.jsx\";\nimport ListDidItem from \"../listDidItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderDidList = (did, didDisplay) => {\n  let container = [];\n  let i = 0;\n\n  while (i < 100) {\n    if (!did[i]) break;\n    container.push(did[i]);\n    i++;\n  }\n\n  if (didDisplay) {\n    return container.map((item, i) => /*#__PURE__*/_jsxDEV(ListDidItem, {\n      did: item[0].data,\n      line: item[1].data,\n      location: item[2].data,\n      area: item[3].data,\n      description: item[4].data,\n      assigned: item[5].data\n    }, `ID${i}DID`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n};\n\nexport default renderDidList;","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/renderDidList.jsx"],"names":["ListDidItem","renderDidList","did","didDisplay","container","i","push","map","item","data"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACzC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAG,GAAX,EAAgB;AACd,QAAI,CAACH,GAAG,CAACG,CAAD,CAAR,EAAa;AACbD,IAAAA,SAAS,CAACE,IAAV,CAAeJ,GAAG,CAACG,CAAD,CAAlB;AACAA,IAAAA,CAAC;AACF;;AAED,MAAIF,UAAJ,EAAgB;AACd,WAAOC,SAAS,CAACG,GAAV,CAAc,CAACC,IAAD,EAAOH,CAAP,kBACnB,QAAC,WAAD;AAEA,MAAA,GAAG,EAAEG,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAFb;AAGA,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAHd;AAIA,MAAA,QAAQ,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQC,IAJlB;AAKA,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQC,IALd;AAMA,MAAA,WAAW,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQC,IANrB;AAOA,MAAA,QAAQ,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQC;AAPlB,OACM,KAAIJ,CAAE,KADZ;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAWD;AACF,CAtBD;;AAwBA,eAAeJ,aAAf","sourcesContent":["import ListDidItem from \"../listDidItem\"\r\n\r\nconst renderDidList = (did, didDisplay) => {\r\n  let container = []\r\n  let i = 0\r\n  while (i < 100) {\r\n    if (!did[i]) break\r\n    container.push(did[i])\r\n    i++;\r\n  }\r\n  \r\n  if (didDisplay) {\r\n    return container.map((item, i) => (\r\n      <ListDidItem\r\n      key={`ID${i}DID`}\r\n      did={item[0].data}\r\n      line={item[1].data}\r\n      location={item[2].data}\r\n      area={item[3].data}\r\n      description={item[4].data}\r\n      assigned={item[5].data}\r\n      />\r\n    ))\r\n  }\r\n}\r\n\r\nexport default renderDidList"]},"metadata":{},"sourceType":"module"}