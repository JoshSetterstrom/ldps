{"ast":null,"code":"export default function getHcsLink(type, profile, location_hierarchy) {\n  let link = \"\";\n  let store = \"\"; // try {\n\n  let file = require(`../data/${type}s/${profile}.json`);\n\n  let pkid = file.meta.pkid;\n  if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1];\n  link = location_hierarchy[0][`link_${type}`];\n  link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store]);\n  link = link.replace(\"{2}\", pkid);\n  console.log(link); // }\n  // catch {/*catch non-existing device*/}\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["getHcsLink","type","profile","location_hierarchy","link","store","file","require","pkid","meta","hierarchy","includes","split","replace","console","log"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,kBAAnC,EAAuD;AACpE,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ,CAFoE,CAIpE;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAE,WAAUN,IAAK,KAAIC,OAAQ,OAA7B,CAAlB;;AACA,MAAIM,IAAI,GAAGF,IAAI,CAACG,IAAL,CAAUD,IAArB;AAGA,MAAIF,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBC,QAApB,CAA6B,aAA7B,CAAJ,EAAiDN,KAAK,GAAG,aAAR,CAAjD,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBE,KAApB,CAA0B,QAA1B,EAAoC,CAApC,CAAnB;AAELR,EAAAA,IAAI,GAAGD,kBAAkB,CAAC,CAAD,CAAlB,CAAuB,QAAOF,IAAK,EAAnC,CAAP;AACAG,EAAAA,IAAI,GAAGA,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoBV,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,QAAtB,EAAgCE,KAAhC,CAApB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoBL,IAApB,CAAP;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAhBoE,CAiBpE;AAEA;;AAEA,SAAOA,IAAP;AACD","sourcesContent":["export default function getHcsLink(type, profile, location_hierarchy) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  // try {\r\n  let file = require(`../data/${type}s/${profile}.json`)\r\n  let pkid = file.meta.pkid\r\n\r\n  \r\n  if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n  else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1]\r\n  \r\n  link = location_hierarchy[0][`link_${type}`]\r\n  link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store])\r\n  link = link.replace(\"{2}\", pkid)\r\n\r\n  console.log(link)\r\n  // }\r\n\r\n  // catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}