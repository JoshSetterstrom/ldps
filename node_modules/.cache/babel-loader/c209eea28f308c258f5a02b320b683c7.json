{"ast":null,"code":"export default function getSearch(string, listToRender, profileData) {\n  /**Iterates through profileData data to filter profileData based on user input */\n  return listToRender.reduce((result, listItem) => {\n    listItem = listItem.toLowerCase();\n    console.log(listItem);\n    result[listItem] = profileData[listItem].filter(list => {\n      return list.some(item => {\n        let cleanItem = item['data'].toString().toLowerCase();\n        let cleanString = string.target.value.toLowerCase();\n        if (cleanItem.includes(cleanString)) return true;else return false;\n      });\n    });\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldps/src/common/api/getSearch.js"],"names":["getSearch","string","listToRender","profileData","reduce","result","listItem","toLowerCase","console","log","filter","list","some","item","cleanItem","toString","cleanString","target","value","includes"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,WAAzC,EAAsD;AAEnE;AACA,SAAOD,YAAY,CAACE,MAAb,CAAoB,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC/CA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,EAAX;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAD,IAAAA,MAAM,CAACC,QAAD,CAAN,GACEH,WAAW,CAACG,QAAD,CAAX,CAAsBI,MAAtB,CAA6BC,IAAI,IAAI;AACnC,aAAOA,IAAI,CAACC,IAAL,CAAUC,IAAI,IAAI;AACvB,YAAIC,SAAS,GAAKD,IAAI,CAAC,MAAD,CAAJ,CAAaE,QAAb,GAAwBR,WAAxB,EAAlB;AACA,YAAIS,WAAW,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAd,CAAoBX,WAApB,EAAlB;AAEA,YAAIO,SAAS,CAACK,QAAV,CAAmBH,WAAnB,CAAJ,EAAqC,OAAO,IAAP,CAArC,KACK,OAAO,KAAP;AACN,OANM,CAAP;AAOD,KARD,CADF;AAWA,WAAOX,MAAP;AAED,GAlBM,EAkBJ,EAlBI,CAAP;AAmBD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n\r\n  /**Iterates through profileData data to filter profileData based on user input */\r\n  return listToRender.reduce((result, listItem) => {\r\n    listItem = listItem.toLowerCase()\r\n\r\n    console.log(listItem)\r\n\r\n    result[listItem] = \r\n      profileData[listItem].filter(list => {\r\n        return list.some(item => {\r\n          let cleanItem   = item['data'].toString().toLowerCase()\r\n          let cleanString = string.target.value.toLowerCase()\r\n  \r\n          if (cleanItem.includes(cleanString)) return true\r\n          else return false\r\n        })\r\n      })\r\n\r\n    return result\r\n\r\n  }, {})\r\n}"]},"metadata":{},"sourceType":"module"}