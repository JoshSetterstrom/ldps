{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focusedList.jsx\";\nimport * as style from \"../../css/light/focusedList\"; // import AssociatedItem from '../searchList/associatedItem';\n\nimport FocusedTitle from \"./focusedTitle\";\nimport FocusedHistory from \"./focusedHistory\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet focusedDataTitle = {\n  backgroundColor: \"#4382BC\",\n  textAlign: \"center\"\n};\nlet focusedDataInfo = {\n  width: \"100%\"\n};\nexport default function FocusedList({\n  focused,\n  setFocused\n}) {\n  var _s = $RefreshSig$();\n\n  if (!focused[0]) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 27\n  }, this);\n\n  let focusedItem = require(`../../data/${focused[1]}/${focused[0]}.json`);\n\n  function ProfileJSON() {\n    _s();\n\n    const dataRef = useRef(null);\n    return getJson().map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dataRef,\n      onMouseEnter: e => {\n        e.currentTarget.style.backgroundColor = \"#b7eef5\";\n      },\n      onMouseLeave: e => {\n        e.currentTarget.style.backgroundColor = \"white\";\n      },\n      style: {\n        display: \"flex\",\n        backgroundColor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: focusedDataInfo,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  }\n\n  _s(ProfileJSON, \"BQofqMcm0s00HjNTute9RxapU3s=\");\n\n  function FocusedData() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"hidden\",\n        display: \"flex\"\n      },\n      children: [\"                                     \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: \"97%\",\n          margin: \"12px auto 0px auto\",\n          border: \"1px solid black\",\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: focusedDataTitle,\n          children: \"Current Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProfileJSON, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  function stringify(data) {\n    if (!data) return \"undefined\";\n    if (data === null) return \"undefined\";\n\n    if (typeof data === \"object\") {\n      return Object.keys(data).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            console.log(stringify(data[item]));\n          },\n          style: {\n            textDecoration: \"underline\",\n            color: \"blue\",\n            cursor: \"pointer\"\n          },\n          children: \"[Object]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this);\n  }\n\n  function getJson() {\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"11px\",\n          textIndent: \"3px\",\n          width: \"100%\"\n        },\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"11px\",\n          textIndent: \"3px\",\n          direction: \"rtl\",\n          width: \"100%\"\n        },\n        children: stringify(focusedItem.resources[0].data[item])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this));\n  }\n\n  if (focusedItem.resources[0].data.associatedDevices) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.focusedContainer,\n      children: [/*#__PURE__*/_jsxDEV(FocusedTitle, {\n        setFocused: setFocused,\n        focusedItem: focusedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FocusedData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FocusedHistory, {\n        focusedItem: focusedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = FocusedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusedList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focusedList.jsx"],"names":["style","FocusedTitle","FocusedHistory","useRef","focusedDataTitle","backgroundColor","textAlign","focusedDataInfo","width","FocusedList","focused","setFocused","focusedItem","require","ProfileJSON","dataRef","getJson","map","item","i","e","currentTarget","display","FocusedData","overflow","minWidth","margin","border","stringify","data","Object","keys","console","log","textDecoration","color","cursor","resources","fontSize","textIndent","direction","associatedDevices","focusedContainer"],"mappings":"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","sourcesContent":["import * as style from \"../../css/light/focusedList\";\r\n// import AssociatedItem from '../searchList/associatedItem';\r\nimport FocusedTitle from \"./focusedTitle\"\r\nimport FocusedHistory from \"./focusedHistory\";\r\nimport { useRef } from \"react\";\r\n\r\nlet focusedDataTitle = {\r\n  backgroundColor: \"#4382BC\",\r\n  textAlign: \"center\",\r\n}\r\n\r\nlet focusedDataInfo = {\r\n  width: \"100%\"\r\n}\r\n\r\nexport default function FocusedList({focused, setFocused}) {\r\n  if (!focused[0]) return <div></div>\r\n  let focusedItem = require(`../../data/${focused[1]}/${focused[0]}.json`)\r\n\r\n  function ProfileJSON() {\r\n    const dataRef = useRef(null)\r\n    \r\n    return getJson().map((item, i) => (\r\n      <div \r\n          ref={dataRef} \r\n          onMouseEnter={e => {\r\n            e.currentTarget.style.backgroundColor = \"#b7eef5\"\r\n          }}\r\n          onMouseLeave={e => {\r\n            e.currentTarget.style.backgroundColor = \"white\"\r\n          }}\r\n          style={{display: \"flex\", backgroundColor: \"white\"}}\r\n      >\r\n        <div style={focusedDataInfo}>\r\n          {item}\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  function FocusedData() {\r\n    return (\r\n      <div style={{overflow: \"hidden\", display: \"flex\"}}>                                     {/*height: 398px*/}\r\n        <div style={{minWidth: \"97%\", margin: \"12px auto 0px auto\", border: \"1px solid black\", backgroundColor: \"white\"}}>\r\n          <div style={focusedDataTitle}>Current Profile</div>\r\n          <ProfileJSON/>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  function stringify(data) {\r\n    if (!data) return \"undefined\"\r\n    if (data === null) return \"undefined\"\r\n    \r\n    if (typeof(data) === \"object\") {\r\n      return Object.keys(data).map((item, i) => (\r\n        <div style={{display: \"flex\"}}>\r\n          <div>\r\n            {item}\r\n          </div>\r\n          <div \r\n            onClick={(e) => {console.log(stringify(data[item]))}}\r\n            style={{textDecoration: \"underline\", color: \"blue\", cursor: \"pointer\"}}>\r\n            [Object]\r\n          </div>\r\n        </div>\r\n      ))\r\n    }\r\n    else return <div>{data}</div>\r\n  }\r\n\r\n  function getJson() {\r\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => (\r\n      <div style={{display: \"flex\", width: \"100%\"}}>\r\n        <div style={{fontSize: \"11px\", textIndent:\"3px\", width: \"100%\"}}>\r\n          {item}\r\n      </div>\r\n      <div style={{fontSize: \"11px\", textIndent:\"3px\", direction: \"rtl\", width: \"100%\"}}>\r\n        {stringify(focusedItem.resources[0].data[item])}\r\n      </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  if (focusedItem.resources[0].data.associatedDevices) {\r\n    return (\r\n      <div style={style.focusedContainer}>\r\n        <FocusedTitle setFocused={setFocused} focusedItem={focusedItem}/>\r\n        <FocusedData/>\r\n        <FocusedHistory focusedItem={focusedItem}/>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}