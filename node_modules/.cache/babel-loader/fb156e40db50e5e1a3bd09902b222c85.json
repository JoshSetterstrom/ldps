{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\total.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport * as style from \"../../css/light/totalBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total({\n  pageNumber,\n  setPageNumber,\n  profile,\n  listToRender\n}) {\n  _s();\n\n  const [userInputRecord, setUserInputRecord] = useState(\"\");\n  console.log(userInputRecord);\n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setPageNumber(userInputRecord);\n  }, [setPageNumber, userInputRecord]);\n\n  const renderTotalItems = () => {\n    return listToRender === null || listToRender === void 0 ? void 0 : listToRender.map((item, i) => {\n      var _profile$item$toLower;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalBarItem,\n        children: `${item}: ${(_profile$item$toLower = profile[item.toLowerCase()]) === null || _profile$item$toLower === void 0 ? void 0 : _profile$item$toLower.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const renderItemsPerPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginLeft: \"auto\",\n        paddingRight: \"3px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalTitle2,\n        children: \"Items/Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"10\",\n        style: style.totalInput,\n        onChange: (e => setUserInputRecord(parseInt(e.target.value)), [setUserInputRecord]),\n        onKeyPress: onKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButton // onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style.totalButtonLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitle1,\n      children: \"Total Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderTotalItems(), renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this); // const renderTotalBarItems = () => {\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\n  //     <div style={style.totalBarItem}>\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\n  //     </div>\n  //   ))\n  // }\n  // return (\n  //   <div style={style.totalContainer}>\n  //     <div style={style.totalTitle1}>Total Count</div>\n  //     {renderTotalBarItems()}\n  //     <div style={style.totalTitle2}>Items/Page</div>\n  //     <input placeholder=\"10\" style={style.totalInput} \n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\n  //       onKeyPress={onKeyPress}\n  //     />\n  //     <div \n  //       style={style.totalButton}\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\n  //     >\n  //       <div style={style.totalButtonLine}></div>\n  //     </div>\n  //   </div>\n  // )\n}\n\n_s(Total, \"3dh7auNqujkmNsFgyGjhAzUMpD4=\");\n\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/total.jsx"],"names":["React","useCallback","useState","style","Total","pageNumber","setPageNumber","profile","listToRender","userInputRecord","setUserInputRecord","console","log","onKeyPress","e","key","renderTotalItems","map","item","i","totalBarItem","toLowerCase","length","renderItemsPerPage","display","marginLeft","paddingRight","totalTitle2","totalInput","parseInt","target","value","totalButton","totalButtonLine","totalContainer","totalTitle1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,UAAD;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA;AAArC,CAAf,EAAmE;AAAA;;AAChF,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AAEA,QAAMI,UAAU,GAAGZ,WAAW,CAACa,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBT,aAAa,CAACG,eAAD,CAAb;AACxB,GAF6B,EAE3B,CAACH,aAAD,EAAgBG,eAAhB,CAF2B,CAA9B;;AAIA,QAAMO,gBAAgB,GAAG,MAAM;AAC7B,WAAOR,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAES,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP;AAAA;;AAAA,0BACvB;AAAK,QAAA,KAAK,EAAEhB,KAAK,CAACiB,YAAlB;AAAA,kBAAkC,GAAEF,IAAK,KAAR,yBAAYX,OAAO,CAACW,IAAI,CAACG,WAAL,EAAD,CAAnB,0DAAY,sBAA6BC,MAAO;AAAjF;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAlB,CAAP;AAGD,GAJD;;AAMA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE,MAA9B;AAAsCC,QAAAA,YAAY,EAAE;AAApD,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAEvB,KAAK,CAACwB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,WAAW,EAAC,IAAnB;AAAwB,QAAA,KAAK,EAAExB,KAAK,CAACyB,UAArC;AACE,QAAA,QAAQ,GAAEd,CAAC,IAAGJ,kBAAkB,CAACmB,QAAQ,CAACf,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAT,CAAtB,EAAkD,CAACrB,kBAAD,CAApD,CADV;AAEE,QAAA,UAAU,EAAEG;AAFd;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACI,QAAA,KAAK,EAAEV,KAAK,CAAC6B,WADjB,CAEI;AAFJ;AAAA,+BAIE;AAAK,UAAA,KAAK,EAAE7B,KAAK,CAAC8B;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,KAAK,EAAE9B,KAAK,CAAC+B,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE/B,KAAK,CAACgC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGnB,gBAAgB,EAFnB,EAGGO,kBAAkB,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAjCgF,CA2ChF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;GApEuBnB,K;;KAAAA,K","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function Total({pageNumber, setPageNumber, profile, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\")\r\n\r\n  console.log(userInputRecord)\r\n\r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setPageNumber(userInputRecord)\r\n  }, [setPageNumber, userInputRecord])\r\n\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map((item, i) => (\r\n      <div style={style.totalBarItem}>{`${item}: ${profile[item.toLowerCase()]?.length}`}</div>\r\n    ))\r\n  }\r\n\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div style={{display: \"flex\", marginLeft: \"auto\", paddingRight: \"3px\"}}>\r\n        <div style={style.totalTitle2}>Items/Page</div>\r\n        <input placeholder=\"10\" style={style.totalInput} \r\n          onChange={e =>setUserInputRecord(parseInt(e.target.value)), [setUserInputRecord]}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n        <div \r\n            style={style.totalButton}\r\n            // onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\r\n            >\r\n          <div style={style.totalButtonLine}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitle1}>Total Count</div>\r\n      {renderTotalItems()}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n\r\n \r\n\r\n  // const renderTotalBarItems = () => {\r\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\r\n  //     <div style={style.totalBarItem}>\r\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\r\n  //     </div>\r\n  //   ))\r\n  // }\r\n\r\n  // return (\r\n  //   <div style={style.totalContainer}>\r\n  //     <div style={style.totalTitle1}>Total Count</div>\r\n  //     {renderTotalBarItems()}\r\n  //     <div style={style.totalTitle2}>Items/Page</div>\r\n  //     <input placeholder=\"10\" style={style.totalInput} \r\n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\r\n  //       onKeyPress={onKeyPress}\r\n  //     />\r\n  //     <div \r\n  //       style={style.totalButton}\r\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\r\n  //     >\r\n  //       <div style={style.totalButtonLine}></div>\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}"]},"metadata":{},"sourceType":"module"}