{"ast":null,"code":"import _slicedToArray from\"C:/Users/Josh/Desktop/ld/ldreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState}from\"react\";import*as style from\"../../css/light/totalBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileTotal(_ref){var totalToRenderNumber=_ref.totalToRenderNumber,setTotalToRenderNumber=_ref.setTotalToRenderNumber,profileDataToRender=_ref.profileDataToRender,listToRender=_ref.listToRender;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userInputRecord=_useState2[0],setUserInputRecord=_useState2[1];var onKeyPress=useCallback(function(e){if(e.key===\"Enter\")setTotalToRenderNumber(userInputRecord);},[setTotalToRenderNumber,userInputRecord]);var renderTotalItems=function renderTotalItems(){return listToRender===null||listToRender===void 0?void 0:listToRender.map(function(item,i){var _profileDataToRender$;return/*#__PURE__*/_jsx(\"div\",{style:style.totalBarItem,children:\"\".concat(item,\": \").concat((_profileDataToRender$=profileDataToRender[item.toLowerCase()])===null||_profileDataToRender$===void 0?void 0:_profileDataToRender$.length)});});};var renderItemsPerPage=function renderItemsPerPage(){return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",marginLeft:\"auto\",paddingRight:\"3px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:style.totalTitleOther,children:\"Items/Page\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:totalToRenderNumber,style:style.totalInput,onChange:function onChange(e){return setUserInputRecord(parseInt(e.target.value));},onKeyPress:onKeyPress}),/*#__PURE__*/_jsx(\"div\",{style:style.totalButton,onClick:function onClick(){return setTotalToRenderNumber(userInputRecord);},children:/*#__PURE__*/_jsx(\"div\",{style:style.totalButtonLine})})]});};return/*#__PURE__*/_jsxs(\"div\",{style:style.totalContainer,children:[/*#__PURE__*/_jsx(\"div\",{style:style.totalTitleMain,children:\"Total Count:\"}),renderTotalItems(),renderItemsPerPage()]});}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileTotal/profileTotal.jsx"],"names":["React","useCallback","useState","style","ProfileTotal","totalToRenderNumber","setTotalToRenderNumber","profileDataToRender","listToRender","userInputRecord","setUserInputRecord","onKeyPress","e","key","renderTotalItems","map","item","i","totalBarItem","toLowerCase","length","renderItemsPerPage","display","marginLeft","paddingRight","totalTitleOther","totalInput","parseInt","target","value","totalButton","totalButtonLine","totalContainer","totalTitleMain"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAeC,WAAf,CAA4BC,QAA5B,KAA2C,OAA3C,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,0BAAvB,C,wFAEA,cAAe,SAASC,CAAAA,YAAT,MAAwG,IAAjFC,CAAAA,mBAAiF,MAAjFA,mBAAiF,CAA5DC,sBAA4D,MAA5DA,sBAA4D,CAApCC,mBAAoC,MAApCA,mBAAoC,CAAfC,YAAe,MAAfA,YAAe,CACrH,cAA8CN,QAAQ,CAAC,EAAD,CAAtD,wCAAOO,eAAP,eAAwBC,kBAAxB,eAEA,GAAMC,CAAAA,UAAU,CAAGV,WAAW,CAAC,SAAAW,CAAC,CAAI,CAClC,GAAIA,CAAC,CAACC,GAAF,GAAU,OAAd,CAAuBP,sBAAsB,CAACG,eAAD,CAAtB,CACxB,CAF6B,CAE3B,CAACH,sBAAD,CAAyBG,eAAzB,CAF2B,CAA9B,CAIA,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,MAAON,CAAAA,YAAP,SAAOA,YAAP,iBAAOA,YAAY,CAAEO,GAAd,CAAkB,SAACC,IAAD,CAAOC,CAAP,+CACvB,YAAK,KAAK,CAAEd,KAAK,CAACe,YAAlB,oBACMF,IADN,qCACeT,mBAAmB,CAACS,IAAI,CAACG,WAAL,EAAD,CADlC,gDACe,sBAAyCC,MADxD,GADuB,EAAlB,CAAP,CAKD,CAND,CAQA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,mBACE,aAAK,KAAK,CAAE,CAACC,OAAO,CAAE,MAAV,CAAkBC,UAAU,CAAE,MAA9B,CAAsCC,YAAY,CAAE,KAApD,CAAZ,wBACE,YAAK,KAAK,CAAErB,KAAK,CAACsB,eAAlB,wBADF,cAEE,cACI,WAAW,CAAEpB,mBADjB,CAEI,KAAK,CAAEF,KAAK,CAACuB,UAFjB,CAGI,QAAQ,CAAE,kBAAAd,CAAC,QAAIF,CAAAA,kBAAkB,CAACiB,QAAQ,CAACf,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAT,CAAtB,EAHf,CAII,UAAU,CAAElB,UAJhB,EAFF,cAOE,YACI,KAAK,CAAER,KAAK,CAAC2B,WADjB,CAEI,OAAO,CAAE,yBAAMxB,CAAAA,sBAAsB,CAACG,eAAD,CAA5B,EAFb,uBAGE,YAAK,KAAK,CAAEN,KAAK,CAAC4B,eAAlB,EAHF,EAPF,GADF,CAeD,CAhBD,CAkBA,mBACE,aAAK,KAAK,CAAE5B,KAAK,CAAC6B,cAAlB,wBACE,YAAK,KAAK,CAAE7B,KAAK,CAAC8B,cAAlB,0BADF,CAEGnB,gBAAgB,EAFnB,CAGGO,kBAAkB,EAHrB,GADF,CAOD","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function ProfileTotal({totalToRenderNumber, setTotalToRenderNumber, profileDataToRender, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\")\r\n\r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord)\r\n  }, [setTotalToRenderNumber, userInputRecord])\r\n\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map((item, i) => (\r\n      <div style={style.totalBarItem}>\r\n        {`${item}: ${profileDataToRender[item.toLowerCase()]?.length}`}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div style={{display: \"flex\", marginLeft: \"auto\", paddingRight: \"3px\"}}>\r\n        <div style={style.totalTitleOther}>Items/Page</div>\r\n        <input \r\n            placeholder={totalToRenderNumber} \r\n            style={style.totalInput} \r\n            onChange={e => setUserInputRecord(parseInt(e.target.value))}\r\n            onKeyPress={onKeyPress}/>\r\n        <div \r\n            style={style.totalButton}\r\n            onClick={() => setTotalToRenderNumber(userInputRecord)}>\r\n          <div style={style.totalButtonLine}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitleMain}>Total Count:</div>\r\n      {renderTotalItems()}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}