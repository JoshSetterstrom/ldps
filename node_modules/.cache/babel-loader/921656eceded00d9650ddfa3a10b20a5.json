{"ast":null,"code":"export default function getLineData(data) {\n  return data.map(profile => {\n    return [{\n      type: \"lines\",\n      index: \"Line\",\n      data: profile.data.pattern ? profile.data.pattern : \"\"\n    }, {\n      index: \"Alerting Name\",\n      data: profile.data.alertingName ? profile.data.alertingName : \"\"\n    }, {\n      index: \"Description\",\n      data: profile.data.description ? profile.data.description : \"\"\n    }, {\n      index: \"Device\",\n      data: profile.data.associatedDevices ? profile.data.associatedDevices.device[0] : \"\"\n    }, {\n      index: \"Forward\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['callForwardAll']['destination'];\n\n          if (destruct === null) {\n            let vm = profile['data']['callForwardAll']['forwardToVoiceMail'];\n            return vm ? \"Voicemail\" : \"None\";\n          }\n\n          return destruct;\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Location\",\n      data: profile.meta.hierarchy ? profile.meta.hierarchy.split(\"London Drugs.\")[1] : \"\"\n    }];\n  });\n}\n;","map":{"version":3,"sources":["C:/Users/joshs/Desktop/ld/ldps/src/common/main/api/getLineData.js"],"names":["getLineData","data","map","profile","type","index","pattern","alertingName","description","associatedDevices","device","destruct","vm","meta","hierarchy","split"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACxC,SAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AACzB,WAAO,CACL;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEJ,MAAAA,IAAI,EAAEE,OAAO,CAACF,IAAR,CAAaK,OAAb,GAAuBH,OAAO,CAACF,IAAR,CAAaK,OAApC,GAA8C;AAHtD,KADK,EAML;AACED,MAAAA,KAAK,EAAE,eADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAACF,IAAR,CAAaM,YAAb,GAA4BJ,OAAO,CAACF,IAAR,CAAaM,YAAzC,GAAwD;AAFhE,KANK,EAUL;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAACF,IAAR,CAAaO,WAAb,GAA2BL,OAAO,CAACF,IAAR,CAAaO,WAAxC,GAAsD;AAF9D,KAVK,EAcL;AACEH,MAAAA,KAAK,EAAE,QADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAACF,IAAR,CAAaQ,iBAAb,GACAN,OAAO,CAACF,IAAR,CAAaQ,iBAAb,CAA+BC,MAA/B,CAAsC,CAAtC,CADA,GAC2C;AAHnD,KAdK,EAmBL;AACEL,MAAAA,KAAK,EAAE,SADT;AAEEJ,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIU,QAAQ,GAAGR,OAAO,CAAC,MAAD,CAAP,CAAgB,gBAAhB,EAAkC,aAAlC,CAAf;;AACA,cAAIQ,QAAQ,KAAK,IAAjB,EAAuB;AACrB,gBAAIC,EAAE,GAAGT,OAAO,CAAC,MAAD,CAAP,CAAgB,gBAAhB,EAAkC,oBAAlC,CAAT;AACA,mBAAOS,EAAE,GAAG,WAAH,GAAgB,MAAzB;AACD;;AACD,iBAAOD,QAAP;AACD,SAPD,CAQA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OAVK;AAFR,KAnBK,EAiCL;AACEN,MAAAA,KAAK,EAAE,UADT;AAEEJ,MAAAA,IAAI,EAAEE,OAAO,CAACU,IAAR,CAAaC,SAAb,GACAX,OAAO,CAACU,IAAR,CAAaC,SAAb,CAAuBC,KAAvB,CAA6B,eAA7B,EAA8C,CAA9C,CADA,GACmD;AAH3D,KAjCK,CAAP;AAuCD,GAxCM,CAAP;AAyCD;AAAA","sourcesContent":["export default function getLineData(data) {\r\n  return data.map(profile => {\r\n    return [\r\n      {\r\n        type: \"lines\",\r\n        index: \"Line\",\r\n        data: profile.data.pattern ? profile.data.pattern : \"\"\r\n      },\r\n      {\r\n        index: \"Alerting Name\",\r\n        data: profile.data.alertingName ? profile.data.alertingName : \"\"\r\n      },\r\n      {\r\n        index: \"Description\",\r\n        data: profile.data.description ? profile.data.description : \"\"\r\n      },\r\n      {\r\n        index: \"Device\",\r\n        data: profile.data.associatedDevices\r\n            ? profile.data.associatedDevices.device[0] : \"\"\r\n      },\r\n      {\r\n        index: \"Forward\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['callForwardAll']['destination']\r\n            if (destruct === null) {\r\n              let vm = profile['data']['callForwardAll']['forwardToVoiceMail']\r\n              return vm ? \"Voicemail\": \"None\"\r\n            }\r\n            return destruct\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: profile.meta.hierarchy\r\n            ? profile.meta.hierarchy.split(\"London Drugs.\")[1] : \"\"\r\n      }\r\n    ];\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}