{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport * as style from \"../css/light/main\";\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\nimport getUserData from \"./dataRetrieval/getUserData\";\nimport Focused from \"./focused/focused\"; // import getDidData from \"./dataRetrieval/getDidData\";\n\nimport ProfileList from \"./profileList/profileList\";\nimport ProfileButtons from \"./profileButtons/profileButtons\";\nimport ProfileTotal from \"./profileTotal/profileTotal\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst callApi = async () => {\n  let cont = {};\n  let res = await axios.get(`http://localhost:5000/devices`);\n\n  try {\n    console.log(res.status);\n    cont['devices'] = await getDeviceData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/users`);\n\n  try {\n    console.log(res.status);\n    cont['users'] = await getUserData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  return new Promise((resolve, reject) => {\n    resolve(cont);\n    reject(\"fail\");\n  });\n}; //Extends Main\n\n\nexport default function Main() {\n  _s();\n\n  const [profileData, setProfileData] = useState([]);\n  const [listToRender, setListToRender] = useState([\"Devices\", \"Users\"]);\n  const [profileDataToRender, setProfileDataToRender] = useState([]);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50);\n  const [focused, setFocused] = useState([]);\n  const [loading, setLoading] = useState(\"true\");\n  useEffect(() => {\n    const getData = async () => {\n      let res = await callApi();\n      console.log(res);\n      setProfileData(res);\n      setProfileDataToRender(res);\n      setLoading(\"false\");\n    };\n\n    getData();\n  }, []); // useEffect(() => {    \n  // // Removed listToRender dependency so DOM does not re-render every time\n  // // profile button is clicked\n  // // eslint-disable-next-line\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.main,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileButtons, {\n      listToRender: listToRender,\n      setListToRender: setListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.containerLeft,\n      children: [/*#__PURE__*/_jsxDEV(ProfileList, {\n        focused: focused,\n        setFocused: setFocused,\n        listToRender: listToRender,\n        profileData: profileData,\n        profileDataToRender: profileDataToRender,\n        setProfileDataToRender: setProfileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Focused, {\n        focused: focused,\n        setFocused: setFocused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileTotal, {\n      listToRender: listToRender,\n      profileDataToRender: profileDataToRender,\n      totalToRenderNumber: totalToRenderNumber,\n      setTotalToRenderNumber: setTotalToRenderNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"PAG7RzqBItIr+66YZzfF4Df7SoY=\");\n\n_c = Main;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/main.jsx"],"names":["React","useEffect","useState","style","getDeviceData","getUserData","Focused","ProfileList","ProfileButtons","ProfileTotal","axios","callApi","cont","res","get","console","log","status","Promise","resolve","reject","Main","profileData","setProfileData","listToRender","setListToRender","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","focused","setFocused","loading","setLoading","getData","main","containerLeft"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\r\nimport * as style from \"../css/light/main\";\r\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\r\nimport getUserData from \"./dataRetrieval/getUserData\";\r\nimport Focused from \"./focused/focused\"\r\n// import getDidData from \"./dataRetrieval/getDidData\";\r\nimport ProfileList from \"./profileList/profileList\"\r\nimport ProfileButtons from \"./profileButtons/profileButtons\"\r\nimport ProfileTotal from \"./profileTotal/profileTotal\"\r\nimport axios from 'axios';\r\n\r\nconst callApi = async () => {\r\n  let cont = {}\r\n\r\n  let res = await axios.get(`http://localhost:5000/devices`)\r\n    try {\r\n      console.log(res.status)\r\n      cont['devices'] = await getDeviceData(res)\r\n    }\r\n    catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/users`)\r\n  try {\r\n    console.log(res.status)\r\n    cont['users'] = await getUserData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(cont)\r\n    reject(\"fail\")\r\n  })\r\n}\r\n\r\n//Extends Main\r\nexport default function Main() {\r\n  const [profileData, setProfileData] = useState([])\r\n  const [listToRender, setListToRender] = useState([\"Devices\", \"Users\"])\r\n  const [profileDataToRender, setProfileDataToRender] = useState([])\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50)\r\n  const [focused, setFocused] = useState([])\r\n  const [loading, setLoading] = useState(\"true\")\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let res = await callApi()\r\n      console.log(res)\r\n      setProfileData(res)\r\n      setProfileDataToRender(res)\r\n      setLoading(\"false\")\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  // useEffect(() => {    \r\n  // // Removed listToRender dependency so DOM does not re-render every time\r\n  // // profile button is clicked\r\n  // // eslint-disable-next-line\r\n  // }, [])\r\n\r\n  return (\r\n    <div style={style.main}>\r\n      <div>{loading}</div>\r\n      <ProfileButtons\r\n        listToRender={listToRender}\r\n        setListToRender={setListToRender}/>\r\n      <div style={style.containerLeft}>\r\n        <ProfileList \r\n          focused={focused}\r\n          setFocused={setFocused}\r\n          listToRender={listToRender}\r\n          profileData={profileData}\r\n          profileDataToRender={profileDataToRender}\r\n          setProfileDataToRender={setProfileDataToRender}\r\n          totalToRenderNumber={totalToRenderNumber}/>\r\n        <Focused focused={focused} setFocused={setFocused}/>\r\n      </div>\r\n      <ProfileTotal \r\n        listToRender={listToRender}\r\n        profileDataToRender={profileDataToRender} \r\n        totalToRenderNumber={totalToRenderNumber} \r\n        setTotalToRenderNumber={setTotalToRenderNumber}/>\r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}