{"ast":null,"code":"export default function getHcsLink(type, profile, location_hierarchy) {\n  let link = \"\";\n  let store = \"\";\n  console.log(location_hierarchy);\n\n  try {\n    let file = require(`../data/${type}s/${profile}.json`);\n\n    let pkid = file.meta.pkid;\n    if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1];\n    link = location_hierarchy[`link_${type}`];\n    link = link.replace(\"{1}\", location_hierarchy.stores[store]);\n    link = link.replace(\"{2}\", pkid);\n  } catch {\n    /*catch non-existing device*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["getHcsLink","type","profile","location_hierarchy","link","store","console","log","file","require","pkid","meta","hierarchy","includes","split","replace","stores"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,kBAAnC,EAAuD;AACpE,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,kBAAZ;;AAEA,MAAI;AACF,QAAIK,IAAI,GAAGC,OAAO,CAAE,WAAUR,IAAK,KAAIC,OAAQ,OAA7B,CAAlB;;AACA,QAAIQ,IAAI,GAAGF,IAAI,CAACG,IAAL,CAAUD,IAArB;AAGA,QAAIF,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBC,QAApB,CAA6B,aAA7B,CAAJ,EAAiDR,KAAK,GAAG,aAAR,CAAjD,KACKA,KAAK,GAAG,WAAWG,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBE,KAApB,CAA0B,QAA1B,EAAoC,CAApC,CAAnB;AAELV,IAAAA,IAAI,GAAGD,kBAAkB,CAAE,QAAOF,IAAK,EAAd,CAAzB;AACAG,IAAAA,IAAI,GAAGA,IAAI,CAACW,OAAL,CAAa,KAAb,EAAoBZ,kBAAkB,CAACa,MAAnB,CAA0BX,KAA1B,CAApB,CAAP;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACW,OAAL,CAAa,KAAb,EAAoBL,IAApB,CAAP;AACD,GAXD,CAaA,MAAM;AAAC;AAA8B;;AAErC,SAAON,IAAP;AACD","sourcesContent":["export default function getHcsLink(type, profile, location_hierarchy) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  console.log(location_hierarchy)\r\n\r\n  try {\r\n    let file = require(`../data/${type}s/${profile}.json`)\r\n    let pkid = file.meta.pkid\r\n\r\n    \r\n    if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1]\r\n    \r\n    link = location_hierarchy[`link_${type}`]\r\n    link = link.replace(\"{1}\", location_hierarchy.stores[store])\r\n    link = link.replace(\"{2}\", pkid)\r\n  }\r\n\r\n  catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}