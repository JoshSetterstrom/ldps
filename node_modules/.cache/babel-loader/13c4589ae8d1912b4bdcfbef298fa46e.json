{"ast":null,"code":"export default function getVoicemailData(data) {\n  let profileList = [];\n  data['data'].forEach(profile => {\n    console.log(data);\n    profileList.push([{\n      type: \"profile\",\n      index: \"Profile\",\n      data: (() => {\n        try {\n          let destruct = profile['profile'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n\n        ;\n      })()\n    }, {\n      index: \"Name\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['DisplayName'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Title\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['Title'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Extension\",\n      data: (() => {\n        try {\n          let destruct = profile['data']['DtmfAccessId'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Location\",\n      data: (() => {\n        try {\n          let destruct = profile['meta']['hierarchy'];\n          destruct = destruct.split(\"London Drugs.\")[1];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"\",\n      index: \"\",\n      data: \"\"\n    }, {\n      type: \"\",\n      index: \"\",\n      data: \"\"\n    }]);\n  });\n  return new Promise((resolve, reject) => {\n    resolve(profileList);\n    reject(\"Unable to retrieve voicemails.\");\n  });\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getVoicemailData.js"],"names":["getVoicemailData","data","profileList","forEach","profile","console","log","push","type","index","destruct","split","Promise","resolve","reject"],"mappings":"AAAA,eAAe,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,MAAIC,WAAW,GAAG,EAAlB;AAEAD,EAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaE,OAAb,CAAqBC,OAAO,IAAI;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAC,IAAAA,WAAW,CAACK,IAAZ,CAAiB,CACf;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGN,OAAO,CAAC,SAAD,CAAtB;AACA,iBAAOM,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;;AAAA;AAClB,OANK;AAHR,KADe,EAYf;AACED,MAAAA,KAAK,EAAE,MADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGN,OAAO,CAAC,MAAD,CAAP,CAAgB,aAAhB,CAAf;AACA,iBAAOM,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAZe,EAsBf;AACED,MAAAA,KAAK,EAAE,OADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGN,OAAO,CAAC,MAAD,CAAP,CAAgB,OAAhB,CAAf;AACA,iBAAOM,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAtBe,EAgCf;AACED,MAAAA,KAAK,EAAE,WADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGN,OAAO,CAAC,MAAD,CAAP,CAAgB,cAAhB,CAAf;AACA,iBAAOM,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAhCe,EA0Cf;AACED,MAAAA,KAAK,EAAE,UADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGN,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,CAAf;AACAM,UAAAA,QAAQ,GAAGA,QAAQ,CAACC,KAAT,CAAe,eAAf,EAAgC,CAAhC,CAAX;AACA,iBAAOD,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAJD,CAKA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OAPK;AAFR,KA1Ce,EAqDf;AACEF,MAAAA,IAAI,EAAE,EADR;AAEEC,MAAAA,KAAK,EAAE,EAFT;AAGER,MAAAA,IAAI,EAAE;AAHR,KArDe,EA0Df;AACEO,MAAAA,IAAI,EAAE,EADR;AAEEC,MAAAA,KAAK,EAAE,EAFT;AAGER,MAAAA,IAAI,EAAE;AAHR,KA1De,CAAjB;AAgED,GAlED;AAoEA,SAAO,IAAIW,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCD,IAAAA,OAAO,CAACX,WAAD,CAAP;AACAY,IAAAA,MAAM,CAAC,gCAAD,CAAN;AACD,GAHM,CAAP;AAID","sourcesContent":["export default function getVoicemailData(data) {\r\n  let profileList = [];\r\n\r\n  data['data'].forEach(profile => {\r\n    console.log(data)\r\n    profileList.push([\r\n      {\r\n        type: \"profile\",\r\n        index: \"Profile\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['profile'];\r\n            return destruct ? destruct : \"\";\r\n          }\r\n          catch {return \"\"};\r\n        })()\r\n      },\r\n      {\r\n        index: \"Name\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['DisplayName']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Title\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['Title']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Extension\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['data']['DtmfAccessId']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['meta']['hierarchy']\r\n            destruct = destruct.split(\"London Drugs.\")[1]\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"\",\r\n        index: \"\",\r\n        data: \"\"\r\n      },\r\n      {\r\n        type: \"\",\r\n        index: \"\",\r\n        data: \"\"\r\n      }\r\n    ])\r\n  })\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(profileList)\r\n    reject(\"Unable to retrieve voicemails.\")\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}