{"ast":null,"code":"import hierarchy from \"../../data/location_hierarchy.json\";\nexport default function getHcsLink(item, type) {\n  if (type === \"devices\") type = \"phone\";\n  let link = \"\";\n  let store = \"\";\n\n  try {\n    // console.log(`../../data/${type}s/${item}.json`)\n    let file = require(`../../data/${type}s/${item}.json`);\n\n    let pkid = file.resources[0].meta.pkid;\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1];\n    console.log(store); // let storeId = hierarchy.stores[store]\n    // link = hierarchy[`link_${type}`]\n    // link = link.replace(\"{1}\", storeId)\n    // link = link.replace(\"{2}\", pkid)\n  } catch {\n    /*catch non-existing device*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/getHcsLink.js"],"names":["hierarchy","getHcsLink","item","type","link","store","file","require","pkid","resources","meta","includes","split","console","log"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC7C,MAAIA,IAAI,KAAK,SAAb,EAAwBA,IAAI,GAAG,OAAP;AACxB,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI;AACF;AACA,QAAIC,IAAI,GAAGC,OAAO,CAAE,cAAaJ,IAAK,KAAID,IAAK,OAA7B,CAAlB;;AACA,QAAIM,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBF,IAAlC;AAGA,QAAIF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBV,SAAvB,CAAiCW,QAAjC,CAA0C,aAA1C,CAAJ,EAA8DN,KAAK,GAAG,aAAR,CAA9D,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBV,SAAvB,CAAiCY,KAAjC,CAAuC,QAAvC,EAAiD,CAAjD,CAAnB;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EARE,CAUF;AACA;AACA;AACA;AACD,GAdD,CAgBA,MAAM;AAAC;AAA8B;;AAErC,SAAOD,IAAP;AACD","sourcesContent":["import hierarchy from \"../../data/location_hierarchy.json\"\r\n\r\nexport default function getHcsLink(item, type) {\r\n  if (type === \"devices\") type = \"phone\"\r\n  let link = \"\"\r\n  let store = \"\"\r\n  try {\r\n    // console.log(`../../data/${type}s/${item}.json`)\r\n    let file = require(`../../data/${type}s/${item}.json`)\r\n    let pkid = file.resources[0].meta.pkid\r\n\r\n    \r\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1]\r\n    console.log(store)\r\n    \r\n    // let storeId = hierarchy.stores[store]\r\n    // link = hierarchy[`link_${type}`]\r\n    // link = link.replace(\"{1}\", storeId)\r\n    // link = link.replace(\"{2}\", pkid)\r\n  }\r\n\r\n  catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}