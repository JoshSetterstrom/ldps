{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focusedDataItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport rotateArrow from \"./rotateArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet arrow = {\n  display: \"inline-block\",\n  width: \"5px\",\n  height: \"5px\",\n  transform: \"rotate(45deg)\",\n  margin: \"4px 0 0 5px\",\n  borderRight: \"3px solid #4382BC\",\n  borderTop: \"3px solid #4382BC\"\n}; // function renderObject(selector, focusedItem, isDown, setIsDown, arrowRef, firstRender=false) {\n//   // if (firstRender) {\n//   //   if (typeof(focusedItem.resources[0].data[item]) === \"object\") {\n//   //     // if (isDown) {    \n//   //       if (focusedItem.resources[0].data[item] === null) return \"undefined\"\n//   //       console.log(focusedItem.resources[0].data[item])\n//   //       return Object.keys(focusedItem.resources[0].data[item]).map((newItem, i) => (\n//   //         <div\n//   //           style={{cursor: \"pointer\"}}\n//   //           onClick={() => {rotateArrow(isDown, setIsDown, arrowRef)}}>\n//   //         <div style={{display: \"flex\"}}>\n//   //           <div>{}</div>\n//   //           <div style={arrow}></div>\n//   //         </div>\n//   //         {/* <div style={{textIndent: \"30px\"}}>\n//   //         {renderObject(newItem, isDown, setIsDown, arrowRef)}\n//   //         </div> */}\n//   //       </div>\n//   //       ))\n//   //     // }\n//   //   }\n//   //   else return (\n//   //     <div style={{display: \"flex\"}}>\n//   //       <div style={{width: \"50%\"}}>{item}</div>\n//   //       <div>{focusedItem.resources[0].data[item]}</div>\n//   //     </div>\n//   //   )\n//   // }\n//   // }  \n// }\n\nfunction renderObject(value, isDown, setIsDown, arrowRef) {\n  return Object.keys(value).map((item, i) => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n  }); // Object.keys(value).forEach((item, i) => {\n  //   if (value[item] === null) return\n  //   console.log(typeof(value[item]))\n  //   if (typeof(value[item]) === \"object\") {\n  //     return (\n  //       <div>test</div>\n  //     )\n  //     // renderObject(value[item])\n  //   }\n  // })\n  // return <div></div>\n  // if (typeof(value) === \"object\") {\n  //   return (\n  //     <div style={{cursor: \"pointer\"}} onClick={() => {rotateArrow(isDown, setIsDown, arrowRef)}}>\n  //       <div style={{display: \"flex\"}}>\n  //         <div>{selector}</div>\n  //         <div ref={arrowRef} style={arrow}></div>\n  //       </div>\n  //       <div>{}</div>\n  //     </div>\n  //   )\n  // }\n  // else {\n  //   return (\n  //     <div style={{display: \"flex\"}}>\n  //       <div style={{width: \"50%\"}}>{selector}</div>\n  //       <div>{value}</div>\n  //     </div>\n  //   )\n  // }\n} //Extends FocusedDataList\n\n\nexport default function FocusedDataItem({\n  itemObject\n}) {\n  _s();\n\n  const [isDown, setIsDown] = useState(false);\n  const [indent, setIndent] = useState(1);\n  const arrowRef = useRef(null);\n  const objectRef = useRef(null);\n  return renderObject(itemObject, isDown, setIsDown, arrowRef);\n}\n\n_s(FocusedDataItem, \"CIxoUyUncZ+LFJe0adnI7J2Jpys=\");\n\n_c = FocusedDataItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusedDataItem\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focusedDataItem.jsx"],"names":["useState","useRef","useEffect","rotateArrow","arrow","display","width","height","transform","margin","borderRight","borderTop","renderObject","value","isDown","setIsDown","arrowRef","Object","keys","map","item","i","FocusedDataItem","itemObject","indent","setIndent","objectRef"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,cADC;AAEVC,EAAAA,KAAK,EAAE,KAFG;AAGVC,EAAAA,MAAM,EAAE,KAHE;AAIVC,EAAAA,SAAS,EAAE,eAJD;AAKVC,EAAAA,MAAM,EAAE,aALE;AAMVC,EAAAA,WAAW,EAAE,mBANH;AAOVC,EAAAA,SAAS,EAAE;AAPD,CAAZ,C,CAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,QAAhD,EAA0D;AACxD,SAAOC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzC;AAAA;AAAA,gBACGR;AADH;AAAA;AAAA;AAAA;AAAA;AAGD,GAJM,CAAP,CADwD,CAMxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,C,CAED;;;AACA,eAAe,SAASS,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAuC;AAAA;;AACpD,QAAM,CAACT,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMgB,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMyB,SAAS,GAAGzB,MAAM,CAAC,IAAD,CAAxB;AAEA,SAAOW,YAAY,CAACW,UAAD,EAAaT,MAAb,EAAqBC,SAArB,EAAgCC,QAAhC,CAAnB;AAED;;GARuBM,e;;KAAAA,e","sourcesContent":["import {useState, useRef, useEffect} from \"react\"\r\nimport rotateArrow from \"./rotateArrow\"\r\n\r\nlet arrow = {\r\n  display: \"inline-block\", \r\n  width: \"5px\",\r\n  height: \"5px\", \r\n  transform: \"rotate(45deg)\",\r\n  margin: \"4px 0 0 5px\",\r\n  borderRight: \"3px solid #4382BC\", \r\n  borderTop: \"3px solid #4382BC\"\r\n}\r\n\r\n// function renderObject(selector, focusedItem, isDown, setIsDown, arrowRef, firstRender=false) {\r\n  \r\n//   // if (firstRender) {\r\n//   //   if (typeof(focusedItem.resources[0].data[item]) === \"object\") {\r\n//   //     // if (isDown) {    \r\n//   //       if (focusedItem.resources[0].data[item] === null) return \"undefined\"\r\n//   //       console.log(focusedItem.resources[0].data[item])\r\n//   //       return Object.keys(focusedItem.resources[0].data[item]).map((newItem, i) => (\r\n//   //         <div\r\n//   //           style={{cursor: \"pointer\"}}\r\n//   //           onClick={() => {rotateArrow(isDown, setIsDown, arrowRef)}}>\r\n//   //         <div style={{display: \"flex\"}}>\r\n//   //           <div>{}</div>\r\n//   //           <div style={arrow}></div>\r\n//   //         </div>\r\n//   //         {/* <div style={{textIndent: \"30px\"}}>\r\n//   //         {renderObject(newItem, isDown, setIsDown, arrowRef)}\r\n//   //         </div> */}\r\n//   //       </div>\r\n//   //       ))\r\n//   //     // }\r\n//   //   }\r\n\r\n  \r\n//   //   else return (\r\n//   //     <div style={{display: \"flex\"}}>\r\n//   //       <div style={{width: \"50%\"}}>{item}</div>\r\n//   //       <div>{focusedItem.resources[0].data[item]}</div>\r\n//   //     </div>\r\n//   //   )\r\n//   // }\r\n\r\n//   // }  \r\n// }\r\n\r\nfunction renderObject(value, isDown, setIsDown, arrowRef) {\r\n  return Object.keys(value).map((item, i) => {\r\n    <div>\r\n      {value}\r\n    </div>\r\n  })\r\n  // Object.keys(value).forEach((item, i) => {\r\n  //   if (value[item] === null) return\r\n  //   console.log(typeof(value[item]))\r\n  //   if (typeof(value[item]) === \"object\") {\r\n  //     return (\r\n  //       <div>test</div>\r\n  //     )\r\n  //     // renderObject(value[item])\r\n  //   }\r\n  // })\r\n\r\n  // return <div></div>\r\n  // if (typeof(value) === \"object\") {\r\n  //   return (\r\n  //     <div style={{cursor: \"pointer\"}} onClick={() => {rotateArrow(isDown, setIsDown, arrowRef)}}>\r\n  //       <div style={{display: \"flex\"}}>\r\n  //         <div>{selector}</div>\r\n  //         <div ref={arrowRef} style={arrow}></div>\r\n  //       </div>\r\n  //       <div>{}</div>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n\r\n  // else {\r\n  //   return (\r\n  //     <div style={{display: \"flex\"}}>\r\n  //       <div style={{width: \"50%\"}}>{selector}</div>\r\n  //       <div>{value}</div>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n}\r\n\r\n//Extends FocusedDataList\r\nexport default function FocusedDataItem({itemObject}) {\r\n  const [isDown, setIsDown] = useState(false)\r\n  const [indent, setIndent] = useState(1)\r\n  const arrowRef = useRef(null)\r\n  const objectRef = useRef(null)\r\n\r\n  return renderObject(itemObject, isDown, setIsDown, arrowRef)  \r\n  \r\n}"]},"metadata":{},"sourceType":"module"}