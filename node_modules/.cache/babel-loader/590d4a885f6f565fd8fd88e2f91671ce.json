{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons({\n  listToRender,\n  setListToRender\n}) {\n  _s();\n\n  const staticButtons = listToRender;\n  const [buttonsToRender] = useState(staticButtons);\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style));\n\n  const changeFilter = (item, position) => {\n    if (listToRender.includes(item.target.innerHTML)) {\n      console.log(\"here\");\n      setButtonStyle(createButtonState(buttonsToRender, style));\n      setListToRender(staticButtons);\n    }\n\n    let newButtonState = createButtonState(buttonsToRender, style);\n    newButtonState = { ...newButtonState,\n      [position]: style.searchTypeOtherHighlight\n    };\n    setButtonStyle(newButtonState);\n    setListToRender([item.target.innerHTML]);\n  };\n\n  const renderButtons = () => {\n    return buttonsToRender.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => changeFilter(e, i),\n      style: buttonStyle[i],\n      children: item\n    }, `B${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileButtons, \"SmJqGRWcBlPdv7YGDQOQ3V4GiwI=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","listToRender","setListToRender","staticButtons","buttonsToRender","buttonStyle","setButtonStyle","changeFilter","item","position","includes","target","innerHTML","console","log","newButtonState","searchTypeOtherHighlight","renderButtons","map","i","e","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAxB,EAAyD;AAAA;;AACtE,QAAMC,aAAa,GAAGF,YAAtB;AACA,QAAM,CAACG,eAAD,IAAoBL,QAAQ,CAACI,aAAD,CAAlC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACF,iBAAiB,CAACO,eAAD,EAAkBR,KAAlB,CAAlB,CAA9C;;AAEA,QAAMW,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvC,QAAIR,YAAY,CAACS,QAAb,CAAsBF,IAAI,CAACG,MAAL,CAAYC,SAAlC,CAAJ,EAAkD;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAR,MAAAA,cAAc,CAACT,iBAAiB,CAACO,eAAD,EAAkBR,KAAlB,CAAlB,CAAd;AACAM,MAAAA,eAAe,CAACC,aAAD,CAAf;AACD;;AAED,QAAIY,cAAc,GAAGlB,iBAAiB,CAACO,eAAD,EAAkBR,KAAlB,CAAtC;AACAmB,IAAAA,cAAc,GAAG,EAAC,GAAGA,cAAJ;AAAoB,OAACN,QAAD,GAAYb,KAAK,CAACoB;AAAtC,KAAjB;AACAV,IAAAA,cAAc,CAACS,cAAD,CAAd;AACAb,IAAAA,eAAe,CAAC,CAACM,IAAI,CAACG,MAAL,CAAYC,SAAb,CAAD,CAAf;AACD,GAXD;;AAaA,QAAMK,aAAa,GAAG,MAAM;AAC1B,WAAOb,eAAe,CAACc,GAAhB,CAAoB,CAACV,IAAD,EAAOW,CAAP,kBACzB;AAAmB,MAAA,OAAO,EAAEC,CAAC,IAAIb,YAAY,CAACa,CAAD,EAAID,CAAJ,CAA7C;AAAqD,MAAA,KAAK,EAAEd,WAAW,CAACc,CAAD,CAAvE;AAAA,gBACGX;AADH,OAAW,IAAGW,CAAE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGL,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA/BuBjB,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons({listToRender, setListToRender}) {\r\n  const staticButtons = listToRender\r\n  const [buttonsToRender] = useState(staticButtons)\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style))\r\n\r\n  const changeFilter = (item, position) => {\r\n    if (listToRender.includes(item.target.innerHTML)) {\r\n      console.log(\"here\")\r\n      setButtonStyle(createButtonState(buttonsToRender, style))\r\n      setListToRender(staticButtons)\r\n    }\r\n\r\n    let newButtonState = createButtonState(buttonsToRender, style)\r\n    newButtonState = {...newButtonState, [position]: style.searchTypeOtherHighlight}\r\n    setButtonStyle(newButtonState)\r\n    setListToRender([item.target.innerHTML])\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttonsToRender.map((item, i) => (\r\n      <div key={`B${i}`} onClick={e => changeFilter(e, i)} style={buttonStyle[i]}>\r\n        {item}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}