{"ast":null,"code":"export default function getSearch(string,listToRender,profileData){/**Iterates through profileData data to filter profileData based on user input */return listToRender.reduce(function(result,listItem){listItem=listItem.toLowerCase();result[listItem]=profileData[listItem].filter(function(list){return list.some(function(item){if(!item.data)return\"\";var cleanItem=item.data.toString().toLowerCase();var cleanString=string.target.value.toLowerCase();if(cleanItem.includes(cleanString))return true;else return false;});});return result;},{});}","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/ld/ldps/src/common/api/getSearch.js"],"names":["getSearch","string","listToRender","profileData","reduce","result","listItem","toLowerCase","filter","list","some","item","data","cleanItem","toString","cleanString","target","value","includes"],"mappings":"AAAA,cAAe,SAASA,CAAAA,SAAT,CAAmBC,MAAnB,CAA2BC,YAA3B,CAAyCC,WAAzC,CAAsD,CAEnE,iFACA,MAAOD,CAAAA,YAAY,CAACE,MAAb,CAAoB,SAACC,MAAD,CAASC,QAAT,CAAsB,CAC/CA,QAAQ,CAAGA,QAAQ,CAACC,WAAT,EAAX,CAEAF,MAAM,CAACC,QAAD,CAAN,CACEH,WAAW,CAACG,QAAD,CAAX,CAAsBE,MAAtB,CAA6B,SAAAC,IAAI,CAAI,CACnC,MAAOA,CAAAA,IAAI,CAACC,IAAL,CAAU,SAAAC,IAAI,CAAI,CACvB,GAAI,CAACA,IAAI,CAACC,IAAV,CAAgB,MAAO,EAAP,CAEhB,GAAIC,CAAAA,SAAS,CAAKF,IAAI,CAACC,IAAL,CAAUE,QAAV,GAAqBP,WAArB,EAAlB,CACA,GAAIQ,CAAAA,WAAW,CAAGd,MAAM,CAACe,MAAP,CAAcC,KAAd,CAAoBV,WAApB,EAAlB,CAEA,GAAIM,SAAS,CAACK,QAAV,CAAmBH,WAAnB,CAAJ,CAAqC,MAAO,KAAP,CAArC,IACK,OAAO,MAAP,CACN,CARM,CAAP,CASD,CAVD,CADF,CAaA,MAAOV,CAAAA,MAAP,CAED,CAlBM,CAkBJ,EAlBI,CAAP,CAmBD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n\r\n  /**Iterates through profileData data to filter profileData based on user input */\r\n  return listToRender.reduce((result, listItem) => {\r\n    listItem = listItem.toLowerCase()\r\n\r\n    result[listItem] = \r\n      profileData[listItem].filter(list => {\r\n        return list.some(item => {\r\n          if (!item.data) return \"\"\r\n          \r\n          let cleanItem   = item.data.toString().toLowerCase()\r\n          let cleanString = string.target.value.toLowerCase()\r\n  \r\n          if (cleanItem.includes(cleanString)) return true\r\n          else return false\r\n        })\r\n      })\r\n\r\n    return result\r\n\r\n  }, {})\r\n}"]},"metadata":{},"sourceType":"module"}