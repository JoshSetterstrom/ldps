{"ast":null,"code":"import users from \"../data/user_list.json\";\n\nconst getUserData = () => {\n  let i = 0;\n  let searchDevice = [];\n  users['users'].forEach(user => {\n    const container = require(`../data/users/${user}.json`);\n\n    const changeName = container => !container ? \"\" : container;\n\n    searchDevice.push([{\n      key: i,\n      type: \"mac\",\n      data: changeName(container.resources[0].data.name.toUpperCase())\n    }, {\n      key: i,\n      type: \"user\",\n      data: changeName(container.resources[0].data.lines.line[0].displayAscii)\n    }, {\n      key: i,\n      type: \"line\",\n      data: changeName(container.resources[0].data.lines.line[0].dirn.pattern)\n    }, {\n      key: i,\n      type: \"mask\",\n      data: changeName(container.resources[0].data.lines.line[0].e164Mask)\n    }, {\n      key: i,\n      type: \"ip\",\n      data: changeName(container.resources[0].data.ip_address)\n    }, {\n      key: i,\n      type: \"location\",\n      data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\n    }]);\n  });\n};\n\nexport default getUserData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/getUserData.js"],"names":["users","getUserData","i","searchDevice","forEach","user","container","require","changeName","push","key","type","data","resources","name","toUpperCase","lines","line","displayAscii","dirn","pattern","e164Mask","ip_address","meta","hierarchy","split","pop","toLowerCase"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEAH,EAAAA,KAAK,CAAC,OAAD,CAAL,CAAeI,OAAf,CAAuBC,IAAI,IAAI;AAC7B,UAAMC,SAAS,GAAGC,OAAO,CAAE,iBAAgBF,IAAK,OAAvB,CAAzB;;AACA,UAAMG,UAAU,GAAGF,SAAS,IAAI,CAACA,SAAD,GAAa,EAAb,GAAkBA,SAAlD;;AAEAH,IAAAA,YAAY,CAACM,IAAb,CAAkB,CAChB;AACEC,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,IAAI,EAAEJ,UAAU,CAACF,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BE,IAA5B,CAAiCC,WAAjC,EAAD;AAHlB,KADgB,EAMhB;AACEL,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAEJ,UAAU,CAACF,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BI,KAA5B,CAAkCC,IAAlC,CAAuC,CAAvC,EAA0CC,YAA3C;AAHlB,KANgB,EAWhB;AACER,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAEJ,UAAU,CAACF,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BI,KAA5B,CAAkCC,IAAlC,CAAuC,CAAvC,EAA0CE,IAA1C,CAA+CC,OAAhD;AAHlB,KAXgB,EAgBhB;AACEV,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAEJ,UAAU,CAACF,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BI,KAA5B,CAAkCC,IAAlC,CAAuC,CAAvC,EAA0CI,QAA3C;AAHlB,KAhBgB,EAqBhB;AACEX,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,IAAI,EAAEJ,UAAU,CAACF,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BU,UAA7B;AAHlB,KArBgB,EA0BhB;AACEZ,MAAAA,GAAG,EAAER,CADP;AAEES,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAApB,EAAuBU,IAAvB,CAA4BC,SAA5B,CAAsCC,KAAtC,CAA4C,GAA5C,EAAiDC,GAAjD,GAAuDC,WAAvD;AAHR,KA1BgB,CAAlB;AAgCD,GApCD;AAqCD,CAzCD;;AA2CA,eAAe1B,WAAW,EAA1B","sourcesContent":["import users from \"../data/user_list.json\"\r\n\r\nconst getUserData = () => {\r\n  let i = 0;\r\n  let searchDevice = [];\r\n\r\n  users['users'].forEach(user => {\r\n    const container = require(`../data/users/${user}.json`);\r\n    const changeName = container => !container ? \"\" : container\r\n\r\n    searchDevice.push([\r\n      {\r\n        key: i,\r\n        type: \"mac\",\r\n        data: changeName(container.resources[0].data.name.toUpperCase())\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"user\",\r\n        data: changeName(container.resources[0].data.lines.line[0].displayAscii)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"line\",\r\n        data: changeName(container.resources[0].data.lines.line[0].dirn.pattern)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"mask\",\r\n        data: changeName(container.resources[0].data.lines.line[0].e164Mask)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"ip\",\r\n        data: changeName(container.resources[0].data.ip_address)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"location\",\r\n        data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\r\n      }\r\n    ])\r\n  })\r\n}\r\n\r\nexport default getUserData();"]},"metadata":{},"sourceType":"module"}