{"ast":null,"code":"export default function getSearch(string, listToRender, profileData) {\n  let temp = {};\n  listToRender.forEach(listItem => {\n    var _profileData$listItem;\n\n    listItem = listItem.toLowerCase();\n    let returnedList = [];\n    let currentList = [];\n    (_profileData$listItem = profileData[listItem.toLowerCase()]) === null || _profileData$listItem === void 0 ? void 0 : _profileData$listItem.forEach(value => {\n      let cleanArray = value.slice(1, Object.keys(value).at(-1)); // for (let i in value.slice(1, Object.keys(value).at(-1))) {\n\n      for (let i in cleanArray) {\n        console.log(cleanArray[i]);\n      } // value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\n      //   console.log(item['data'])\n      // })\n      // if (profileData[listItem.toLowerCase()][i][Object.keys(value).at(-2)]['data'].includes(string.target.value.toLowerCase())) {\n      //   console.log(value)\n      // returnedList.push(value)\n      //   break\n      // }\n      // }\n      // value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\n      //   if (item.data.toLowerCase().includes(string.target.value.toLowerCase()) && !currentList.includes(value[0]['key'])) {\n      //     currentList.push(value[0]['key'])\n      //     returnedList.push(value)\n      //   }\n      // })\n\n    });\n    temp[listItem.toLowerCase()] = returnedList;\n  });\n  return temp;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getSearch.js"],"names":["getSearch","string","listToRender","profileData","temp","forEach","listItem","toLowerCase","returnedList","currentList","value","cleanArray","slice","Object","keys","at","i","console","log"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,WAAzC,EAAsD;AACnE,MAAIC,IAAI,GAAG,EAAX;AAEAF,EAAAA,YAAY,CAACG,OAAb,CAAsBC,QAAD,IAAc;AAAA;;AACjCA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,EAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,WAAW,GAAG,EAAlB;AAEA,6BAAAN,WAAW,CAACG,QAAQ,CAACC,WAAT,EAAD,CAAX,gFAAqCF,OAArC,CAA6CK,KAAK,IAAI;AACpD,UAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,EAAnB,CAAsB,CAAC,CAAvB,CAAf,CAAjB,CADoD,CAEpD;;AACA,WAAK,IAAIC,CAAT,IAAcL,UAAd,EAA0B;AACxBM,QAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,CAACK,CAAD,CAAtB;AACD,OALmD,CAOpD;AACA;AACA;AACE;AACA;AACE;AACF;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAtBD;AAuBAZ,IAAAA,IAAI,CAACE,QAAQ,CAACC,WAAT,EAAD,CAAJ,GAA+BC,YAA/B;AACD,GA7BD;AA+BA,SAAOJ,IAAP;AACD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n  let temp = {}\r\n\r\n  listToRender.forEach((listItem) => {\r\n    listItem = listItem.toLowerCase()\r\n    let returnedList = []\r\n    let currentList = []\r\n\r\n    profileData[listItem.toLowerCase()]?.forEach(value => {\r\n      let cleanArray = value.slice(1, Object.keys(value).at(-1))\r\n      // for (let i in value.slice(1, Object.keys(value).at(-1))) {\r\n      for (let i in cleanArray) {\r\n        console.log(cleanArray[i])\r\n      }\r\n\r\n      // value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\r\n      //   console.log(item['data'])\r\n      // })\r\n        // if (profileData[listItem.toLowerCase()][i][Object.keys(value).at(-2)]['data'].includes(string.target.value.toLowerCase())) {\r\n        //   console.log(value)\r\n          // returnedList.push(value)\r\n        //   break\r\n        // }\r\n      // }\r\n      // value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\r\n      //   if (item.data.toLowerCase().includes(string.target.value.toLowerCase()) && !currentList.includes(value[0]['key'])) {\r\n      //     currentList.push(value[0]['key'])\r\n      //     returnedList.push(value)\r\n      //   }\r\n      // })\r\n    })\r\n    temp[listItem.toLowerCase()] = returnedList\r\n  })\r\n\r\n  return temp\r\n}"]},"metadata":{},"sourceType":"module"}