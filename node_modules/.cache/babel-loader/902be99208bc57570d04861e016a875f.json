{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ld\\\\ldps\\\\src\\\\common\\\\profileTotal\\\\profileTotalInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\"; // Extends ProfileTotal //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileTotalInput(_ref) {\n  _s();\n\n  let {\n    style,\n    totalToRenderNumber,\n    setTotalToRenderNumber\n  } = _ref;\n  const [userInputRecord, setUserInputRecord] = useState(\"\"); // Event listener to check items/page value on user input // \n\n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\n  }, [setTotalToRenderNumber, userInputRecord]); // Renders items/page element //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'pTiC',\n    style: style.totalInputContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitleOther,\n      children: \"Items/Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: totalToRenderNumber,\n      style: style.totalInput,\n      onChange: e => setUserInputRecord(parseInt(e.target.value)),\n      onKeyPress: onKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalButton,\n      onClick: () => !userInputRecord ? {\n        /*pass*/\n      } : setTotalToRenderNumber(userInputRecord),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButtonLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileTotalInput, \"3dh7auNqujkmNsFgyGjhAzUMpD4=\");\n\n_c = ProfileTotalInput;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileTotalInput\");","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/ld/ldps/src/common/profileTotal/profileTotalInput.jsx"],"names":["useCallback","useState","ProfileTotalInput","style","totalToRenderNumber","setTotalToRenderNumber","userInputRecord","setUserInputRecord","onKeyPress","e","key","totalInputContainer","totalTitleOther","totalInput","parseInt","target","value","totalButton","totalButtonLine"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAqC,OAArC,C,CAEA;;;AACA,eAAe,SAASC,iBAAT,OAAiF;AAAA;;AAAA,MAAtD;AAACC,IAAAA,KAAD;AAAQC,IAAAA,mBAAR;AAA6BC,IAAAA;AAA7B,GAAsD;AAC9F,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD,CAD8F,CAG9F;;AACA,QAAMO,UAAU,GAAGR,WAAW,CAACS,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBL,sBAAsB,CAACC,eAAD,CAAtB;AACxB,GAF6B,EAE3B,CAACD,sBAAD,EAAyBC,eAAzB,CAF2B,CAA9B,CAJ8F,CAS9F;;AACA,sBACE;AAAK,IAAA,EAAE,EAAE,MAAT;AAAiB,IAAA,KAAK,EAAEH,KAAK,CAACQ,mBAA9B;AAAA,4BACE;AAAK,MAAA,KAAK,EAAER,KAAK,CAACS,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,WAAW,EAAIR,mBAAtB;AACO,MAAA,KAAK,EAAUD,KAAK,CAACU,UAD5B;AAEO,MAAA,QAAQ,EAAOJ,CAAC,IAAIF,kBAAkB,CAACO,QAAQ,CAACL,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT,CAF7C;AAGO,MAAA,UAAU,EAAKR;AAHtB;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAK,MAAA,KAAK,EAAML,KAAK,CAACc,WAAtB;AACK,MAAA,OAAO,EAAI,MAAM,CAACX,eAAD,GACA;AAAC;AAAD,OADA,GAEAD,sBAAsB,CAACC,eAAD,CAH5C;AAAA,6BAKE;AAAK,QAAA,KAAK,EAAEH,KAAK,CAACe;AAAlB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA7BuBhB,iB;;KAAAA,iB;AA6BvB","sourcesContent":["import { useCallback, useState} from \"react\";\r\n\r\n// Extends ProfileTotal //\r\nexport default function ProfileTotalInput({style, totalToRenderNumber, setTotalToRenderNumber}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\");\r\n\r\n  // Event listener to check items/page value on user input // \r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\r\n  }, [setTotalToRenderNumber, userInputRecord]);\r\n\r\n\r\n  // Renders items/page element //\r\n  return (\r\n    <div id={'pTiC'} style={style.totalInputContainer}>\r\n      <div style={style.totalTitleOther}>Items/Page</div>\r\n\r\n      <input placeholder = {totalToRenderNumber} \r\n             style       = {style.totalInput} \r\n             onChange    = {e => setUserInputRecord(parseInt(e.target.value))}\r\n             onKeyPress  = {onKeyPress}/>\r\n\r\n      <div style   = {style.totalButton}\r\n           onClick = {() => !userInputRecord \r\n                          ? {/*pass*/}\r\n                          : setTotalToRenderNumber(userInputRecord)}>\r\n          \r\n        <div style={style.totalButtonLine}></div>  \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}