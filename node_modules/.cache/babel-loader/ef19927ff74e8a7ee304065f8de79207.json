{"ast":null,"code":"import profiles from \"../../data/allstream_profile_list.json\";\nimport validateString from \"./validateString\";\nimport getHcsLink from \"./getHcsLink\";\nexport default function getUserData() {\n  let profileList = [];\n  profiles['users'].forEach((user, i) => {\n    const data = require(`../../data/users/${user}.json`);\n\n    profileList.push([{\n      key: i,\n      type: \"id\",\n      index: \"User ID\",\n      data: validateString(data.resources[0].data.userid)\n    }, {\n      key: i,\n      type: \"display\",\n      index: \"Display\",\n      data: validateString(data.resources[0].data.displayName)\n    }, {\n      key: i,\n      type: \"primary\",\n      index: \"Primary Line\",\n      data: validateString(data.resources[0].data.primaryExtension.pattern)\n    }, {\n      key: i,\n      type: \"department\",\n      index: \"Department\",\n      data: validateString(data.resources[0].data.title)\n    }, {\n      key: i,\n      type: \"device\",\n      index: \"MAC Address\",\n      data: validateString(data.resources[0].data.Phone[0].name)\n    }, {\n      key: i,\n      type: \"location\",\n      index: \"Location\",\n      data: validateString(data.resources[0].meta.hierarchy.split(\"_\").pop())\n    }, {\n      key: i,\n      type: \"\",\n      index: \"\",\n      data: \"\"\n    }, {\n      key: i,\n      type: \"link\",\n      index: \"Link\",\n      data: getHcsLink(data.resources[0].data.userid, \"users\")\n    }]);\n  });\n  return profileList;\n}\ngetUserData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/getUserData.js"],"names":["profiles","validateString","getHcsLink","getUserData","profileList","forEach","user","i","data","require","push","key","type","index","resources","userid","displayName","primaryExtension","pattern","title","Phone","name","meta","hierarchy","split","pop"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,wCAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,MAAIC,WAAW,GAAG,EAAlB;AAEAJ,EAAAA,QAAQ,CAAC,OAAD,CAAR,CAAkBK,OAAlB,CAA0B,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrC,UAAMC,IAAI,GAAGC,OAAO,CAAE,oBAAmBH,IAAK,OAA1B,CAApB;;AAEAF,IAAAA,WAAW,CAACM,IAAZ,CAAiB,CACf;AACEC,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,KAAK,EAAE,SAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBO,MAAxB;AAJtB,KADe,EAOf;AACEJ,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,KAAK,EAAE,SAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBQ,WAAxB;AAJtB,KAPe,EAaf;AACEL,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,KAAK,EAAE,cAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBS,gBAAvB,CAAwCC,OAAzC;AAJtB,KAbe,EAmBf;AACEP,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,KAAK,EAAE,YAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBW,KAAxB;AAJtB,KAnBe,EAyBf;AACER,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,KAAK,EAAE,aAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBY,KAAvB,CAA6B,CAA7B,EAAgCC,IAAjC;AAJtB,KAzBe,EA+Bf;AACEV,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,KAAK,EAAE,UAHT;AAIEL,MAAAA,IAAI,EAAEP,cAAc,CAACO,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBQ,IAAlB,CAAuBC,SAAvB,CAAiCC,KAAjC,CAAuC,GAAvC,EAA4CC,GAA5C,EAAD;AAJtB,KA/Be,EAqCf;AACEd,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,EAFR;AAGEC,MAAAA,KAAK,EAAE,EAHT;AAIEL,MAAAA,IAAI,EAAE;AAJR,KArCe,EA2Cf;AACEG,MAAAA,GAAG,EAAEJ,CADP;AAEEK,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,KAAK,EAAE,MAHT;AAIEL,MAAAA,IAAI,EAAEN,UAAU,CAACM,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAlB,CAAuBO,MAAxB,EAAgC,OAAhC;AAJlB,KA3Ce,CAAjB;AAkDD,GArDD;AAsDA,SAAOX,WAAP;AACD;AAEDD,WAAW","sourcesContent":["import profiles from \"../../data/allstream_profile_list.json\"\r\nimport validateString from \"./validateString\";\r\nimport getHcsLink from \"./getHcsLink\";\r\n\r\nexport default function getUserData() {\r\n  let profileList = [];\r\n  \r\n  profiles['users'].forEach((user, i) => {\r\n    const data = require(`../../data/users/${user}.json`)\r\n\r\n    profileList.push([\r\n      {\r\n        key: i,\r\n        type: \"id\",\r\n        index: \"User ID\",\r\n        data: validateString(data.resources[0].data.userid)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"display\",\r\n        index: \"Display\",\r\n        data: validateString(data.resources[0].data.displayName)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: validateString(data.resources[0].data.primaryExtension.pattern)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"department\",\r\n        index: \"Department\",\r\n        data: validateString(data.resources[0].data.title)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"device\",\r\n        index: \"MAC Address\",\r\n        data: validateString(data.resources[0].data.Phone[0].name)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"location\",\r\n        index: \"Location\",\r\n        data: validateString(data.resources[0].meta.hierarchy.split(\"_\").pop())\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"\",\r\n        index: \"\",\r\n        data: \"\"\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"link\",\r\n        index: \"Link\",\r\n        data: getHcsLink(data.resources[0].data.userid, \"users\")\r\n      }\r\n    ])\r\n  })\r\n  return profileList\r\n}\r\n\r\ngetUserData()"]},"metadata":{},"sourceType":"module"}