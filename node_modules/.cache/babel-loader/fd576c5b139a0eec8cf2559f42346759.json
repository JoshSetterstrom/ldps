{"ast":null,"code":"import hierarchy from \"../../data/location_hierarchy.json\";\nexport default function getLocationHierarchy(item, type) {\n  if (type === \"device\") type = \"phone\";\n  let store = \"\";\n\n  let file = require(`../../data/${type}s/${item}.json`);\n\n  let pkid = file.resources[0].meta.pkid;\n  if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1];\n  let storeId = hierarchy.stores[store];\n  let link = hierarchy[`link_${type}`];\n  link = link.replace(\"{1}\", storeId);\n  link = link.replace(\"{2}\", pkid);\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/getLocationHierarchy.js"],"names":["hierarchy","getLocationHierarchy","item","type","store","file","require","pkid","resources","meta","includes","split","storeId","stores","link","replace"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AACvD,MAAIA,IAAI,KAAK,QAAb,EAAuBA,IAAI,GAAG,OAAP;AAEvB,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAE,cAAaH,IAAK,KAAID,IAAK,OAA7B,CAAlB;;AACA,MAAIK,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBF,IAAlC;AAEA,MAAIF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBT,SAAvB,CAAiCU,QAAjC,CAA0C,aAA1C,CAAJ,EAA8DN,KAAK,GAAG,aAAR,CAA9D,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBT,SAAvB,CAAiCW,KAAjC,CAAuC,QAAvC,EAAiD,CAAjD,CAAnB;AAEL,MAAIC,OAAO,GAAGZ,SAAS,CAACa,MAAV,CAAiBT,KAAjB,CAAd;AACA,MAAIU,IAAI,GAAGd,SAAS,CAAE,QAAOG,IAAK,EAAd,CAApB;AACAW,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoBH,OAApB,CAAP;AACAE,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoBR,IAApB,CAAP;AAGA,SAAOO,IAAP;AACD","sourcesContent":["import hierarchy from \"../../data/location_hierarchy.json\"\r\n\r\nexport default function getLocationHierarchy(item, type) {\r\n  if (type === \"device\") type = \"phone\"\r\n\r\n  let store = \"\"\r\n  let file = require(`../../data/${type}s/${item}.json`)\r\n  let pkid = file.resources[0].meta.pkid\r\n\r\n  if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n  else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1]\r\n  \r\n  let storeId = hierarchy.stores[store]\r\n  let link = hierarchy[`link_${type}`]\r\n  link = link.replace(\"{1}\", storeId)\r\n  link = link.replace(\"{2}\", pkid)\r\n\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}