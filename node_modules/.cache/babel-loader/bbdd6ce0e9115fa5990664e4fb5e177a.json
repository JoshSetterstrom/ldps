{"ast":null,"code":"import hierarchy from \"../../data/location_hierarchy.json\";\nexport default function getHcsLink(item, type) {\n  console.log(type);\n  let link = \"\";\n  let store = \"\"; // try {\n  // console.log(`../../data/${type}s/${item}.json`)\n\n  let file = require(`../../data/${type}/${item}.json`);\n\n  let pkid = file.resources[0].meta.pkid;\n  if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1];\n  let storeId = hierarchy.stores[store];\n  link = hierarchy[`link_${type}`];\n  console.log(hierarchy); // link = link.replace(\"{1}\", storeId)\n  // link = link.replace(\"{2}\", pkid)\n  // }\n  // catch {/*catch non-existing device*/}\n  // return link\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/getHcsLink.js"],"names":["hierarchy","getHcsLink","item","type","console","log","link","store","file","require","pkid","resources","meta","includes","split","storeId","stores"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIG,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ,CAH6C,CAI7C;AACE;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAE,cAAaN,IAAK,IAAGD,IAAK,OAA5B,CAAlB;;AACA,MAAIQ,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBF,IAAlC;AAGA,MAAIF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBZ,SAAvB,CAAiCa,QAAjC,CAA0C,aAA1C,CAAJ,EAA8DN,KAAK,GAAG,aAAR,CAA9D,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBZ,SAAvB,CAAiCc,KAAjC,CAAuC,QAAvC,EAAiD,CAAjD,CAAnB;AAEL,MAAIC,OAAO,GAAGf,SAAS,CAACgB,MAAV,CAAiBT,KAAjB,CAAd;AACAD,EAAAA,IAAI,GAAGN,SAAS,CAAE,QAAOG,IAAK,EAAd,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAf2C,CAgB3C;AACA;AACF;AAEA;AAEA;AACD","sourcesContent":["import hierarchy from \"../../data/location_hierarchy.json\"\r\n\r\nexport default function getHcsLink(item, type) {\r\n  console.log(type)\r\n  let link = \"\"\r\n  let store = \"\"\r\n  // try {\r\n    // console.log(`../../data/${type}s/${item}.json`)\r\n    let file = require(`../../data/${type}/${item}.json`)\r\n    let pkid = file.resources[0].meta.pkid\r\n\r\n    \r\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1]\r\n    \r\n    let storeId = hierarchy.stores[store]\r\n    link = hierarchy[`link_${type}`]\r\n    console.log(hierarchy)\r\n    // link = link.replace(\"{1}\", storeId)\r\n    // link = link.replace(\"{2}\", pkid)\r\n  // }\r\n\r\n  // catch {/*catch non-existing device*/}\r\n\r\n  // return link\r\n}"]},"metadata":{},"sourceType":"module"}