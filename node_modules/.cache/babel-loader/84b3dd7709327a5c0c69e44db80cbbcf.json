{"ast":null,"code":"export default function getDidData(data){var profileList=[];data['data'].forEach(function(profile){profileList.push([{type:\"did\",index:\"DID\",data:function(){try{var destruct=profile['did'];return destruct?destruct:\"\";}catch(_unused){return\"\";};}()},{index:\"Extension\",data:function(){try{var destruct=profile['line'];return destruct?destruct:\"\";}catch(_unused2){return\"\";}}()},{index:\"Description\",data:function(){try{var destruct=profile['description'];return destruct?destruct:\"\";}catch(_unused3){return\"\";}}()},{index:\"Area\",data:function(){try{var destruct=profile['location'];return destruct?destruct:\"\";}catch(_unused4){return\"\";}}()},{index:\"Location\",data:function(){try{var destruct=profile['area'];return destruct?destruct:\"\";}catch(_unused5){return\"\";}}()}]);});return new Promise(function(resolve,reject){resolve(profileList);reject(\"Unable to retrieve devices.\");});}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDidData.js"],"names":["getDidData","data","profileList","forEach","profile","push","type","index","destruct","Promise","resolve","reject"],"mappings":"AAAA,cAAe,SAASA,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CACvC,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CAEAD,IAAI,CAAC,MAAD,CAAJ,CAAaE,OAAb,CAAqB,SAAAC,OAAO,CAAI,CAC9BF,WAAW,CAACG,IAAZ,CAAiB,CACf,CACEC,IAAI,CAAE,KADR,CAEEC,KAAK,CAAE,KAFT,CAGEN,IAAI,CAAG,UAAM,CACX,GAAI,CACF,GAAIO,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,KAAD,CAAtB,CACA,MAAOI,CAAAA,QAAQ,CAAGA,QAAH,CAAc,EAA7B,CACD,CACD,cAAM,CAAC,MAAO,EAAP,CAAU,EAClB,CANK,EAHR,CADe,CAYf,CACED,KAAK,CAAE,WADT,CAEEN,IAAI,CAAG,UAAM,CACX,GAAI,CACF,GAAIO,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,MAAD,CAAtB,CACA,MAAOI,CAAAA,QAAQ,CAAGA,QAAH,CAAc,EAA7B,CACD,CACD,eAAM,CAAC,MAAO,EAAP,CAAU,CAClB,CANK,EAFR,CAZe,CAsBf,CACED,KAAK,CAAE,aADT,CAEEN,IAAI,CAAG,UAAM,CACX,GAAI,CACF,GAAIO,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,aAAD,CAAtB,CACA,MAAOI,CAAAA,QAAQ,CAAGA,QAAH,CAAc,EAA7B,CACD,CACD,eAAM,CAAC,MAAO,EAAP,CAAU,CAClB,CANK,EAFR,CAtBe,CAgCf,CACED,KAAK,CAAE,MADT,CAEEN,IAAI,CAAG,UAAM,CACX,GAAI,CACF,GAAIO,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,UAAD,CAAtB,CACA,MAAOI,CAAAA,QAAQ,CAAGA,QAAH,CAAc,EAA7B,CACD,CACD,eAAM,CAAC,MAAO,EAAP,CAAU,CAClB,CANK,EAFR,CAhCe,CA0Cf,CACED,KAAK,CAAE,UADT,CAEEN,IAAI,CAAG,UAAM,CACX,GAAI,CACF,GAAIO,CAAAA,QAAQ,CAAGJ,OAAO,CAAC,MAAD,CAAtB,CACA,MAAOI,CAAAA,QAAQ,CAAGA,QAAH,CAAc,EAA7B,CACD,CACD,eAAM,CAAC,MAAO,EAAP,CAAU,CAClB,CANK,EAFR,CA1Ce,CAAjB,EAqDD,CAtDD,EAwDA,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCD,OAAO,CAACR,WAAD,CAAP,CACAS,MAAM,CAAC,6BAAD,CAAN,CACD,CAHM,CAAP,CAID","sourcesContent":["export default function getDidData(data) {\r\n  let profileList = [];\r\n\r\n  data['data'].forEach(profile => {\r\n    profileList.push([\r\n      {\r\n        type: \"did\",\r\n        index: \"DID\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['did'];\r\n            return destruct ? destruct : \"\";\r\n          }\r\n          catch {return \"\"};\r\n        })()\r\n      },\r\n      {\r\n        index: \"Extension\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['line']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Description\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['description']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Area\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['location']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['area']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      }\r\n    ])\r\n  })\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(profileList)\r\n    reject(\"Unable to retrieve devices.\")\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}