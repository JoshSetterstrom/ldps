{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, React, useState } from 'react';\nimport * as style from \"../css/searchList\";\nimport ListDeviceItem from \"./listDeviceItem\";\nimport ListUserItem from \"./listUserItem\";\nimport IndexMenu from \"./indexMenu\";\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet string = \"\";\nlet searchDevice = getDeviceData;\nlet searchUser = getUserData;\nlet relevantSearch = \"mac\";\nlet filteredDeviceSearch = [\"\"];\nlet filteredUserSearch = [\"\"];\nexport default function SearchList() {\n  _s();\n\n  const [device, setDevice] = useState(searchDevice);\n  const [user, setUser] = useState(searchUser);\n  const [scroll, setScroll] = useState({\n    scrollTop: 0\n  });\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\n  const [userDisplay, setUserDisplay] = useState(true);\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\n  const scrollRef = useRef({\n    scrollTop: 0\n  }); //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\n\n  const returnSearch = () => {\n    let infoType = [];\n    let unfilteredDeviceSearch = [];\n    let unfilteredUserSearch = [];\n    searchDevice.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          infoType.push(e.type);\n          unfilteredDeviceSearch.push(profile);\n        }\n      });\n    });\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\n    searchUser.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          infoType.push(e.type);\n          unfilteredUserSearch.push(profile);\n        }\n      });\n    });\n    filteredUserSearch = [...new Set(unfilteredUserSearch)]; //Highlights most relavent searchindex.\n\n    let counts = [];\n    infoType.forEach(e => {\n      counts[e] = (counts[e] || 0) + 1;\n    });\n    relevantSearch = Object.keys(counts)[0];\n    infoType = [];\n  };\n\n  const handleInputChange = e => {\n    string = e.target.value;\n    returnSearch();\n    setDevice(filteredDeviceSearch);\n    setUser(filteredUserSearch);\n  };\n\n  const handleSearchTypeChange = e => {\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n      console.log(e.target.style);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(false);\n      return;\n    }\n\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setDeviceDisplay(false);\n      setUserDisplay(true);\n      return;\n    }\n\n    if (e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(true);\n      return;\n    }\n  };\n\n  const handleScroll = e => {\n    setScroll({\n      scrollTop: scrollRef.current.scrollTop\n    });\n    print(scroll);\n  }; //Renders a list with all devices returned to filteredSearch and passed to device state.\n\n\n  const renderPhoneList = () => {\n    if (deviceDisplay) {\n      return device.map((item, i) => /*#__PURE__*/_jsxDEV(ListDeviceItem, {\n        mac: item[0].data,\n        user: item[1].data.toLowerCase(),\n        line: item[2].data,\n        mask: item[3].data,\n        ip: item[4].data,\n        location: item[5].data.toLowerCase()\n      }, `ID${i}D`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderUserList = () => {\n    if (userDisplay) {\n      return user.map((item, i) => /*#__PURE__*/_jsxDEV(ListUserItem, {\n        id: item[0].data,\n        name: item[1].data,\n        primary: item[2].data,\n        department: item[3].data\n      }, `ID${i}U`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderDeviceIndexMenu = () => {\n    if (deviceDisplay) {\n      if (filteredDeviceSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        index1: \"MAC Address\",\n        index2: \"User\",\n        index3: \"Primary Line\",\n        index4: \"Line Mask\",\n        index5: \"IP Address\",\n        index6: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderUserIndexMenu = () => {\n    if (userDisplay) {\n      if (filteredUserSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 51\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        index1: \"User ID\",\n        index2: \"Name\",\n        index3: \"Primary Line\",\n        index4: \"Department\",\n        index6: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: \"59.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeDeviceStyle,\n        children: \"Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeUserStyle,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        onScroll: e => handleScroll(e),\n        style: style.listContainerStyle,\n        children: [renderDeviceIndexMenu(), renderPhoneList(), renderUserIndexMenu(), renderUserList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"lg1zGzBcatvmkuufTFF+HBC4BJ8=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList.jsx"],"names":["useRef","React","useState","style","ListDeviceItem","ListUserItem","IndexMenu","getDeviceData","getUserData","string","searchDevice","searchUser","relevantSearch","filteredDeviceSearch","filteredUserSearch","SearchList","device","setDevice","user","setUser","scroll","setScroll","scrollTop","deviceDisplay","setDeviceDisplay","userDisplay","setUserDisplay","searchTypeDeviceStyle","setSearchTypeDeviceStyle","searchTypeUserStyle","setSearchTypeUserStyle","scrollRef","returnSearch","infoType","unfilteredDeviceSearch","unfilteredUserSearch","forEach","profile","e","data","toString","toLowerCase","includes","push","type","Set","counts","Object","keys","handleInputChange","target","value","handleSearchTypeChange","textContent","console","log","searchTypeDeviceStyleHighlight","searchTypeUserStyleHighlight","handleScroll","current","print","renderPhoneList","map","item","i","renderUserList","renderDeviceIndexMenu","length","renderUserIndexMenu","minWidth","display","searchInputStyle","listContainerStyle"],"mappings":"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","sourcesContent":["import {useRef, React, useState} from 'react';\r\nimport * as style from \"../css/searchList\";\r\nimport ListDeviceItem from \"./listDeviceItem\";\r\nimport ListUserItem from \"./listUserItem\";\r\nimport IndexMenu from \"./indexMenu\";\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\n\r\nlet string = \"\";\r\nlet searchDevice = getDeviceData;\r\nlet searchUser = getUserData;\r\nlet relevantSearch = \"mac\";\r\nlet filteredDeviceSearch = [\"\"];\r\nlet filteredUserSearch = [\"\"];\r\n\r\nexport default function SearchList() {\r\n  const [device, setDevice] = useState(searchDevice);\r\n  const [user, setUser] = useState(searchUser);\r\n  const [scroll, setScroll] = useState({scrollTop: 0})\r\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\r\n  const [userDisplay, setUserDisplay] = useState(true);\r\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\r\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\r\n  const scrollRef = useRef({scrollTop: 0})\r\n  \r\n  //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\r\n  const returnSearch = () => {\r\n    let infoType = [];\r\n    let unfilteredDeviceSearch = [];\r\n    let unfilteredUserSearch = [];\r\n  \r\n    searchDevice.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          infoType.push(e.type);\r\n          unfilteredDeviceSearch.push(profile);\r\n        }\r\n      });\r\n    });\r\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\r\n  \r\n    searchUser.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          infoType.push(e.type);\r\n          unfilteredUserSearch.push(profile);\r\n        }\r\n      })\r\n    })\r\n    filteredUserSearch = [...new Set(unfilteredUserSearch)];\r\n  \r\n    //Highlights most relavent searchindex.\r\n    let counts = [];\r\n    infoType.forEach(e => {\r\n      counts[e] = (counts[e] || 0) + 1;\r\n    });\r\n    relevantSearch = Object.keys(counts)[0];\r\n    infoType = [];\r\n  };\r\n  const handleInputChange = e => {\r\n    string = e.target.value;\r\n    returnSearch();\r\n    setDevice(filteredDeviceSearch);\r\n    setUser(filteredUserSearch);\r\n  }\r\n\r\n  const handleSearchTypeChange = e => {\r\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n      console.log(e.target.style)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(false)\r\n      return\r\n    }\r\n\r\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {  \r\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setDeviceDisplay(false)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n\r\n    if (e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  const handleScroll = e => {\r\n    setScroll({scrollTop: scrollRef.current.scrollTop})\r\n    print(scroll)\r\n  }\r\n\r\n  //Renders a list with all devices returned to filteredSearch and passed to device state.\r\n  const renderPhoneList = () => {\r\n    if (deviceDisplay) {\r\n      return device.map((item, i) => (\r\n        <ListDeviceItem\r\n          key={`ID${i}D`}\r\n          mac={item[0].data}\r\n          user={item[1].data.toLowerCase()}\r\n          line={item[2].data}\r\n          mask={item[3].data}\r\n          ip={item[4].data}\r\n          location={item[5].data.toLowerCase()}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    if (userDisplay) {\r\n      return user.map((item, i) => (\r\n        <ListUserItem\r\n          key={`ID${i}U`}\r\n          id={item[0].data}\r\n          name={item[1].data}\r\n          primary={item[2].data}\r\n          department={item[3].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderDeviceIndexMenu = () => {\r\n    if (deviceDisplay) {\r\n      if (filteredDeviceSearch.length === 0) return <div></div>\r\n      return <IndexMenu index1=\"MAC Address\" index2=\"User\" index3=\"Primary Line\" index4=\"Line Mask\" index5=\"IP Address\" index6=\"Location\"/>\r\n    }\r\n  }\r\n\r\n  const renderUserIndexMenu = () => {\r\n    if (userDisplay) {\r\n      if (filteredUserSearch.length === 0) return <div></div>\r\n      return <IndexMenu index1=\"User ID\" index2=\"Name\" index3=\"Primary Line\" index4=\"Department\" index6=\"Location\"/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{minWidth: \"59.5vw\"}}>\r\n      <div style={{display: \"flex\"}}>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeDeviceStyle}>Device</div>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeUserStyle}>User</div>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      </div>\r\n      <div >\r\n        {/* <IndexMenu relevantSearch={relevantSearch}/> */}\r\n        <div ref={scrollRef} onScroll={e => handleScroll(e)} style={style.listContainerStyle}>\r\n          {renderDeviceIndexMenu()}\r\n          {renderPhoneList()}\r\n          {renderUserIndexMenu()}\r\n          {renderUserList()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}