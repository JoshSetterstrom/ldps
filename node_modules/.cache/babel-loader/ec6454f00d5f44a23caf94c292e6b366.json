{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const [buttons] = useState([\"Device\", \"User\", \"Line\", \"DID\"]);\n  const [defaultDataToRender] = useState(buttons);\n  const [filteredDataToRender, setFilteredDataToRender] = useState(buttons);\n\n  const addFilter = item => {\n    setFilteredDataToRender(filteredDataToRender.filter(e => {\n      return e !== item;\n    }));\n    console.log(filteredDataToRender);\n  };\n\n  function ProfileButton({\n    toRender\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: toRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  const renderButtons = () => {\n    return buttons.map((item, i) =>\n    /*#__PURE__*/\n    // <div \n    //     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\n    //     style={style[props.data['display']['style'][item.toLowerCase()]]}>\n    //   {item}\n    // </div>\n    _jsxDEV(ProfileButton, {\n      toRender: item,\n      onClick: e => addFilter(e.target.innerHTML),\n      style: style = style.searchTypeOther\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileButtons, \"4DEwoEIXNU7KWKuByYf6qPs6/iQ=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","React","useState","ProfileButtons","props","buttons","defaultDataToRender","filteredDataToRender","setFilteredDataToRender","addFilter","item","filter","e","console","log","ProfileButton","toRender","renderButtons","map","i","target","innerHTML","searchTypeOther","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,OAAD,IAAYH,QAAQ,CAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,EAA2B,KAA3B,CAAD,CAA1B;AACA,QAAM,CAACI,mBAAD,IAAwBJ,QAAQ,CAACG,OAAD,CAAtC;AACA,QAAM,CAACE,oBAAD,EAAuBC,uBAAvB,IAAkDN,QAAQ,CAACG,OAAD,CAAhE;;AAEA,QAAMI,SAAS,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,uBAAuB,CAACD,oBAAoB,CAACI,MAArB,CAA6BC,CAAD,IAAO;AAAC,aAAOA,CAAC,KAAKF,IAAb;AAAkB,KAAtD,CAAD,CAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,oBAAZ;AACD,GAHD;;AAKA,WAASQ,aAAT,CAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAmC;AACjC,wBACE;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAGD,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOZ,OAAO,CAACa,GAAR,CAAY,CAACR,IAAD,EAAOS,CAAP;AAAA;AACjB;AACA;AACA;AACA;AACA;AACA,YAAC,aAAD;AACE,MAAA,QAAQ,EAAET,IADZ;AAEE,MAAA,OAAO,EAAGE,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACQ,MAAF,CAASC,SAAV,CAF3B;AAGE,MAAA,KAAK,EAAErB,KAAK,GAACA,KAAK,CAACsB;AAHrB;AAAA;AAAA;AAAA;AAAA,YANK,CAAP;AAaD,GAdD;;AAgBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGP,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCuBd,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const [buttons] = useState([\"Device\", \"User\", \"Line\", \"DID\"])\r\n  const [defaultDataToRender] = useState(buttons)\r\n  const [filteredDataToRender, setFilteredDataToRender] = useState(buttons)\r\n\r\n  const addFilter = (item) => {\r\n    setFilteredDataToRender(filteredDataToRender.filter((e) => {return e !== item}))\r\n    console.log(filteredDataToRender)\r\n  }\r\n\r\n  function ProfileButton({toRender}) {\r\n    return (\r\n      <div>{toRender}</div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderButtons = () => {\r\n    return buttons.map((item, i) => (\r\n      // <div \r\n      //     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\r\n      //     style={style[props.data['display']['style'][item.toLowerCase()]]}>\r\n      //   {item}\r\n      // </div>\r\n      <ProfileButton\r\n        toRender={item}\r\n        onClick={(e) => addFilter(e.target.innerHTML)}\r\n        style={style=style.searchTypeOther}\r\n        />\r\n\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}