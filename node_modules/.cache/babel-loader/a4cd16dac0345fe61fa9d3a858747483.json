{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useMemo, useState } from 'react';\nimport * as style from \"../../css/light/searchList\";\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\nimport getUserData from \"../dataRetrieval/getUserData\";\nimport FocusedList from \"./focusedList\";\nimport getDidData from \"../dataRetrieval/getDidData\";\nimport getSearch from '../dataRetrieval/getSearch';\nimport ProfileList from \"../profileList/profileList\";\nimport Total from \"../total/total\";\nimport ProfileButtons from \"../profileButtons/profileButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList() {\n  _s();\n\n  const profileData = useMemo(() => {\n    return {\n      \"device\": getDeviceData(),\n      \"user\": getUserData()\n    };\n  }, []);\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\"]);\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50);\n  const [focues, setFocused] = useState([]);\n\n  const handleInputChange = string => {\n    setProfileDataToRender(getSearch(string, listToRender, profileData));\n  };\n\n  const handleFocus = (e, type, id, assoc) => {\n    if (e.target.style.cursor !== \"pointer\") return;\n\n    for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return;\n\n    let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused];\n    setFocused(newFocused);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"63.5vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n        listToRender: listToRender,\n        setListToRender: setListToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileList, {\n        listToRender: listToRender,\n        profileDataToRender: profileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        totalToRenderNumber: totalToRenderNumber,\n        setTotalToRenderNumber: setTotalToRenderNumber,\n        profileDataToRender: profileDataToRender,\n        listToRender: listToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FocusedList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"mOBeMt+p1K9uvCi8cK65MQCPqy8=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/searchList.jsx"],"names":["React","useMemo","useState","style","getDeviceData","getUserData","FocusedList","getDidData","getSearch","ProfileList","Total","ProfileButtons","SearchList","profileData","listToRender","setListToRender","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","focues","setFocused","handleInputChange","string","handleFocus","e","type","id","assoc","target","cursor","i","focused","innerHTML","resources","data","newFocused","require","nativeEvent","path","innerText","split","maxWidth","searchInputStyle"],"mappings":"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","sourcesContent":["import {React, useMemo, useState} from 'react';\r\nimport * as style from \"../../css/light/searchList\";\r\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\r\nimport getUserData from \"../dataRetrieval/getUserData\";\r\nimport FocusedList from \"./focusedList\"\r\nimport getDidData from \"../dataRetrieval/getDidData\";\r\nimport getSearch from '../dataRetrieval/getSearch';\r\nimport ProfileList from \"../profileList/profileList\"\r\nimport Total from \"../total/total\"\r\nimport ProfileButtons from \"../profileButtons/profileButtons\"\r\n\r\nexport default function SearchList() {\r\n  const profileData = useMemo(() => {return {\"device\": getDeviceData(), \"user\": getUserData()}}, [])\r\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\"])\r\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData)\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50)\r\n  const [focues, setFocused] = useState([])\r\n\r\n  const handleInputChange = string => {\r\n    setProfileDataToRender(getSearch(string, listToRender, profileData))\r\n  }\r\n\r\n  const handleFocus = (e, type, id, assoc) => {\r\n    if (e.target.style.cursor !== \"pointer\") return\r\n    for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n    let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n    setFocused(newFocused)\r\n  }\r\n    \r\n  return (\r\n    <div>\r\n      <div style={{maxWidth: \"63.5vw\"}}>\r\n        <ProfileButtons listToRender={listToRender} setListToRender={setListToRender}/>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n        <ProfileList listToRender={listToRender} profileDataToRender={profileDataToRender} totalToRenderNumber={totalToRenderNumber}/>\r\n        <Total totalToRenderNumber={totalToRenderNumber} setTotalToRenderNumber={setTotalToRenderNumber} profileDataToRender={profileDataToRender} listToRender={listToRender}/>\r\n      </div>\r\n      <FocusedList />\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}