{"ast":null,"code":"import _defineProperty from\"C:/Users/Josh/Desktop/ld/ldreact/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Josh/Desktop/ld/ldreact/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Josh/Desktop/ld/ldreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as style from\"../../css/light/profileButtons\";import createButtonState from\"./createButtonState\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ProfileButtons(_ref){var listToRender=_ref.listToRender,setListToRender=_ref.setListToRender;var staticButtons=listToRender;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),highlighted=_useState2[0],setHighlighted=_useState2[1];var _useState3=useState(staticButtons),_useState4=_slicedToArray(_useState3,1),defaultButtons=_useState4[0];var _useState5=useState(createButtonState(defaultButtons,style)),_useState6=_slicedToArray(_useState5,2),buttonStyle=_useState6[0],setButtonStyle=_useState6[1];var changeFilter=function changeFilter(item,position){if(highlighted===item.target.innerHTML){setButtonStyle(createButtonState(defaultButtons,style));setListToRender(defaultButtons);setHighlighted(\"\");return;}else{var newButtonState=createButtonState(defaultButtons,style);newButtonState=_objectSpread(_objectSpread({},newButtonState),{},_defineProperty({},position,style.profileButtonHighlighted));setButtonStyle(newButtonState);setListToRender([item.target.innerHTML]);setHighlighted(item.target.innerHTML);}};return/*#__PURE__*/_jsx(\"div\",{style:style.profileButtonsContainer,children:function(){return defaultButtons.map(function(item,i){return/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(e){return changeFilter(e,i);},style:buttonStyle[i],children:item},\"button\".concat(i));});}()});}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileButtons/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","listToRender","setListToRender","staticButtons","highlighted","setHighlighted","defaultButtons","buttonStyle","setButtonStyle","changeFilter","item","position","target","innerHTML","newButtonState","profileButtonHighlighted","profileButtonsContainer","map","i","e"],"mappings":"0VAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,2CAEA,cAAe,SAASC,CAAAA,cAAT,MAAyD,IAAhCC,CAAAA,YAAgC,MAAhCA,YAAgC,CAAlBC,eAAkB,MAAlBA,eAAkB,CACtE,GAAMC,CAAAA,aAAa,CAAGF,YAAtB,CACA,cAAsCF,QAAQ,CAAC,EAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eACA,eAAyBN,QAAQ,CAACI,aAAD,CAAjC,yCAAOG,cAAP,eACA,eAAsCP,QAAQ,CAACF,iBAAiB,CAACS,cAAD,CAAiBV,KAAjB,CAAlB,CAA9C,yCAAOW,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAOC,QAAP,CAAoB,CACvC,GAAIP,WAAW,GAAKM,IAAI,CAACE,MAAL,CAAYC,SAAhC,CAA2C,CACzCL,cAAc,CAACX,iBAAiB,CAACS,cAAD,CAAiBV,KAAjB,CAAlB,CAAd,CACAM,eAAe,CAACI,cAAD,CAAf,CACAD,cAAc,CAAC,EAAD,CAAd,CACA,OACD,CALD,IAOK,CACH,GAAIS,CAAAA,cAAc,CAAGjB,iBAAiB,CAACS,cAAD,CAAiBV,KAAjB,CAAtC,CACAkB,cAAc,gCAAOA,cAAP,wBAAwBH,QAAxB,CAAmCf,KAAK,CAACmB,wBAAzC,EAAd,CACAP,cAAc,CAACM,cAAD,CAAd,CACAZ,eAAe,CAAC,CAACQ,IAAI,CAACE,MAAL,CAAYC,SAAb,CAAD,CAAf,CACAR,cAAc,CAACK,IAAI,CAACE,MAAL,CAAYC,SAAb,CAAd,CACD,CACF,CAfD,CAiBA,mBACE,YAAK,KAAK,CAAEjB,KAAK,CAACoB,uBAAlB,UACI,UAAM,CACN,MAAOV,CAAAA,cAAc,CAACW,GAAf,CAAmB,SAACP,IAAD,CAAOQ,CAAP,qBACxB,YAEI,OAAO,CAAE,iBAAAC,CAAC,QAAIV,CAAAA,YAAY,CAACU,CAAD,CAAID,CAAJ,CAAhB,EAFd,CAEsC,KAAK,CAAEX,WAAW,CAACW,CAAD,CAFxD,UAGGR,IAHH,kBACkBQ,CADlB,EADwB,EAAnB,CAAP,CAOD,CARA,EADH,EADF,CAaD","sourcesContent":["import * as style from \"../../css/light/profileButtons\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons({listToRender, setListToRender}) {\r\n  const staticButtons = listToRender\r\n  const [highlighted, setHighlighted] = useState(\"\")\r\n  const [defaultButtons] = useState(staticButtons)\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(defaultButtons, style))\r\n\r\n  const changeFilter = (item, position) => {\r\n    if (highlighted === item.target.innerHTML) {\r\n      setButtonStyle(createButtonState(defaultButtons, style))\r\n      setListToRender(defaultButtons)\r\n      setHighlighted(\"\")\r\n      return\r\n    }\r\n\r\n    else {\r\n      let newButtonState = createButtonState(defaultButtons, style)\r\n      newButtonState = {...newButtonState, [position]: style.profileButtonHighlighted}\r\n      setButtonStyle(newButtonState)\r\n      setListToRender([item.target.innerHTML])\r\n      setHighlighted(item.target.innerHTML)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.profileButtonsContainer}>\r\n      {(() => {\r\n        return defaultButtons.map((item, i) => (\r\n          <div \r\n              key={`button${i}`} \r\n              onClick={e => changeFilter(e, i)} style={buttonStyle[i]}>\r\n            {item}\r\n          </div>\r\n        ))\r\n      })()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}