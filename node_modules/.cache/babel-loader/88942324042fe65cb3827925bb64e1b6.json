{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const [buttons] = useState([\"Device\", \"DID\", \"Line\", \"User\"]);\n  const [filteredDataToRender, setFilteredDataToRender] = useState([\"Device\", \"DID\", \"Line\", \"User\"]);\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style));\n\n  const remove = position => {\n    let temp = [...filteredDataToRender];\n    temp.splice(position, 1);\n    console.log(temp);\n  };\n\n  const addFilter = (item, position) => {\n    buttonStyle[position].border ? setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOther\n    }) : setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOtherHighlight\n    });\n    console.log(filteredDataToRender); // if (filteredDataToRender.includes(item.target.innerHTML)) {\n\n    remove(position); // }\n    // }\n    // else {\n    //   setFilteredDataToRender(filteredDataToRender.splice(position, 0, item.target.innerHTML))\n    // }\n  };\n\n  const renderButtons = () => {\n    return buttons.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => addFilter(e, i),\n      style: buttonStyle[i],\n      children: item\n    }, `B${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n} // <div \n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\n//   {item}\n// </div>\n\n_s(ProfileButtons, \"7OdflSaPbffjOMBqRy3obxO2qWQ=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","props","buttons","filteredDataToRender","setFilteredDataToRender","buttonStyle","setButtonStyle","remove","position","temp","splice","console","log","addFilter","item","border","searchTypeOther","searchTypeOtherHighlight","renderButtons","map","i","e","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,OAAD,IAAYH,QAAQ,CAAC,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,MAA1B,CAAD,CAA1B;AACA,QAAM,CAACI,oBAAD,EAAuBC,uBAAvB,IAAkDL,QAAQ,CAAC,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,MAA1B,CAAD,CAAhE;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACF,iBAAiB,CAACK,OAAD,EAAUN,KAAV,CAAlB,CAA9C;;AAEA,QAAMW,MAAM,GAAIC,QAAD,IAAc;AAC3B,QAAIC,IAAI,GAAG,CAAC,GAAGN,oBAAJ,CAAX;AACAM,IAAAA,IAAI,CAACC,MAAL,CAAYF,QAAZ,EAAsB,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAJD;;AAMA,QAAMI,SAAS,GAAG,CAACC,IAAD,EAAON,QAAP,KAAoB;AACpCH,IAAAA,WAAW,CAACG,QAAD,CAAX,CAAsBO,MAAtB,GACET,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACG,QAAD,GAAYZ,KAAK,CAACoB;AAAnC,KAAD,CADhB,GAEEV,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACG,QAAD,GAAYZ,KAAK,CAACqB;AAAnC,KAAD,CAFhB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAYT,oBAAZ,EALoC,CAOpC;;AACEI,IAAAA,MAAM,CAACC,QAAD,CAAN,CARkC,CASpC;AACA;AACA;AACA;AACA;AAGD,GAhBD;;AAkBA,QAAMU,aAAa,GAAG,MAAM;AAC1B,WAAOhB,OAAO,CAACiB,GAAR,CAAY,CAACL,IAAD,EAAOM,CAAP,kBACjB;AAAmB,MAAA,OAAO,EAAGC,CAAD,IAAOR,SAAS,CAACQ,CAAD,EAAID,CAAJ,CAA5C;AAAoD,MAAA,KAAK,EAAEf,WAAW,CAACe,CAAD,CAAtE;AAAA,gBACGN;AADH,OAAW,IAAGM,CAAE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGL,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAID;AACA;AACA;AACA;AACA;;GAlDwBlB,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const [buttons] = useState([\"Device\", \"DID\", \"Line\", \"User\"])\r\n  const [filteredDataToRender, setFilteredDataToRender] = useState([\"Device\", \"DID\", \"Line\", \"User\"])\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style))\r\n  \r\n  const remove = (position) => {\r\n    let temp = [...filteredDataToRender]\r\n    temp.splice(position, 1)\r\n    console.log(temp)\r\n  }\r\n\r\n  const addFilter = (item, position) => {\r\n    buttonStyle[position].border \r\n    ? setButtonStyle({...buttonStyle, [position]: style.searchTypeOther})\r\n    : setButtonStyle({...buttonStyle, [position]: style.searchTypeOtherHighlight})\r\n\r\n    console.log(filteredDataToRender)\r\n\r\n    // if (filteredDataToRender.includes(item.target.innerHTML)) {\r\n      remove(position)\r\n    // }\r\n    // }\r\n    // else {\r\n    //   setFilteredDataToRender(filteredDataToRender.splice(position, 0, item.target.innerHTML))\r\n    // }\r\n    \r\n    \r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttons.map((item, i) => (\r\n      <div key={`B${i}`} onClick={(e) => addFilter(e, i)} style={buttonStyle[i]}>\r\n        {item}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// <div \r\n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\r\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\r\n//   {item}\r\n// </div>"]},"metadata":{},"sourceType":"module"}