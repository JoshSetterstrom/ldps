{"ast":null,"code":"import returnSearch from \"./returnSearch\";\nexport default function getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch, ret = ['Device', 'User', 'Did']) {\n  let temp = {};\n  ret.forEach(e => {\n    switch (e) {\n      case \"Device\":\n        temp[e.toLowerCase()] = returnSearch(getDeviceData), string.target.value.toLowerCase(), filteredSearch.device.results;\n\n      case \"User\":\n        temp[e.toLowerCase()] = returnSearch(getUserData), string.target.value.toLowerCase(), filteredSearch.user.results;\n\n      case \"Did\":\n        temp[e.toLowerCase()] = returnSearch(getDidData), string.target.value.toLowerCase(), filteredSearch.did.results;\n\n      default:\n      /*pass*/\n\n    }\n\n    return temp;\n  }); // let temp = {}\n  // ret.forEach(e => temp[e.toLowerCase()] = returnSearch(eval(`get${e}Data`), string.target.value.toLowerCase(), eval(`filteredSearch.${e.toLowerCase()}.results`)))\n  // return temp\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/getSearch.js"],"names":["returnSearch","getSearch","getDeviceData","getUserData","getDidData","string","filteredSearch","ret","temp","forEach","e","toLowerCase","target","value","device","results","user","did"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,SAAT,CAAmBC,aAAnB,EAAkCC,WAAlC,EAA+CC,UAA/C,EAA2DC,MAA3D,EAAmEC,cAAnE,EAAmFC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,CAAvF,EAAkH;AAC/H,MAAIC,IAAI,GAAG,EAAX;AAEAD,EAAAA,GAAG,CAACE,OAAJ,CAAYC,CAAC,IAAI;AACf,YAAOA,CAAP;AACE,WAAK,QAAL;AAAeF,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACE,aAAD,CAApC,EAAqDG,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAArD,EAAwFL,cAAc,CAACQ,MAAf,CAAsBC,OAA9G;;AACf,WAAK,MAAL;AAAaP,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACG,WAAD,CAApC,EAAmDE,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAAnD,EAAsFL,cAAc,CAACU,IAAf,CAAoBD,OAA1G;;AACb,WAAK,KAAL;AAAYP,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACI,UAAD,CAApC,EAAkDC,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAAlD,EAAqFL,cAAc,CAACW,GAAf,CAAmBF,OAAxG;;AACZ;AAAS;;AAJX;;AAOA,WAAOP,IAAP;AACD,GATD,EAH+H,CAc/H;AACA;AACA;AACD","sourcesContent":["import returnSearch from \"./returnSearch\"\r\n\r\nexport default function getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch, ret=['Device', 'User', 'Did']) {\r\n  let temp = {}\r\n\r\n  ret.forEach(e => {\r\n    switch(e) {\r\n      case \"Device\": temp[e.toLowerCase()] = returnSearch(getDeviceData), string.target.value.toLowerCase(), filteredSearch.device.results\r\n      case \"User\": temp[e.toLowerCase()] = returnSearch(getUserData), string.target.value.toLowerCase(), filteredSearch.user.results\r\n      case \"Did\": temp[e.toLowerCase()] = returnSearch(getDidData), string.target.value.toLowerCase(), filteredSearch.did.results\r\n      default: /*pass*/\r\n    }\r\n\r\n    return temp\r\n  })\r\n\r\n  // let temp = {}\r\n  // ret.forEach(e => temp[e.toLowerCase()] = returnSearch(eval(`get${e}Data`), string.target.value.toLowerCase(), eval(`filteredSearch.${e.toLowerCase()}.results`)))\r\n  // return temp\r\n}"]},"metadata":{},"sourceType":"module"}