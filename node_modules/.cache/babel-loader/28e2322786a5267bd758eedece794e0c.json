{"ast":null,"code":"export default function getSearch(string, listToRender, profileData) {\n  let returnedObject = {};\n  console.log(listToRender.map(listItem => {\n    return {\n      [listItem]: \"test\" // profileData[listItem].filter(list => {\n      //     let bool = list.some(item => {\n      //     let cleanItem   = item['data'].toString().toLowerCase()\n      //     let cleanString = string.target.value.toLowerCase()\n      //     if (cleanItem.includes(cleanString)) return true\n      //     else return false\n      //   })\n      //   return bool\n      // })\n\n    };\n  }));\n  listToRender.forEach(listItem => {\n    var _profileData$listItem;\n\n    let returnedList = [];\n    listItem = listItem.toLowerCase();\n    (_profileData$listItem = profileData[listItem]) === null || _profileData$listItem === void 0 ? void 0 : _profileData$listItem.forEach(object => {\n      for (let i in object) {\n        if (object[i]['data'].toString().toLowerCase().includes(string.target.value.toLowerCase())) {\n          returnedList.push(object);\n          break;\n        }\n      }\n    });\n    returnedObject[listItem] = returnedList;\n  });\n  return returnedObject;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/api/getSearch.js"],"names":["getSearch","string","listToRender","profileData","returnedObject","console","log","map","listItem","forEach","returnedList","toLowerCase","object","i","toString","includes","target","value","push"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,WAAzC,EAAsD;AACnE,MAAIC,cAAc,GAAG,EAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACK,GAAb,CAAiBC,QAAQ,IAAI;AACvC,WAAO;AACL,OAACA,QAAD,GAAY,MADP,CAEL;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAZK,KAAP;AAcD,GAfW,CAAZ;AAiBAN,EAAAA,YAAY,CAACO,OAAb,CAAsBD,QAAD,IAAc;AAAA;;AACjC,QAAIE,YAAY,GAAG,EAAnB;AACAF,IAAAA,QAAQ,GAAGA,QAAQ,CAACG,WAAT,EAAX;AAEA,6BAAAR,WAAW,CAACK,QAAD,CAAX,gFAAuBC,OAAvB,CAA+BG,MAAM,IAAI;AACvC,WAAK,IAAIC,CAAT,IAAcD,MAAd,EAAsB;AACpB,YAAIA,MAAM,CAACC,CAAD,CAAN,CAAU,MAAV,EAAkBC,QAAlB,GAA6BH,WAA7B,GAA2CI,QAA3C,CAAoDd,MAAM,CAACe,MAAP,CAAcC,KAAd,CAAoBN,WAApB,EAApD,CAAJ,EAA4F;AAC1FD,UAAAA,YAAY,CAACQ,IAAb,CAAkBN,MAAlB;AACA;AACD;AACF;AACF,KAPD;AASAR,IAAAA,cAAc,CAACI,QAAD,CAAd,GAA2BE,YAA3B;AACD,GAdD;AAgBA,SAAON,cAAP;AACD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n  let returnedObject = {}\r\n\r\n  console.log(listToRender.map(listItem => {\r\n    return {\r\n      [listItem]: \"test\"\r\n      // profileData[listItem].filter(list => {\r\n      //     let bool = list.some(item => {\r\n      //     let cleanItem   = item['data'].toString().toLowerCase()\r\n      //     let cleanString = string.target.value.toLowerCase()\r\n  \r\n      //     if (cleanItem.includes(cleanString)) return true\r\n      //     else return false\r\n      //   })\r\n  \r\n      //   return bool\r\n      // })\r\n    }\r\n  }))\r\n  \r\n  listToRender.forEach((listItem) => {\r\n    let returnedList = []\r\n    listItem = listItem.toLowerCase()\r\n\r\n    profileData[listItem]?.forEach(object => {\r\n      for (let i in object) {\r\n        if (object[i]['data'].toString().toLowerCase().includes(string.target.value.toLowerCase())) {\r\n          returnedList.push(object)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    returnedObject[listItem] = returnedList\r\n  })\r\n\r\n  return returnedObject\r\n}"]},"metadata":{},"sourceType":"module"}