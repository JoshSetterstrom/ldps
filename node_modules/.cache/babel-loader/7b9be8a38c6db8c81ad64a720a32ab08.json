{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\focusedCases.jsx\";\nimport FocusedUserList from \"./focusedUserList\";\nimport FocusedDeviceList from \"./focusedDeviceList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function focusedCases(data, type, profile) {\n  let temp = [];\n  let tempProfile = {\n    \"profile\": profile,\n    \"users\": \"\",\n    \"lines\": \"\",\n    \"blfs\": \"\"\n  }; // switch(type) {\n  //   case \"users\":\n\n  temp = [];\n  tempProfile = {\n    \"profile\": profile,\n    \"users\": \"\",\n    \"lines\": \"\",\n    \"blfs\": \"\"\n  };\n  data.resources[0].data.Phone.forEach(e => {\n    tempProfile['users'] = [...tempProfile['users'], e.name];\n\n    if (e.lines) {\n      temp = [];\n      e.lines.line.forEach(i => temp = [...temp, i.label]);\n      tempProfile['lines'] = [...tempProfile['lines'], temp];\n    }\n\n    if (e.busyLampFields) {\n      temp = [];\n      e.busyLampFields.busyLampField.forEach(i => temp = [...temp, `${i.label} - ${i.blfDest}`]);\n      tempProfile['blfs'] = [...tempProfile['blfs'], temp];\n    } // try {e.busyLampFields.busyLampField.forEach(i => tempProfile['blfs'] = [...tempProfile['blfs'], `${i.label} - ${i.blfDest}`])}\n    // catch {/*BLF's do not exist*/}\n\n  });\n  return /*#__PURE__*/_jsxDEV(FocusedUserList, {\n    profile: tempProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this); //   case \"phones\":\n  //     let lines= []\n  //     temp = []\n  //     tempProfile = {\"profile\": profile, \"users\": [], \"lines\": [], \"blfs\": [], \"e164\": []}\n  //     try {\n  //       data.resources[0].data.lines.line.forEach(e => {\n  //         temp = [...temp, e.dirn.pattern]\n  //         tempProfile['lines'] = [...tempProfile['lines'], e.dirn.pattern]\n  //         lines = [...lines, e]\n  //       })\n  //     }\n  //     catch {/*Lines do not exist*/}\n  //     try {data.resources[0].data.busyLampFields.busyLampField.forEach(() => tempProfile['blfs'] = [...tempProfile['blfs'], temp])}\n  //     catch {/*BLF's do not exist*/}\n  //     try {data.resources[0].data.speeddails.speeddail.forEach(() => tempProfile['blfs'] = [...tempProfile['blfs'], temp])}\n  //     catch {/*Speeddails do not exit*/}\n  //     return <FocusedDeviceList type='label' meta={lines} profile={tempProfile}/>\n  //   default: return\n  // }\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/focusedCases.jsx"],"names":["FocusedUserList","FocusedDeviceList","focusedCases","data","type","profile","temp","tempProfile","resources","Phone","forEach","e","name","lines","line","i","label","busyLampFields","busyLampField","blfDest"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACxD,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,WAAW,GAAG;AAAC,eAAWF,OAAZ;AAAqB,aAAS,EAA9B;AAAkC,aAAS,EAA3C;AAA+C,YAAQ;AAAvD,GAAlB,CAFwD,CAGxD;AACA;;AACAC,EAAAA,IAAI,GAAG,EAAP;AACAC,EAAAA,WAAW,GAAG;AAAC,eAAWF,OAAZ;AAAqB,aAAS,EAA9B;AAAkC,aAAS,EAA3C;AAA+C,YAAQ;AAAvD,GAAd;AACAF,EAAAA,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBL,IAAlB,CAAuBM,KAAvB,CAA6BC,OAA7B,CAAqCC,CAAC,IAAI;AACxCJ,IAAAA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAC,GAAGA,WAAW,CAAC,OAAD,CAAf,EAA0BI,CAAC,CAACC,IAA5B,CAAvB;;AAEA,QAAID,CAAC,CAACE,KAAN,EAAa;AACXP,MAAAA,IAAI,GAAG,EAAP;AACAK,MAAAA,CAAC,CAACE,KAAF,CAAQC,IAAR,CAAaJ,OAAb,CAAsBK,CAAD,IAAOT,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUS,CAAC,CAACC,KAAZ,CAAnC;AACAT,MAAAA,WAAW,CAAC,OAAD,CAAX,GAAuB,CAAC,GAAGA,WAAW,CAAC,OAAD,CAAf,EAA0BD,IAA1B,CAAvB;AACD;;AAED,QAAIK,CAAC,CAACM,cAAN,EAAsB;AACpBX,MAAAA,IAAI,GAAG,EAAP;AACAK,MAAAA,CAAC,CAACM,cAAF,CAAiBC,aAAjB,CAA+BR,OAA/B,CAAuCK,CAAC,IAAIT,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAW,GAAES,CAAC,CAACC,KAAM,MAAKD,CAAC,CAACI,OAAQ,EAApC,CAAnD;AACAZ,MAAAA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAC,GAAGA,WAAW,CAAC,MAAD,CAAf,EAAyBD,IAAzB,CAAtB;AACD,KAbuC,CAexC;AACA;;AACD,GAjBD;AAmBA,sBAAO,QAAC,eAAD;AAAiB,IAAA,OAAO,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP,CA1BwD,CA4BxD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACD","sourcesContent":["import FocusedUserList from \"./focusedUserList\"\r\nimport FocusedDeviceList from \"./focusedDeviceList\"\r\n\r\nexport default function focusedCases(data, type, profile) {\r\n  let temp = []\r\n  let tempProfile = {\"profile\": profile, \"users\": \"\", \"lines\": \"\", \"blfs\": \"\"}\r\n  // switch(type) {\r\n  //   case \"users\":\r\n  temp = []\r\n  tempProfile = {\"profile\": profile, \"users\": \"\", \"lines\": \"\", \"blfs\": \"\"}\r\n  data.resources[0].data.Phone.forEach(e => {\r\n    tempProfile['users'] = [...tempProfile['users'], e.name]\r\n    \r\n    if (e.lines) {\r\n      temp = []\r\n      e.lines.line.forEach((i) => temp = [...temp, i.label])\r\n      tempProfile['lines'] = [...tempProfile['lines'], temp]\r\n    }\r\n\r\n    if (e.busyLampFields) {\r\n      temp = []\r\n      e.busyLampFields.busyLampField.forEach(i => temp = [...temp, `${i.label} - ${i.blfDest}`])\r\n      tempProfile['blfs'] = [...tempProfile['blfs'], temp]\r\n    }\r\n\r\n    // try {e.busyLampFields.busyLampField.forEach(i => tempProfile['blfs'] = [...tempProfile['blfs'], `${i.label} - ${i.blfDest}`])}\r\n    // catch {/*BLF's do not exist*/}\r\n  })\r\n\r\n  return <FocusedUserList profile={tempProfile}/>\r\n\r\n  //   case \"phones\":\r\n  //     let lines= []\r\n  //     temp = []\r\n  //     tempProfile = {\"profile\": profile, \"users\": [], \"lines\": [], \"blfs\": [], \"e164\": []}\r\n\r\n  //     try {\r\n  //       data.resources[0].data.lines.line.forEach(e => {\r\n  //         temp = [...temp, e.dirn.pattern]\r\n  //         tempProfile['lines'] = [...tempProfile['lines'], e.dirn.pattern]\r\n  //         lines = [...lines, e]\r\n  //       })\r\n  //     }\r\n  //     catch {/*Lines do not exist*/}\r\n      \r\n  //     try {data.resources[0].data.busyLampFields.busyLampField.forEach(() => tempProfile['blfs'] = [...tempProfile['blfs'], temp])}\r\n  //     catch {/*BLF's do not exist*/}\r\n      \r\n  //     try {data.resources[0].data.speeddails.speeddail.forEach(() => tempProfile['blfs'] = [...tempProfile['blfs'], temp])}\r\n  //     catch {/*Speeddails do not exit*/}\r\n\r\n  //     return <FocusedDeviceList type='label' meta={lines} profile={tempProfile}/>\r\n  //   default: return\r\n  // }\r\n}"]},"metadata":{},"sourceType":"module"}