{"ast":null,"code":"import * as style from \"../../css/searchList\";\nexport default function handleSearchTypeChange(targ, data, ret = ['Device', 'User', 'DID', 'borderWidth']) {\n  const test = {\n    'case': {\n      'device': [1, 0, 0],\n      'user': [0, 1, 0],\n      'did': [0, 0, 1],\n      'borderWidth': [0, 0, 0]\n    },\n    \"true\": {\n      'device': \"searchTypeDeviceStyleHighlight\",\n      'user': \"searchTypeUserStyleHighlight\",\n      'did': \"searchTypeDidStyleHighlight\"\n    },\n    'false': {\n      'device': \"searchTypeDeviceStyle\",\n      'user': \"searchTypeUserStyle\",\n      'did': \"searchTypeDidStyle\",\n      'borderWidth': ''\n    }\n  };\n  let results = {};\n  let bool = [];\n  ret.forEach((type, i) => {\n    if (targ.target.textContent === `${type}` && !targ.target.style['borderWidth']) {\n      targ.target.style['borderWidth'] ? bool = test['case'][type.toLowerCase()] : bool = test['case']['borderWidth']; // bool = test['case'][type.toLowerCase()]\n\n      bool.forEach((value, i) => {\n        results[Object.keys(test[Boolean(value)])[i]] = {\n          'display': Boolean(value),\n          'displayStyle': test[Boolean(value)][Object.keys(test[Boolean(value)])[i]]\n        };\n      });\n    }\n  });\n  console.log(results);\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/handleSearchTypeChange.jsx"],"names":["style","handleSearchTypeChange","targ","data","ret","test","results","bool","forEach","type","i","target","textContent","toLowerCase","value","Object","keys","Boolean","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,aAA1B,CAAhD,EAA0F;AAEvG,QAAMC,IAAI,GAAG;AACX,YAAQ;AACN,gBAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADJ;AAEN,cAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFF;AAGN,aAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHD;AAIN,qBAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAJT,KADG;AAOX,YAAQ;AACN,gBAAU,gCADJ;AAEN,cAAQ,8BAFF;AAGN,aAAO;AAHD,KAPG;AAYX,aAAS;AACP,gBAAU,uBADH;AAEP,cAAQ,qBAFD;AAGP,aAAO,oBAHA;AAIP,qBAAe;AAJR;AAZE,GAAb;AAmBA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,IAAI,GAAG,EAAX;AAEAH,EAAAA,GAAG,CAACI,OAAJ,CAAY,CAACC,IAAD,EAAOC,CAAP,KAAa;AACvB,QAAIR,IAAI,CAACS,MAAL,CAAYC,WAAZ,KAA6B,GAAEH,IAAK,EAApC,IAAyC,CAACP,IAAI,CAACS,MAAL,CAAYX,KAAZ,CAAkB,aAAlB,CAA9C,EAAgF;AAC9EE,MAAAA,IAAI,CAACS,MAAL,CAAYX,KAAZ,CAAkB,aAAlB,IAAmCO,IAAI,GAAGF,IAAI,CAAC,MAAD,CAAJ,CAAaI,IAAI,CAACI,WAAL,EAAb,CAA1C,GAA6EN,IAAI,GAAGF,IAAI,CAAC,MAAD,CAAJ,CAAa,aAAb,CAApF,CAD8E,CAE9E;;AACAE,MAAAA,IAAI,CAACC,OAAL,CAAa,CAACM,KAAD,EAAQJ,CAAR,KAAc;AACzBJ,QAAAA,OAAO,CAACS,MAAM,CAACC,IAAP,CAAYX,IAAI,CAACY,OAAO,CAACH,KAAD,CAAR,CAAhB,EAAkCJ,CAAlC,CAAD,CAAP,GAAgD;AAAC,qBAAWO,OAAO,CAACH,KAAD,CAAnB;AAA4B,0BAAgBT,IAAI,CAACY,OAAO,CAACH,KAAD,CAAR,CAAJ,CAAqBC,MAAM,CAACC,IAAP,CAAYX,IAAI,CAACY,OAAO,CAACH,KAAD,CAAR,CAAhB,EAAkCJ,CAAlC,CAArB;AAA5C,SAAhD;AACD,OAFD;AAGD;AACF,GARD;AASAQ,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD","sourcesContent":["import * as style from \"../../css/searchList\";\r\n\r\nexport default function handleSearchTypeChange(targ, data, ret=['Device', 'User', 'DID', 'borderWidth']) {\r\n\r\n  const test = {\r\n    'case': {\r\n      'device': [1,0,0],\r\n      'user': [0,1,0],\r\n      'did': [0,0,1],\r\n      'borderWidth': [0,0,0]\r\n    },\r\n    \"true\": {\r\n      'device': \"searchTypeDeviceStyleHighlight\",\r\n      'user': \"searchTypeUserStyleHighlight\",\r\n      'did': \"searchTypeDidStyleHighlight\",\r\n    },\r\n    'false': {\r\n      'device': \"searchTypeDeviceStyle\",\r\n      'user': \"searchTypeUserStyle\",\r\n      'did': \"searchTypeDidStyle\",\r\n      'borderWidth': ''\r\n    }\r\n  }\r\n  let results = {}\r\n  let bool = []\r\n  \r\n  ret.forEach((type, i) => {\r\n    if (targ.target.textContent === `${type}` && !targ.target.style['borderWidth']) {\r\n      targ.target.style['borderWidth'] ? bool = test['case'][type.toLowerCase()] : bool = test['case']['borderWidth']\r\n      // bool = test['case'][type.toLowerCase()]\r\n      bool.forEach((value, i) => {\r\n        results[Object.keys(test[Boolean(value)])[i]] = {'display': Boolean(value), 'displayStyle': test[Boolean(value)][Object.keys(test[Boolean(value)])[i]]}\r\n      })\r\n    }\r\n  })\r\n  console.log(results)\r\n}"]},"metadata":{},"sourceType":"module"}