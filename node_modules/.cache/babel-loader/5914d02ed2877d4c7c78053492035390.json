{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\profileButtons\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"./style/profileButtonsStyle\";\nimport createButtonState from \"./utils/createButtonState\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(_ref) {\n  _s();\n\n  let {\n    listToRender,\n    setListToRender\n  } = _ref;\n  const [highlighted, setHighlighted] = useState(\"\"); // const [listToRender] = useState(listToRender)\n\n  const [buttonStyle, setButtonStyle] = useState(listToRender.map(() => style.profileButton));\n\n  const changeFilter = (item, position) => {\n    if (highlighted === item.target.innerHTML) {\n      setButtonStyle(createButtonState(listToRender, style));\n      setListToRender(listToRender);\n      setHighlighted(\"\");\n      return;\n    } else {\n      let newButtonState = createButtonState(listToRender, style);\n      newButtonState = { ...newButtonState,\n        [position]: style.profileButtonHighlighted\n      };\n      setButtonStyle(newButtonState);\n      setListToRender([item.target.innerHTML]);\n      setHighlighted(item.target.innerHTML);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.profileButtonsContainer,\n    children: listToRender.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => changeFilter(e, i),\n      style: buttonStyle[i],\n      children: item\n    }, `button${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileButtons, \"n2H479M3j+oukf4+rIwl9EQdl+c=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileButtons/profileButtons.jsx"],"names":["style","createButtonState","useState","ProfileButtons","listToRender","setListToRender","highlighted","setHighlighted","buttonStyle","setButtonStyle","map","profileButton","changeFilter","item","position","target","innerHTML","newButtonState","profileButtonHighlighted","profileButtonsContainer","i","e"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,6BAAvB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,eAAe,SAASC,cAAT,OAAyD;AAAA;;AAAA,MAAjC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAiC;AACtE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CADsE,CAEtE;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACE,YAAY,CAACM,GAAb,CAAiB,MAAMV,KAAK,CAACW,aAA7B,CAAD,CAA9C;;AAEA,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvC,QAAIR,WAAW,KAAKO,IAAI,CAACE,MAAL,CAAYC,SAAhC,EAA2C;AACzCP,MAAAA,cAAc,CAACR,iBAAiB,CAACG,YAAD,EAAeJ,KAAf,CAAlB,CAAd;AACAK,MAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD,KALD,MAOK;AACH,UAAIU,cAAc,GAAGhB,iBAAiB,CAACG,YAAD,EAAeJ,KAAf,CAAtC;AACAiB,MAAAA,cAAc,GAAG,EAAC,GAAGA,cAAJ;AAAoB,SAACH,QAAD,GAAYd,KAAK,CAACkB;AAAtC,OAAjB;AACAT,MAAAA,cAAc,CAACQ,cAAD,CAAd;AACAZ,MAAAA,eAAe,CAAC,CAACQ,IAAI,CAACE,MAAL,CAAYC,SAAb,CAAD,CAAf;AACAT,MAAAA,cAAc,CAACM,IAAI,CAACE,MAAL,CAAYC,SAAb,CAAd;AACD;AACF,GAfD;;AAiBA,sBACE;AAAK,IAAA,KAAK,EAAEhB,KAAK,CAACmB,uBAAlB;AAAA,cACGf,YAAY,CAACM,GAAb,CAAiB,CAACG,IAAD,EAAOO,CAAP,kBACd;AACK,MAAA,OAAO,EAAEC,CAAC,IAAIT,YAAY,CAACS,CAAD,EAAID,CAAJ,CAD/B;AACuC,MAAA,KAAK,EAAEZ,WAAW,CAACY,CAAD,CADzD;AAAA,gBAEGP;AAFH,OAAW,SAAQO,CAAE,EAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhCuBjB,c;;KAAAA,c","sourcesContent":["import * as style from \"./style/profileButtonsStyle\";\r\nimport createButtonState from \"./utils/createButtonState\";\r\nimport {useState} from 'react';\r\n\r\nexport default function ProfileButtons({listToRender, setListToRender}) {\r\n  const [highlighted, setHighlighted] = useState(\"\")\r\n  // const [listToRender] = useState(listToRender)\r\n  const [buttonStyle, setButtonStyle] = useState(listToRender.map(() => style.profileButton))\r\n\r\n  const changeFilter = (item, position) => {\r\n    if (highlighted === item.target.innerHTML) {\r\n      setButtonStyle(createButtonState(listToRender, style))\r\n      setListToRender(listToRender)\r\n      setHighlighted(\"\")\r\n      return\r\n    }\r\n\r\n    else {\r\n      let newButtonState = createButtonState(listToRender, style)\r\n      newButtonState = {...newButtonState, [position]: style.profileButtonHighlighted}\r\n      setButtonStyle(newButtonState)\r\n      setListToRender([item.target.innerHTML])\r\n      setHighlighted(item.target.innerHTML)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={style.profileButtonsContainer}>\r\n      {listToRender.map((item, i) => (\r\n          <div key={`button${i}`} \r\n               onClick={e => changeFilter(e, i)} style={buttonStyle[i]}>\r\n            {item}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}