{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focusedDataItem.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport rotateArrow from \"./rotateArrow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet arrow = {\n  display: \"inline-block\",\n  width: \"5px\",\n  height: \"5px\",\n  transform: \"rotate(45deg)\",\n  margin: \"4px 0 0 5px\",\n  borderRight: \"3px solid #4382BC\",\n  borderTop: \"3px solid #4382BC\"\n};\n\nfunction RenderObject(selector, value, indent) {\n  _s();\n\n  const arrowRef = useRef(null);\n  console.log(selector, value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this); // if (value === null) return (\n  //   <div style={{display: \"flex\"}}>\n  //     <div style={{width: \"50%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\n  //     <div style={{width: \"50%\", direction: \"rtl\", textIndent: \"3px\"}}>null</div>\n  //   </div>\n  // )\n  // if (typeof(value) === \"object\") {\n  //   return (\n  //     <div>\n  //       <div style={{display: \"flex\"}}>\n  //         <div style={{textIndent: `${indent*15+3}px`}}>{selector}</div>\n  //         <div style={arrow}></div>\n  //       </div>\n  //       {function() {\n  //         return Object.keys(value).map((new_selector) => (\n  //           <RenderObject selector={new_selector} value={value[new_selector]} indent={indent+1}/>\n  //           // renderObject(new_selector, value[new_selector], indent+1)\n  //         ))\n  //       }()}\n  //     </div>\n  //   )\n  // }\n  // else return (\n  //   <div style={{display: \"flex\"}}>\n  //     <div style={{width: \"100%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\n  //     <div style={{width: \"50%\", direction: \"rtl\", textIndent: \"3px\"}}>{value}</div>\n  //   </div>\n  // )\n} //Extends FocusedDataList\n\n\n_s(RenderObject, \"NU4of1WZ7nxVQX7PXg8xu/osJ14=\");\n\n_c = RenderObject;\nexport default function FocusedDataItem({\n  itemObject\n}) {\n  _s2();\n\n  const [isDown, setIsDown] = useState(false);\n  const [indent, setIndent] = useState(1);\n  const arrowRef = useRef(null);\n  const objectRef = useRef(null);\n  return Object.keys(itemObject).map(item => /*#__PURE__*/_jsxDEV(RenderObject, {\n    selector: item,\n    value: itemObject,\n    indent: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this) // renderObject(item, itemObject[item], 0)\n  );\n}\n\n_s2(FocusedDataItem, \"CIxoUyUncZ+LFJe0adnI7J2Jpys=\");\n\n_c2 = FocusedDataItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderObject\");\n$RefreshReg$(_c2, \"FocusedDataItem\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focusedDataItem.jsx"],"names":["useState","useRef","useEffect","rotateArrow","arrow","display","width","height","transform","margin","borderRight","borderTop","RenderObject","selector","value","indent","arrowRef","console","log","FocusedDataItem","itemObject","isDown","setIsDown","setIndent","objectRef","Object","keys","map","item"],"mappings":";;;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,cADC;AAEVC,EAAAA,KAAK,EAAE,KAFG;AAGVC,EAAAA,MAAM,EAAE,KAHE;AAIVC,EAAAA,SAAS,EAAE,eAJD;AAKVC,EAAAA,MAAM,EAAE,aALE;AAMVC,EAAAA,WAAW,EAAE,mBANH;AAOVC,EAAAA,SAAS,EAAE;AAPD,CAAZ;;AAUA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AAAA;;AAC7C,QAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBC,KAAtB;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP,CAL6C,CAO7C;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,C,CAED;;;GAtCSF,Y;;KAAAA,Y;AAuCT,eAAe,SAASO,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAuC;AAAA;;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASQ,SAAT,IAAsBvB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMgB,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMuB,SAAS,GAAGvB,MAAM,CAAC,IAAD,CAAxB;AAEA,SAAOwB,MAAM,CAACC,IAAP,CAAYN,UAAZ,EAAwBO,GAAxB,CAA6BC,IAAD,iBACjC,QAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,IAAxB;AAA8B,IAAA,KAAK,EAAER,UAArC;AAAiD,IAAA,MAAM,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,UADiC,CAEjC;AAFK,GAAP;AAID;;IAVuBD,e;;MAAAA,e","sourcesContent":["import {useState, useRef, useEffect} from \"react\"\r\nimport rotateArrow from \"./rotateArrow\"\r\n\r\nlet arrow = {\r\n  display: \"inline-block\", \r\n  width: \"5px\",\r\n  height: \"5px\", \r\n  transform: \"rotate(45deg)\",\r\n  margin: \"4px 0 0 5px\",\r\n  borderRight: \"3px solid #4382BC\", \r\n  borderTop: \"3px solid #4382BC\"\r\n}\r\n\r\nfunction RenderObject(selector, value, indent) {\r\n  const arrowRef = useRef(null)\r\n\r\n  console.log(selector, value)\r\n\r\n  return <div></div>\r\n\r\n  // if (value === null) return (\r\n  //   <div style={{display: \"flex\"}}>\r\n  //     <div style={{width: \"50%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n  //     <div style={{width: \"50%\", direction: \"rtl\", textIndent: \"3px\"}}>null</div>\r\n  //   </div>\r\n  // )\r\n\r\n  // if (typeof(value) === \"object\") {\r\n  //   return (\r\n  //     <div>\r\n  //       <div style={{display: \"flex\"}}>\r\n  //         <div style={{textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n  //         <div style={arrow}></div>\r\n  //       </div>\r\n  //       {function() {\r\n  //         return Object.keys(value).map((new_selector) => (\r\n  //           <RenderObject selector={new_selector} value={value[new_selector]} indent={indent+1}/>\r\n  //           // renderObject(new_selector, value[new_selector], indent+1)\r\n  //         ))\r\n  //       }()}\r\n  //     </div>\r\n  //   )\r\n  // }\r\n  // else return (\r\n  //   <div style={{display: \"flex\"}}>\r\n  //     <div style={{width: \"100%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n  //     <div style={{width: \"50%\", direction: \"rtl\", textIndent: \"3px\"}}>{value}</div>\r\n  //   </div>\r\n  // )\r\n}\r\n\r\n//Extends FocusedDataList\r\nexport default function FocusedDataItem({itemObject}) {\r\n  const [isDown, setIsDown] = useState(false)\r\n  const [indent, setIndent] = useState(1)\r\n  const arrowRef = useRef(null)\r\n  const objectRef = useRef(null)\r\n\r\n  return Object.keys(itemObject).map((item) => (\r\n    <RenderObject selector={item} value={itemObject} indent={0}/>\r\n    // renderObject(item, itemObject[item], 0)\r\n  ))  \r\n}"]},"metadata":{},"sourceType":"module"}