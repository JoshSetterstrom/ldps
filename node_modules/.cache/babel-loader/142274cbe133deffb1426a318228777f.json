{"ast":null,"code":"export default function returnSearch(string, listToRender, profileData) {\n  let temp = {};\n  listToRender.forEach(listItem => {\n    listItem = listItem.toLowerCase();\n    let returnedList = [];\n    let currentList = [];\n\n    for (let i in profileData[listItem]) {\n      profileData[listItem][i].slice(1, Object.keys(profileData[listItem][i]).at(-1)).forEach((item, i) => {\n        console.log(item, i);\n      });\n    } // profileData[listItem.toLowerCase()]?.forEach(value => {\n    //   value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\n    //     if (item.data.toLowerCase().includes(string.target.value.toLowerCase()) && !currentList.includes(value[0]['key'])) {\n    //       currentList.push(value[0]['key'])\n    //       returnedList.push(value)\n    //       break\n    //     }\n    //   })\n    // })\n    // temp[listItem.toLowerCase()] = returnedList\n\n  });\n  return temp;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/returnSearch.js"],"names":["returnSearch","string","listToRender","profileData","temp","forEach","listItem","toLowerCase","returnedList","currentList","i","slice","Object","keys","at","item","console","log"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,YAA9B,EAA4CC,WAA5C,EAAyD;AACtE,MAAIC,IAAI,GAAG,EAAX;AAEAF,EAAAA,YAAY,CAACG,OAAb,CAAsBC,QAAD,IAAc;AACjCA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,EAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AAEA,SAAK,IAAIC,CAAT,IAAcP,WAAW,CAACG,QAAD,CAAzB,EAAqC;AACnCH,MAAAA,WAAW,CAACG,QAAD,CAAX,CAAsBI,CAAtB,EAAyBC,KAAzB,CAA+B,CAA/B,EAAkCC,MAAM,CAACC,IAAP,CAAYV,WAAW,CAACG,QAAD,CAAX,CAAsBI,CAAtB,CAAZ,EAAsCI,EAAtC,CAAyC,CAAC,CAA1C,CAAlC,EAAgFT,OAAhF,CAAwF,CAACU,IAAD,EAAOL,CAAP,KAAa;AACnGM,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBL,CAAlB;AACD,OAFD;AAGD,KATgC,CAWjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GArBD;AAuBA,SAAON,IAAP;AACD","sourcesContent":["export default function returnSearch(string, listToRender, profileData) {\r\n  let temp = {}\r\n\r\n  listToRender.forEach((listItem) => {\r\n    listItem = listItem.toLowerCase()\r\n    let returnedList = []\r\n    let currentList = []\r\n\r\n    for (let i in profileData[listItem]) {\r\n      profileData[listItem][i].slice(1, Object.keys(profileData[listItem][i]).at(-1)).forEach((item, i) => {\r\n        console.log(item, i)\r\n      })\r\n    }\r\n\r\n    // profileData[listItem.toLowerCase()]?.forEach(value => {\r\n    //   value.slice(1, Object.keys(value).at(-1)).forEach((item, i) => {\r\n    //     if (item.data.toLowerCase().includes(string.target.value.toLowerCase()) && !currentList.includes(value[0]['key'])) {\r\n    //       currentList.push(value[0]['key'])\r\n    //       returnedList.push(value)\r\n    //       break\r\n    //     }\r\n    //   })\r\n    // })\r\n    // temp[listItem.toLowerCase()] = returnedList\r\n  })\r\n\r\n  return temp\r\n}"]},"metadata":{},"sourceType":"module"}