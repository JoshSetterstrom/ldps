{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focused.jsx\";\nimport * as style from \"./style/focusedStyle\";\nimport FocusedTitle from \"./focusedTitle\";\nimport FocusedHistory from \"./focusedHistory\";\nimport FocusedProfile from \"./focusedProfile\"; //Extends Main\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Focused(_ref) {\n  let {\n    focused,\n    setFocused,\n    locationHierarchy,\n    rawData\n  } = _ref;\n  // Disables focused for LAS and DID items as they have no individual profiles //\n  if (!focused[0] || focused[1] === \"las\" || focused[1] === \"did\") return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 75\n  }, this); // Retrieves JSON for item in rawData if matches currently focused profile //\n\n  rawData[focused[1]].filter(x => console.log(x));\n\n  for (let i in rawData[focused[1]]) {\n    if (focused[0] === rawData[focused[1]][i]['profile']) {\n      var focusedItem = rawData[focused[1]][i];\n      break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.container,\n    children: [/*#__PURE__*/_jsxDEV(FocusedTitle, {\n      style: style,\n      setFocused: setFocused,\n      focusedItem: focusedItem,\n      locationHierarchy: locationHierarchy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FocusedProfile, {\n      style: style,\n      focusedItem: focusedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FocusedHistory, {\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = Focused;\n\nvar _c;\n\n$RefreshReg$(_c, \"Focused\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focused.jsx"],"names":["style","FocusedTitle","FocusedHistory","FocusedProfile","Focused","focused","setFocused","locationHierarchy","rawData","filter","x","console","log","i","focusedItem","container"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;AACA,eAAe,SAASC,OAAT,OAAoE;AAAA,MAAnD;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,iBAAtB;AAAyCC,IAAAA;AAAzC,GAAmD;AACjF;AACA,MAAI,CAACH,OAAO,CAAC,CAAD,CAAR,IAAeA,OAAO,CAAC,CAAD,CAAP,KAAe,KAA9B,IAAuCA,OAAO,CAAC,CAAD,CAAP,KAAe,KAA1D,EAAiE,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP,CAFgB,CAIjF;;AAEAG,EAAAA,OAAO,CAACH,OAAO,CAAC,CAAD,CAAR,CAAP,CAAoBI,MAApB,CAA2BC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAhC;;AAEA,OAAK,IAAIG,CAAT,IAAcL,OAAO,CAACH,OAAO,CAAC,CAAD,CAAR,CAArB,EAAmC;AACjC,QAAIA,OAAO,CAAC,CAAD,CAAP,KAAeG,OAAO,CAACH,OAAO,CAAC,CAAD,CAAR,CAAP,CAAoBQ,CAApB,EAAuB,SAAvB,CAAnB,EAAsD;AACpD,UAAIC,WAAW,GAAGN,OAAO,CAACH,OAAO,CAAC,CAAD,CAAR,CAAP,CAAoBQ,CAApB,CAAlB;AACA;AACD;AACF;;AAGD,sBACE;AAAK,IAAA,KAAK,EAAEb,KAAK,CAACe,SAAlB;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEf,KADT;AAEE,MAAA,UAAU,EAAEM,UAFd;AAGE,MAAA,WAAW,EAAEQ,WAHf;AAIE,MAAA,iBAAiB,EAAEP;AAJrB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,cAAD;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,WAAW,EAAEc;AAFf;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KA/BuBI,O","sourcesContent":["import * as style from \"./style/focusedStyle\";\r\nimport FocusedTitle from \"./focusedTitle\"\r\nimport FocusedHistory from \"./focusedHistory\";\r\nimport FocusedProfile from \"./focusedProfile\"\r\n\r\n//Extends Main\r\nexport default function Focused({focused, setFocused, locationHierarchy, rawData}) {\r\n  // Disables focused for LAS and DID items as they have no individual profiles //\r\n  if (!focused[0] || focused[1] === \"las\" || focused[1] === \"did\") return <div></div>\r\n\r\n  // Retrieves JSON for item in rawData if matches currently focused profile //\r\n\r\n  rawData[focused[1]].filter(x => console.log(x))\r\n\r\n  for (let i in rawData[focused[1]]) {\r\n    if (focused[0] === rawData[focused[1]][i]['profile']) {\r\n      var focusedItem = rawData[focused[1]][i]\r\n      break\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={style.container}>\r\n      <FocusedTitle\r\n        style={style}\r\n        setFocused={setFocused} \r\n        focusedItem={focusedItem} \r\n        locationHierarchy={locationHierarchy}/>\r\n\r\n      <FocusedProfile\r\n        style={style}\r\n        focusedItem={focusedItem}/>\r\n\r\n      <FocusedHistory style={style}/>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}