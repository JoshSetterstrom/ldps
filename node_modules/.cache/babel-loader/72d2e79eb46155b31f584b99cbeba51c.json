{"ast":null,"code":"import * as style from \"../../css/searchList\";\nexport default function handleSearchTypeChange(e, data, ret = ['Device', 'User', 'DID', 'borderWidth']) {\n  console.log(data['default']['display']);\n  let displayStyle = \"\";\n  let display = \"\"; // ret.forEach(e => {\n  // //   if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\n  // //   }\n  // // })\n\n  if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyleHighlight,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": true,\n      \"user\": false,\n      \"did\": false\n    }];\n  }\n\n  if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyleHighlight,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": false,\n      \"user\": true,\n      \"did\": false\n    }];\n  }\n\n  if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyleHighlight\n    }, display = {\n      \"device\": false,\n      \"user\": false,\n      \"did\": true\n    }];\n  }\n\n  if (e.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": true,\n      \"user\": true,\n      \"did\": true\n    }];\n  }\n\n  return [displayStyle, display];\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/handleSearchTypeChange.jsx"],"names":["style","handleSearchTypeChange","e","data","ret","console","log","displayStyle","display","target","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyle","searchTypeDidStyle","searchTypeDeviceStyle","searchTypeUserStyleHighlight","searchTypeDidStyleHighlight"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,CAAhC,EAAmCC,IAAnC,EAAyCC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,aAA1B,CAA7C,EAAuF;AACpGC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,SAAD,CAAJ,CAAgB,SAAhB,CAAZ;AACA,MAAII,YAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG,EAAd,CAHoG,CAKpG;AACA;AAEA;AACA;;AAEA,MAAIN,CAAC,CAACO,MAAF,CAASC,WAAT,KAAyB,QAAzB,IAAqC,CAACR,CAAC,CAACO,MAAF,CAAST,KAAT,CAAe,aAAf,CAA1C,EAAyE;AACvE,WAAQ,CACNO,YAAY,GAAI;AAAC,gBAAUP,KAAK,CAACW,8BAAjB;AAAiD,cAAQX,KAAK,CAACY,mBAA/D;AAAoF,aAAOZ,KAAK,CAACa;AAAjG,KADV,EAENL,OAAO,GAAI;AAAC,gBAAU,IAAX;AAAiB,cAAQ,KAAzB;AAAgC,aAAO;AAAvC,KAFL,CAAR;AAID;;AAED,MAAIN,CAAC,CAACO,MAAF,CAASC,WAAT,KAAyB,MAAzB,IAAmC,CAACR,CAAC,CAACO,MAAF,CAAST,KAAT,CAAe,aAAf,CAAxC,EAAuE;AACrE,WAAQ,CACNO,YAAY,GAAI;AAAC,gBAAUP,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACe,4BAAtD;AAAoF,aAAOf,KAAK,CAACa;AAAjG,KADV,EAENL,OAAO,GAAI;AAAC,gBAAU,KAAX;AAAkB,cAAQ,IAA1B;AAAgC,aAAO;AAAvC,KAFL,CAAR;AAID;;AAED,MAAIN,CAAC,CAACO,MAAF,CAASC,WAAT,KAAyB,KAAzB,IAAkC,CAACR,CAAC,CAACO,MAAF,CAAST,KAAT,CAAe,aAAf,CAAvC,EAAsE;AACpE,WAAQ,CACNO,YAAY,GAAI;AAAC,gBAAUP,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACY,mBAAtD;AAA2E,aAAOZ,KAAK,CAACgB;AAAxF,KADV,EAENR,OAAO,GAAI;AAAC,gBAAU,KAAX;AAAkB,cAAQ,KAA1B;AAAiC,aAAO;AAAxC,KAFL,CAAR;AAID;;AAED,MAAIN,CAAC,CAACO,MAAF,CAAST,KAAT,CAAe,aAAf,CAAJ,EAAmC;AACjC,WAAQ,CACNO,YAAY,GAAI;AAAC,gBAAUP,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACY,mBAAtD;AAA2E,aAAOZ,KAAK,CAACa;AAAxF,KADV,EAENL,OAAO,GAAI;AAAC,gBAAU,IAAX;AAAiB,cAAQ,IAAzB;AAA+B,aAAO;AAAtC,KAFL,CAAR;AAID;;AACD,SAAO,CAACD,YAAD,EAAeC,OAAf,CAAP;AACD","sourcesContent":["import * as style from \"../../css/searchList\";\r\n\r\nexport default function handleSearchTypeChange(e, data, ret=['Device', 'User', 'DID', 'borderWidth']) {\r\n  console.log(data['default']['display'])\r\n  let displayStyle = \"\"\r\n  let display = \"\"\r\n\r\n  // ret.forEach(e => {\r\n  // //   if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\r\n      \r\n  // //   }\r\n  // // })\r\n\r\n  if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyleHighlight, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": true, \"user\": false, \"did\": false})\r\n    ])\r\n  }\r\n\r\n  if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyleHighlight, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": false, \"user\": true, \"did\": false})\r\n    ])\r\n  }\r\n\r\n  if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {  \r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyleHighlight}),\r\n      display = ({\"device\": false, \"user\": false, \"did\": true})\r\n    ])\r\n  }\r\n\r\n  if (e.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": true, \"user\": true, \"did\": true})\r\n    ])\r\n  }\r\n  return [displayStyle, display]\r\n}"]},"metadata":{},"sourceType":"module"}