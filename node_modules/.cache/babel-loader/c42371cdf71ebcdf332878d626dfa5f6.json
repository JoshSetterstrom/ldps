{"ast":null,"code":"export default function getHcsLink(profile, location_hierarchy) {\n  let link = \"\";\n  let store = \"\"; // try {\n\n  let pkid = profile['meta']['pkid'];\n  if (profile['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + profile['meta']['hierarchy'].split(\"Store \")[1];\n  let type = `link_${profile['type'].slice(0, -1)}`;\n  link = location_hierarchy[0][type]; // link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store])\n  // link = link.replace(\"{2}\", pkid)\n\n  console.log(link); // }\n  // catch {/*catch non-existing device*/}\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["getHcsLink","profile","location_hierarchy","link","store","pkid","includes","split","type","slice","console","log"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,kBAA7B,EAAiD;AAC9D,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ,CAF8D,CAI9D;;AACA,MAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAAX;AAGA,MAAIA,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BK,QAA7B,CAAsC,aAAtC,CAAJ,EAA0DF,KAAK,GAAG,aAAR,CAA1D,KACKA,KAAK,GAAG,WAAWH,OAAO,CAAC,MAAD,CAAP,CAAgB,WAAhB,EAA6BM,KAA7B,CAAmC,QAAnC,EAA6C,CAA7C,CAAnB;AAEL,MAAIC,IAAI,GAAI,QAAOP,OAAO,CAAC,MAAD,CAAP,CAAgBQ,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAA6B,EAAhD;AAEAN,EAAAA,IAAI,GAAGD,kBAAkB,CAAC,CAAD,CAAlB,CAAsBM,IAAtB,CAAP,CAb8D,CAc9D;AACA;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAjB8D,CAkB9D;AAEA;;AAEA,SAAOA,IAAP;AACD","sourcesContent":["export default function getHcsLink(profile, location_hierarchy) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  // try {\r\n  let pkid = profile['meta']['pkid']\r\n\r\n  \r\n  if (profile['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\"\r\n  else store = \"store_\" + profile['meta']['hierarchy'].split(\"Store \")[1]\r\n  \r\n  let type = `link_${profile['type'].slice(0, -1)}`\r\n\r\n  link = location_hierarchy[0][type]\r\n  // link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store])\r\n  // link = link.replace(\"{2}\", pkid)\r\n\r\n  console.log(link)\r\n  // }\r\n\r\n  // catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}