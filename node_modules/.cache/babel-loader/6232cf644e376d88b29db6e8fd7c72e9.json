{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\LDREACT\\\\src\\\\common\\\\searchList\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport * as style from \"../../css/light/searchList\"; // import FocusedList from './focusedList';\n\nimport getItem from './getItem';\nimport getTotalCount from './getTotalCount';\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\nimport getUserData from \"../dataRetrieval/getUserData\";\nimport getDidData from \"./getDidData\";\nimport getSearch from './getSearch';\nimport getFilteredSearch from './getFilteredSearch';\nimport ProfileList from \"../profileList/profileList\";\nimport Total from \"../total/total\";\nimport ProfileButtons from \"../profileButtons/profileButtons\"; // let filteredSearch = {\n//   \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \n//   \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\n//   \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList() {\n  _s();\n\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\", \"DID\"]);\n  const [profileData] = useState({\n    \"device\": getDeviceData(),\n    \"user\": getUserData()\n  });\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(10);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleInputChange = e => {\n    string = userInput + e.nativeEvent.data;\n    console.log(string); // let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\n    // filteredSearch = getFilteredSearch(search)\n    // setItem(getItem(filteredSearch))\n    // setData(getTotalCount(filteredSearch, data, listToRender))\n  }; // const handleFocus = (e, type, id, assoc) => {\n  //   if (e.target.style.cursor !== \"pointer\") return\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\n  //   setFocused(newFocused)\n  // }\n  // const getItemsToRender = () => {\n  //   let temp = {}\n  //   for (let i in listToRender) {\n  //     if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\n  //     else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\n  //   }\n  //   return temp\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"63.5vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n        listToRender: listToRender,\n        setListToRender: setListToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileList, {\n        listToRender: listToRender,\n        profileDataToRender: profileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        totalToRenderNumber: totalToRenderNumber,\n        setTotalToRenderNumber: setTotalToRenderNumber,\n        profileDataToRender: profileDataToRender,\n        listToRender: listToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"GuGhzhhl6S2nm6RFz/Ld1pny26g=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/searchList.jsx"],"names":["React","useState","useEffect","style","getItem","getTotalCount","getDeviceData","getUserData","getDidData","getSearch","getFilteredSearch","ProfileList","Total","ProfileButtons","SearchList","listToRender","setListToRender","profileData","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","userInput","setUserInput","handleInputChange","e","string","nativeEvent","data","console","log","maxWidth","searchInputStyle"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,KAAKC,KAAZ,MAAuB,4BAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B,C,CAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,CAAD,CAAhD;AACA,QAAM,CAACgB,WAAD,IAAgBhB,QAAQ,CAAC;AAAC,cAAUK,aAAa,EAAxB;AAA4B,YAAQC,WAAW;AAA/C,GAAD,CAA9B;AACA,QAAM,CAACW,mBAAD,EAAsBC,sBAAtB,IAAgDlB,QAAQ,CAACgB,WAAD,CAA9D;AACA,QAAM,CAACG,mBAAD,EAAsBC,sBAAtB,IAAgDpB,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMuB,iBAAiB,GAAGC,CAAC,IAAI;AAC7BC,IAAAA,MAAM,GAAGJ,SAAS,GAAGG,CAAC,CAACE,WAAF,CAAcC,IAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAF6B,CAG7B;AACA;AACA;AACA;AACD,GAPD,CAPmC,CAgBnC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAEhB,YAA9B;AAA4C,QAAA,eAAe,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEb,KAAK,CAAC6B,gBAApB;AAAsC,QAAA,QAAQ,EAAEP,CAAC,IAAID,iBAAiB,CAACC,CAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAEV,YAA3B;AAAyC,QAAA,mBAAmB,EAAEG,mBAA9D;AAAmF,QAAA,mBAAmB,EAAEE;AAAxG;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,mBAAmB,EAAEA,mBAA5B;AAAiD,QAAA,sBAAsB,EAAEC,sBAAzE;AAAiG,QAAA,mBAAmB,EAAEH,mBAAtH;AAA2I,QAAA,YAAY,EAAEH;AAAzJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5CuBD,U;;KAAAA,U;AA4CvB","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport * as style from \"../../css/light/searchList\";\r\n// import FocusedList from './focusedList';\r\nimport getItem from './getItem';\r\nimport getTotalCount from './getTotalCount';\r\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\r\nimport getUserData from \"../dataRetrieval/getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport getSearch from './getSearch';\r\nimport getFilteredSearch from './getFilteredSearch';\r\nimport ProfileList from \"../profileList/profileList\"\r\nimport Total from \"../total/total\"\r\nimport ProfileButtons from \"../profileButtons/profileButtons\"\r\n\r\n// let filteredSearch = {\r\n//   \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \r\n//   \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\r\n//   \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\r\n// }\r\n\r\nexport default function SearchList() {\r\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\", \"DID\"])\r\n  const [profileData] = useState({\"device\": getDeviceData(), \"user\": getUserData()})\r\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData)\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(10)\r\n  const [userInput, setUserInput] = useState(\"\")\r\n\r\n  const handleInputChange = e => {\r\n    string = userInput + e.nativeEvent.data\r\n    console.log(string)\r\n    // let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\r\n    // filteredSearch = getFilteredSearch(search)\r\n    // setItem(getItem(filteredSearch))\r\n    // setData(getTotalCount(filteredSearch, data, listToRender))\r\n  }\r\n\r\n  // const handleFocus = (e, type, id, assoc) => {\r\n  //   if (e.target.style.cursor !== \"pointer\") return\r\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n  //   setFocused(newFocused)\r\n  // }\r\n\r\n  // const getItemsToRender = () => {\r\n  //   let temp = {}\r\n\r\n  //   for (let i in listToRender) {\r\n  //     if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\r\n  //     else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\r\n  //   }\r\n  //   return temp\r\n  // }\r\n    \r\n  return (\r\n    <div>\r\n      <div style={{maxWidth: \"63.5vw\"}}>\r\n        <ProfileButtons listToRender={listToRender} setListToRender={setListToRender}/>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n        <ProfileList listToRender={listToRender} profileDataToRender={profileDataToRender} totalToRenderNumber={totalToRenderNumber}/>\r\n        <Total totalToRenderNumber={totalToRenderNumber} setTotalToRenderNumber={setTotalToRenderNumber} profileDataToRender={profileDataToRender} listToRender={listToRender}/>\r\n      </div>\r\n      {/* <FocusedList focused={focused} setFocused={setFocused} data={data} item={item} filteredSearch={filteredSearch}/> */}\r\n    </div>\r\n  );\r\n};  "]},"metadata":{},"sourceType":"module"}