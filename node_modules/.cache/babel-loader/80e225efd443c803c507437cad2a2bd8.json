{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\total\\\\total.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport * as style from \"../../css/light/totalBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total({\n  totalToRenderNumber,\n  setTotalToRenderNumber,\n  profileDataToRender,\n  listToRender\n}) {\n  _s();\n\n  const [userInputRecord, setUserInputRecord] = useState(\"\");\n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\n  }, [setTotalToRenderNumber, userInputRecord]);\n\n  const renderTotalItems = () => {\n    return listToRender === null || listToRender === void 0 ? void 0 : listToRender.map((item, i) => {\n      var _profileDataToRender$;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalBarItem,\n        children: `${item}: ${(_profileDataToRender$ = profileDataToRender[item.toLowerCase()]) === null || _profileDataToRender$ === void 0 ? void 0 : _profileDataToRender$.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const renderItemsPerPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginLeft: \"auto\",\n        paddingRight: \"3px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalTitleOther,\n        children: \"Items/Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: totalToRenderNumber,\n        style: style.totalInput,\n        onChange: e => setUserInputRecord(parseInt(e.target.value)),\n        onKeyPress: onKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButton,\n        onClick: () => setTotalToRenderNumber(userInputRecord),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style.totalButtonLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitleMain,\n      children: \"Total Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), renderTotalItems(), renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Total, \"3dh7auNqujkmNsFgyGjhAzUMpD4=\");\n\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/total/total.jsx"],"names":["React","useCallback","useState","style","Total","totalToRenderNumber","setTotalToRenderNumber","profileDataToRender","listToRender","userInputRecord","setUserInputRecord","onKeyPress","e","key","renderTotalItems","map","item","i","totalBarItem","toLowerCase","length","renderItemsPerPage","display","marginLeft","paddingRight","totalTitleOther","totalInput","parseInt","target","value","totalButton","totalButtonLine","totalContainer","totalTitleMain"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,mBAAD;AAAsBC,EAAAA,sBAAtB;AAA8CC,EAAAA,mBAA9C;AAAmEC,EAAAA;AAAnE,CAAf,EAAiG;AAAA;;AAC9G,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMS,UAAU,GAAGV,WAAW,CAACW,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBP,sBAAsB,CAACG,eAAD,CAAtB;AACxB,GAF6B,EAE3B,CAACH,sBAAD,EAAyBG,eAAzB,CAF2B,CAA9B;;AAIA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,WAAON,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEO,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP;AAAA;;AAAA,0BACvB;AAAK,QAAA,KAAK,EAAEd,KAAK,CAACe,YAAlB;AAAA,kBACI,GAAEF,IAAK,KAAR,yBAAYT,mBAAmB,CAACS,IAAI,CAACG,WAAL,EAAD,CAA/B,0DAAY,sBAAyCC,MAAO;AAD/D;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAlB,CAAP;AAKD,GAND;;AAQA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE,MAA9B;AAAsCC,QAAAA,YAAY,EAAE;AAApD,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAErB,KAAK,CAACsB,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACI,QAAA,WAAW,EAAEpB,mBADjB;AAEI,QAAA,KAAK,EAAEF,KAAK,CAACuB,UAFjB;AAGI,QAAA,QAAQ,EAAEd,CAAC,IAAIF,kBAAkB,CAACiB,QAAQ,CAACf,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAT,CAHrC;AAII,QAAA,UAAU,EAAElB;AAJhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AACI,QAAA,KAAK,EAAER,KAAK,CAAC2B,WADjB;AAEI,QAAA,OAAO,EAAE,MAAMxB,sBAAsB,CAACG,eAAD,CAFzC;AAAA,+BAGE;AAAK,UAAA,KAAK,EAAEN,KAAK,CAAC4B;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,KAAK,EAAE5B,KAAK,CAAC6B,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE7B,KAAK,CAAC8B,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGnB,gBAAgB,EAFnB,EAGGO,kBAAkB,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCuBjB,K;;KAAAA,K","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function Total({totalToRenderNumber, setTotalToRenderNumber, profileDataToRender, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\")\r\n\r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord)\r\n  }, [setTotalToRenderNumber, userInputRecord])\r\n\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map((item, i) => (\r\n      <div style={style.totalBarItem}>\r\n        {`${item}: ${profileDataToRender[item.toLowerCase()]?.length}`}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div style={{display: \"flex\", marginLeft: \"auto\", paddingRight: \"3px\"}}>\r\n        <div style={style.totalTitleOther}>Items/Page</div>\r\n        <input \r\n            placeholder={totalToRenderNumber} \r\n            style={style.totalInput} \r\n            onChange={e => setUserInputRecord(parseInt(e.target.value))}\r\n            onKeyPress={onKeyPress}/>\r\n        <div \r\n            style={style.totalButton}\r\n            onClick={() => setTotalToRenderNumber(userInputRecord)}>\r\n          <div style={style.totalButtonLine}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitleMain}>Total Count</div>\r\n      {renderTotalItems()}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}