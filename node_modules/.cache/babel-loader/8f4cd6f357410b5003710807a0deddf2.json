{"ast":null,"code":"import*as style from\"../../css/light/profileList\";//Extends ProfileList\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProfileListItem(_ref){var data=_ref.data,setFocused=_ref.setFocused;var handleFocus=function handleFocus(e,type){if(e.target.style.cursor!==\"pointer\")return;if(type===\"mac\")type=\"devices\";if(type===\"id\")type=\"users\";if(type===\"extension\")type=\"lines\";if(type===\"voicemail\")type=\"voicemail\";if(type===\"did\")type=\"did\";if(type===\"las\")type=\"las\";setFocused([e.target.innerHTML,type]);};var renderListDataOther=function renderListDataOther(){return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",width:\"100%\",marginLeft:\"10px\"},children:function(){return data.slice(1).map(function(item,i){return/*#__PURE__*/_jsx(\"div\",{style:style.profileListDataOther,children:item['data']},\"LData\".concat(i));});}()});};return/*#__PURE__*/_jsxs(\"div\",{onMouseEnter:function onMouseEnter(e){e.currentTarget.style.border=\"1px solid black\";},onMouseLeave:function onMouseLeave(e){e.currentTarget.style.border=\"1px solid #4382BC\";},onClick:function onClick(e){handleFocus(e,data[0]['type']);},style:style.profileListContainer,children:[/*#__PURE__*/_jsx(\"div\",{style:style.profileListDataMain,children:data[0]['data']}),renderListDataOther()]});}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileList/profileListItem.jsx"],"names":["style","ProfileListItem","data","setFocused","handleFocus","e","type","target","cursor","innerHTML","renderListDataOther","display","width","marginLeft","slice","map","item","i","profileListDataOther","currentTarget","border","profileListContainer","profileListDataMain"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,6BAAvB,CAEA;wFACA,cAAe,SAASC,CAAAA,eAAT,MAA6C,IAAnBC,CAAAA,IAAmB,MAAnBA,IAAmB,CAAbC,UAAa,MAAbA,UAAa,CAC1D,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAIC,IAAJ,CAAa,CAC/B,GAAID,CAAC,CAACE,MAAF,CAASP,KAAT,CAAeQ,MAAf,GAA0B,SAA9B,CAAyC,OACzC,GAAIF,IAAI,GAAK,KAAb,CAAoBA,IAAI,CAAG,SAAP,CACpB,GAAIA,IAAI,GAAK,IAAb,CAAmBA,IAAI,CAAG,OAAP,CACnB,GAAIA,IAAI,GAAK,WAAb,CAA0BA,IAAI,CAAG,OAAP,CAC1B,GAAIA,IAAI,GAAK,WAAb,CAA0BA,IAAI,CAAG,WAAP,CAC1B,GAAIA,IAAI,GAAK,KAAb,CAAoBA,IAAI,CAAG,KAAP,CACpB,GAAIA,IAAI,GAAK,KAAb,CAAoBA,IAAI,CAAG,KAAP,CACpBH,UAAU,CAAC,CAACE,CAAC,CAACE,MAAF,CAASE,SAAV,CAAqBH,IAArB,CAAD,CAAV,CACD,CATD,CAWA,GAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,mBACE,YAAK,KAAK,CAAE,CAACC,OAAO,CAAE,MAAV,CAAkBC,KAAK,CAAE,MAAzB,CAAiCC,UAAU,CAAE,MAA7C,CAAZ,UACI,UAAM,CACN,MAAOX,CAAAA,IAAI,CAACY,KAAL,CAAW,CAAX,EAAcC,GAAd,CAAkB,SAACC,IAAD,CAAOC,CAAP,qBACvB,YAAuB,KAAK,CAAEjB,KAAK,CAACkB,oBAApC,UAA2DF,IAAI,CAAC,MAAD,CAA/D,iBAAkBC,CAAlB,EADuB,EAAlB,CAAP,CAGD,CAJA,EADH,EADF,CASD,CAVD,CAYA,mBACE,aACI,YAAY,CAAE,sBAACZ,CAAD,CAAO,CACnBA,CAAC,CAACc,aAAF,CAAgBnB,KAAhB,CAAsBoB,MAAtB,CAA+B,iBAA/B,CACD,CAHL,CAII,YAAY,CAAE,sBAACf,CAAD,CAAO,CACnBA,CAAC,CAACc,aAAF,CAAgBnB,KAAhB,CAAsBoB,MAAtB,CAA+B,mBAA/B,CACD,CANL,CAOI,OAAO,CAAE,iBAACf,CAAD,CAAO,CAACD,WAAW,CAACC,CAAD,CAAIH,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAJ,CAAX,CAAgC,CAPrD,CAQI,KAAK,CAAEF,KAAK,CAACqB,oBARjB,wBASE,YAAK,KAAK,CAAErB,KAAK,CAACsB,mBAAlB,UAAwCpB,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,CAAxC,EATF,CAUGQ,mBAAmB,EAVtB,GADF,CAcD","sourcesContent":["import * as style from \"../../css/light/profileList\"\r\n\r\n//Extends ProfileList\r\nexport default function ProfileListItem({data, setFocused}) {\r\n  const handleFocus = (e, type) => {\r\n    if (e.target.style.cursor !== \"pointer\") return\r\n    if (type === \"mac\") type = \"devices\"\r\n    if (type === \"id\") type = \"users\"\r\n    if (type === \"extension\") type = \"lines\"\r\n    if (type === \"voicemail\") type = \"voicemail\"\r\n    if (type === \"did\") type = \"did\"\r\n    if (type === \"las\") type = \"las\"\r\n    setFocused([e.target.innerHTML, type])\r\n  }\r\n\r\n  const renderListDataOther = () => {\r\n    return (\r\n      <div style={{display: \"flex\", width: \"100%\", marginLeft: \"10px\"}}>\r\n        {(() => {\r\n          return data.slice(1).map((item, i) => (\r\n            <div key={`LData${i}`} style={style.profileListDataOther}>{item['data']}</div>\r\n          ))\r\n        })()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div \r\n        onMouseEnter={(e) => {\r\n          e.currentTarget.style.border = \"1px solid black\"  \r\n        }}\r\n        onMouseLeave={(e) => {\r\n          e.currentTarget.style.border = \"1px solid #4382BC\"\r\n        }}\r\n        onClick={(e) => {handleFocus(e, data[0]['type'])}}\r\n        style={style.profileListContainer}>\r\n      <div style={style.profileListDataMain}>{data[0]['data']}</div>\r\n      {renderListDataOther()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}