{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useMemo, useState } from 'react';\nimport * as style from \"../css/light/main\";\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\nimport getUserData from \"./dataRetrieval/getUserData\";\nimport Focused from \"./focused/focused\";\nimport getDidData from \"./dataRetrieval/getDidData\";\nimport ProfileList from \"./profileList/profileList\";\nimport ProfileButtons from \"./profileButtons/profileButtons\";\nimport ProfileTotal from \"./profileTotal/profileTotal\";\nimport axios from 'axios'; //Extends Main\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [profileData, setProfileData] = useState(null);\n  const [listToRender, setListToRender] = useState([\"Devices\"]);\n  const [profileDataToRender, setProfileDataToRender] = useState(null);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50);\n  const [toRender, setToRender] = useState( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n      listToRender: listToRender,\n      setListToRender: setListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.containerLeft,\n      children: /*#__PURE__*/_jsxDEV(ProfileList, {\n        focused: [],\n        setFocused: [],\n        listToRender: listToRender,\n        profileData: profileData,\n        profileDataToRender: profileDataToRender,\n        setProfileDataToRender: setProfileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this));\n  const [focused, setFocused] = useState([]);\n  useEffect(() => {\n    listToRender.forEach((profile, i) => {\n      axios.get(`http://localhost:5000/${profile}`).then(data => {\n        setProfileData({\n          \"devices\": getDeviceData(data)\n        });\n        setProfileDataToRender(profileData);\n        setToRender( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style.main,\n          children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n            listToRender: listToRender,\n            setListToRender: setListToRender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: style.containerLeft,\n            children: [/*#__PURE__*/_jsxDEV(ProfileList, {\n              focused: focused,\n              setFocused: setFocused,\n              listToRender: listToRender,\n              profileData: profileData,\n              profileDataToRender: profileDataToRender,\n              setProfileDataToRender: setProfileDataToRender,\n              totalToRenderNumber: totalToRenderNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Focused, {\n              focused: focused,\n              setFocused: setFocused\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProfileTotal, {\n            listToRender: listToRender,\n            profileDataToRender: profileDataToRender,\n            totalToRenderNumber: totalToRenderNumber,\n            setTotalToRenderNumber: setTotalToRenderNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this));\n        console.log(data.status);\n      }).catch(err => console.log(err));\n    });\n  }, [listToRender, profileData, focused, profileDataToRender, totalToRenderNumber]);\n  return toRender;\n}\n\n_s(Main, \"h/2RmZ4WHDHWmoxDj6P14k0Lo6A=\");\n\n_c = Main;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/main.jsx"],"names":["React","useEffect","useMemo","useState","style","getDeviceData","getUserData","Focused","getDidData","ProfileList","ProfileButtons","ProfileTotal","axios","Main","profileData","setProfileData","listToRender","setListToRender","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","toRender","setToRender","containerLeft","focused","setFocused","forEach","profile","i","get","then","data","main","console","log","status","catch","err"],"mappings":"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","sourcesContent":["import {React, useEffect, useMemo, useState} from 'react';\r\nimport * as style from \"../css/light/main\";\r\nimport getDeviceData from \"./dataRetrieval/getDeviceData\";\r\nimport getUserData from \"./dataRetrieval/getUserData\";\r\nimport Focused from \"./focused/focused\"\r\nimport getDidData from \"./dataRetrieval/getDidData\";\r\nimport ProfileList from \"./profileList/profileList\"\r\nimport ProfileButtons from \"./profileButtons/profileButtons\"\r\nimport ProfileTotal from \"./profileTotal/profileTotal\"\r\nimport axios from 'axios';\r\n\r\n\r\n//Extends Main\r\nexport default function Main() {\r\n  const [profileData, setProfileData] = useState(null)\r\n  const [listToRender, setListToRender] = useState([\"Devices\"])\r\n  const [profileDataToRender, setProfileDataToRender] = useState(null)\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50)\r\n  const [toRender, setToRender] = useState(\r\n      <div>\r\n        <ProfileButtons\r\n          listToRender={listToRender}\r\n          setListToRender={setListToRender}/>\r\n        <div style={style.containerLeft}>\r\n          <ProfileList \r\n            focused={[]}\r\n            setFocused={[]}\r\n            listToRender={listToRender}\r\n            profileData={profileData}\r\n            profileDataToRender={profileDataToRender}\r\n            setProfileDataToRender={setProfileDataToRender}\r\n            totalToRenderNumber={totalToRenderNumber}/>\r\n          {/* <Focused focused={focused} setFocused={setFocused}/> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  const [focused, setFocused] = useState([])\r\n\r\n  useEffect(() => {\r\n    listToRender.forEach((profile, i) => {\r\n      axios.get(`http://localhost:5000/${profile}`)\r\n      .then(data => {\r\n        setProfileData({\"devices\": getDeviceData(data)})\r\n        setProfileDataToRender(profileData)\r\n        setToRender(\r\n          <div style={style.main}>\r\n            <ProfileButtons\r\n              listToRender={listToRender}\r\n              setListToRender={setListToRender}/>\r\n            <div style={style.containerLeft}>\r\n              <ProfileList \r\n                focused={focused}\r\n                setFocused={setFocused}\r\n                listToRender={listToRender}\r\n                profileData={profileData}\r\n                profileDataToRender={profileDataToRender}\r\n                setProfileDataToRender={setProfileDataToRender}\r\n                totalToRenderNumber={totalToRenderNumber}/>\r\n              <Focused focused={focused} setFocused={setFocused}/>\r\n            </div>\r\n            <ProfileTotal \r\n              listToRender={listToRender}\r\n              profileDataToRender={profileDataToRender} \r\n              totalToRenderNumber={totalToRenderNumber} \r\n              setTotalToRenderNumber={setTotalToRenderNumber}/>\r\n          </div>\r\n        )\r\n        console.log(data.status)\r\n      })\r\n      .catch(err => console.log(err))\r\n    })\r\n  }, [listToRender, profileData, focused, profileDataToRender, totalToRenderNumber])\r\n\r\n  return toRender\r\n    \r\n};"]},"metadata":{},"sourceType":"module"}