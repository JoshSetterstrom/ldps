{"ast":null,"code":"import users from \"../../data/user_list.json\";\nimport profiles from \"../../data/allstream_profile_list.json\";\n\nfor (let i in profiles) {\n  for (let j in profiles[i]) {\n    console.log(require(`../../data/${i}/${profiles[i][j]}`));\n  }\n}\n\nconst getUserData = () => {\n  let i = 0;\n  let searchUser = [];\n  users['users'].forEach(user => {\n    const container = require(`../../data/users/${user}.json`);\n\n    const changeName = container => !container ? \"\" : container;\n\n    const changePrim = container => !container ? \"\" : container.pattern;\n\n    const changePhone = container => !container ? \"\" : container.name;\n\n    searchUser.push([{\n      key: i,\n      type: \"id\",\n      data: changeName(container.resources[0].data.userid)\n    }, {\n      key: i,\n      type: \"name\",\n      data: changeName(container.resources[0].data.displayName)\n    }, {\n      key: i,\n      type: \"primary\",\n      data: changePrim(container.resources[0].data.primaryExtension)\n    }, {\n      key: i,\n      type: \"department\",\n      data: changeName(container.resources[0].data.title)\n    }, {\n      key: i,\n      type: \"device\",\n      data: changePhone(container.resources[0].data.Phone[0])\n    }, {\n      key: i,\n      type: \"location\",\n      data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\n    }]);\n  });\n  return searchUser;\n};\n\nexport default getUserData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/getUserData.js"],"names":["users","profiles","i","j","console","log","require","getUserData","searchUser","forEach","user","container","changeName","changePrim","pattern","changePhone","name","push","key","type","data","resources","userid","displayName","primaryExtension","title","Phone","meta","hierarchy","split","pop","toLowerCase"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,wCAArB;;AAEA,KAAK,IAAIC,CAAT,IAAcD,QAAd,EAAwB;AACpB,OAAK,IAAIE,CAAT,IAAcF,QAAQ,CAACC,CAAD,CAAtB,EAA2B;AACzBE,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAAE,cAAaJ,CAAE,IAAGD,QAAQ,CAACC,CAAD,CAAR,CAAYC,CAAZ,CAAe,EAAnC,CAAnB;AACD;AACJ;;AAED,MAAMI,WAAW,GAAG,MAAM;AACxB,MAAIL,CAAC,GAAG,CAAR;AACA,MAAIM,UAAU,GAAG,EAAjB;AAEAR,EAAAA,KAAK,CAAC,OAAD,CAAL,CAAeS,OAAf,CAAuBC,IAAI,IAAI;AAC7B,UAAMC,SAAS,GAAGL,OAAO,CAAE,oBAAmBI,IAAK,OAA1B,CAAzB;;AACA,UAAME,UAAU,GAAGD,SAAS,IAAI,CAACA,SAAD,GAAa,EAAb,GAAkBA,SAAlD;;AACA,UAAME,UAAU,GAAGF,SAAS,IAAI,CAACA,SAAD,GAAa,EAAb,GAAkBA,SAAS,CAACG,OAA5D;;AACA,UAAMC,WAAW,GAAGJ,SAAS,IAAI,CAACA,SAAD,GAAa,EAAb,GAAkBA,SAAS,CAACK,IAA7D;;AAEAR,IAAAA,UAAU,CAACS,IAAX,CAAgB,CACd;AACEC,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,IAAI,EAAER,UAAU,CAACD,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BE,MAA7B;AAHlB,KADc,EAMd;AACEJ,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,IAAI,EAAER,UAAU,CAACD,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BG,WAA7B;AAHlB,KANc,EAWd;AACEL,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,IAAI,EAAEP,UAAU,CAACF,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BI,gBAA7B;AAHlB,KAXc,EAgBd;AACEN,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,YAFR;AAGEC,MAAAA,IAAI,EAAER,UAAU,CAACD,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BK,KAA7B;AAHlB,KAhBc,EAqBd;AACEP,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,IAAI,EAAEL,WAAW,CAACJ,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBD,IAAvB,CAA4BM,KAA5B,CAAkC,CAAlC,CAAD;AAHnB,KArBc,EA0Bd;AACER,MAAAA,GAAG,EAAEhB,CADP;AAEEiB,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,IAAI,EAAET,SAAS,CAACU,SAAV,CAAoB,CAApB,EAAuBM,IAAvB,CAA4BC,SAA5B,CAAsCC,KAAtC,CAA4C,GAA5C,EAAiDC,GAAjD,GAAuDC,WAAvD;AAHR,KA1Bc,CAAhB;AAgCD,GAtCD;AAwCA,SAAOvB,UAAP;AACD,CA7CD;;AA+CA,eAAeD,WAAW,EAA1B","sourcesContent":["import users from \"../../data/user_list.json\"\r\nimport profiles from \"../../data/allstream_profile_list.json\"\r\n\r\nfor (let i in profiles) {\r\n    for (let j in profiles[i]) {\r\n      console.log(require(`../../data/${i}/${profiles[i][j]}`))\r\n    }\r\n}\r\n\r\nconst getUserData = () => {\r\n  let i = 0;\r\n  let searchUser = [];\r\n\r\n  users['users'].forEach(user => {\r\n    const container = require(`../../data/users/${user}.json`);\r\n    const changeName = container => !container ? \"\" : container\r\n    const changePrim = container => !container ? \"\" : container.pattern\r\n    const changePhone = container => !container ? \"\" : container.name\r\n\r\n    searchUser.push([\r\n      {\r\n        key: i,\r\n        type: \"id\", \r\n        data: changeName(container.resources[0].data.userid)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"name\",\r\n        data: changeName(container.resources[0].data.displayName)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"primary\",\r\n        data: changePrim(container.resources[0].data.primaryExtension)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"department\",\r\n        data: changeName(container.resources[0].data.title)\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"device\",\r\n        data: changePhone(container.resources[0].data.Phone[0])\r\n      },\r\n      {\r\n        key: i,\r\n        type: \"location\",\r\n        data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\r\n      }\r\n    ])\r\n  })\r\n\r\n  return searchUser\r\n}\r\n\r\nexport default getUserData();"]},"metadata":{},"sourceType":"module"}