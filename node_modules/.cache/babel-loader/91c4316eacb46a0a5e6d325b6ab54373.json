{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const [buttons] = useState(); // const [defaultDataToRender] = useState(buttons)\n  // const [filteredDataToRender, setFilteredDataToRender] = useState(buttons)\n  // const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style))\n\n  const addFilter = (item, position) => {\n    props.setButtonStyles(() => {\n      props.buttonStyles[position] = style.searchTypeOtherHighlight;\n      return props.buttonStyles; // setFilteredDataToRender(filteredDataToRender.filter((e) => {return e !== item.innerHTML}))\n      // item.style = style.searchTypeOtherHighlight\n    });\n  };\n\n  function ProfileButton({\n    item,\n    position,\n    setButtonStyles\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => addFilter(e, position),\n      style: props.buttonStyles[position],\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  const renderButtons = () => {\n    return buttons.map((item, i) => /*#__PURE__*/_jsxDEV(ProfileButton, {\n      item: item,\n      position: i\n    }, `RB${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // <div \n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\n//   {item}\n// </div>\n\n_s(ProfileButtons, \"rEcy8cP7NsMtnYAz5DdeVHHdxiA=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","React","useState","ProfileButtons","props","buttons","addFilter","item","position","setButtonStyles","buttonStyles","searchTypeOtherHighlight","ProfileButton","e","renderButtons","map","i","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,OAAD,IAAYH,QAAQ,EAA1B,CAD4C,CAE5C;AACA;AACA;;AAEA,QAAMI,SAAS,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACpCJ,IAAAA,KAAK,CAACK,eAAN,CAAsB,MAAM;AAC1BL,MAAAA,KAAK,CAACM,YAAN,CAAmBF,QAAnB,IAA+BR,KAAK,CAACW,wBAArC;AACA,aAAOP,KAAK,CAACM,YAAb,CAF0B,CAI5B;AACA;AACC,KAND;AAOD,GARD;;AAUA,WAASE,aAAT,CAAuB;AAACL,IAAAA,IAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA;AAAjB,GAAvB,EAA0D;AACxD,wBACE;AACI,MAAA,OAAO,EAAGI,CAAD,IAAOP,SAAS,CAACO,CAAD,EAAIL,QAAJ,CAD7B;AAEI,MAAA,KAAK,EAAEJ,KAAK,CAACM,YAAN,CAAmBF,QAAnB,CAFX;AAAA,gBAGGD;AAHH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,QAAMO,aAAa,GAAG,MAAM;AAC1B,WAAOT,OAAO,CAACU,GAAR,CAAY,CAACR,IAAD,EAAOS,CAAP,kBACjB,QAAC,aAAD;AAAe,MAAA,IAAI,EAAET,IAArB;AAA2B,MAAA,QAAQ,EAAES;AAArC,OAA8C,KAAIA,CAAE,EAApD;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGJ,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAID;AACA;AACA;AACA;AACA;;GA7CwBX,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const [buttons] = useState()\r\n  // const [defaultDataToRender] = useState(buttons)\r\n  // const [filteredDataToRender, setFilteredDataToRender] = useState(buttons)\r\n  // const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style))\r\n  \r\n  const addFilter = (item, position) => {\r\n    props.setButtonStyles(() => {\r\n      props.buttonStyles[position] = style.searchTypeOtherHighlight\r\n      return props.buttonStyles\r\n      \r\n    // setFilteredDataToRender(filteredDataToRender.filter((e) => {return e !== item.innerHTML}))\r\n    // item.style = style.searchTypeOtherHighlight\r\n    })\r\n  }\r\n\r\n  function ProfileButton({item, position, setButtonStyles}) {\r\n    return (\r\n      <div\r\n          onClick={(e) => addFilter(e, position)} \r\n          style={props.buttonStyles[position]}>\r\n        {item}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttons.map((item, i) => (\r\n      <ProfileButton item={item} position={i} key={`RB${i}`}/>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// <div \r\n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\r\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\r\n//   {item}\r\n// </div>"]},"metadata":{},"sourceType":"module"}