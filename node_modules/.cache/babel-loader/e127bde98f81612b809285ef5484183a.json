{"ast":null,"code":"export default function getLasData(data) {\n  let profileList = [];\n  console.log(data);\n  data['data'].forEach(profile => {\n    console.log(data);\n    profileList.push([{\n      type: \"mac_las\",\n      index: \"Device\",\n      data: (() => {\n        try {\n          let destruct = profile['mac'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n\n        ;\n      })()\n    }, {\n      index: \"User\",\n      data: (() => {\n        try {\n          let destruct = profile['user'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Extension\",\n      data: (() => {\n        try {\n          let destruct = profile['line'];\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      index: \"Location\",\n      data: \"LAS\"\n    }]);\n  });\n  return new Promise((resolve, reject) => {\n    resolve(profileList);\n    reject(\"Unable to retrieve voicemails.\");\n  });\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getLasData.js"],"names":["getLasData","data","profileList","console","log","forEach","profile","push","type","index","destruct","Promise","resolve","reject"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACvC,MAAIC,WAAW,GAAG,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAA,EAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaI,OAAb,CAAqBC,OAAO,IAAI;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,IAAAA,WAAW,CAACK,IAAZ,CAAiB,CACf;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGJ,OAAO,CAAC,KAAD,CAAtB;AACA,iBAAOI,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;;AAAA;AAClB,OANK;AAHR,KADe,EAYf;AACED,MAAAA,KAAK,EAAE,MADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGJ,OAAO,CAAC,MAAD,CAAtB;AACA,iBAAOI,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAZe,EAsBf;AACED,MAAAA,KAAK,EAAE,WADT;AAEER,MAAAA,IAAI,EAAE,CAAC,MAAM;AACX,YAAI;AACF,cAAIS,QAAQ,GAAGJ,OAAO,CAAC,MAAD,CAAtB;AACA,iBAAOI,QAAQ,GAAGA,QAAH,GAAc,EAA7B;AACD,SAHD,CAIA,MAAM;AAAC,iBAAO,EAAP;AAAU;AAClB,OANK;AAFR,KAtBe,EAgCf;AACED,MAAAA,KAAK,EAAE,UADT;AAEER,MAAAA,IAAI,EAAE;AAFR,KAhCe,CAAjB;AAqCD,GAvCD;AAyCA,SAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCD,IAAAA,OAAO,CAACV,WAAD,CAAP;AACAW,IAAAA,MAAM,CAAC,gCAAD,CAAN;AACD,GAHM,CAAP;AAID","sourcesContent":["export default function getLasData(data) {\r\n  let profileList = [];\r\n  console.log(data)\r\n\r\n  data['data'].forEach(profile => {\r\n    console.log(data)\r\n    profileList.push([\r\n      {\r\n        type: \"mac_las\",\r\n        index: \"Device\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['mac'];\r\n            return destruct ? destruct : \"\";\r\n          }\r\n          catch {return \"\"};\r\n        })()\r\n      },\r\n      {\r\n        index: \"User\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['user']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Extension\",\r\n        data: (() => {\r\n          try {\r\n            let destruct = profile['line']\r\n            return destruct ? destruct : \"\"\r\n          }\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        index: \"Location\",\r\n        data: \"LAS\"\r\n      }\r\n    ])\r\n  })\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(profileList)\r\n    reject(\"Unable to retrieve voicemails.\")\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}