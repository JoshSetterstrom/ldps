{"ast":null,"code":"import hierarchy from \"../../data/location_hierarchy.json\";\nexport default function getLocationHierarchy(item, type) {\n  console.log(item);\n  let link = \"\";\n  let store = \"\";\n\n  try {\n    let file = require(`../../data/${type}s/${item}.json`);\n\n    let pkid = file.resources[0].meta.pkid;\n    if (type == \"device\") console.log(file);\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1];\n    let storeId = hierarchy.stores[store];\n    link = hierarchy[`link_${type}`];\n    link = link.replace(\"{1}\", storeId);\n    link = link.replace(\"{2}\", pkid);\n  } catch {\n    /*pass*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/getLocationHierarchy.js"],"names":["hierarchy","getLocationHierarchy","item","type","console","log","link","store","file","require","pkid","resources","meta","includes","split","storeId","stores","replace"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI;AACF,QAAIC,IAAI,GAAGC,OAAO,CAAE,cAAaN,IAAK,KAAID,IAAK,OAA7B,CAAlB;;AACA,QAAIQ,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBF,IAAlC;AAEA,QAAIP,IAAI,IAAI,QAAZ,EAAsBC,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEtB,QAAIA,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBZ,SAAvB,CAAiCa,QAAjC,CAA0C,aAA1C,CAAJ,EAA8DN,KAAK,GAAG,aAAR,CAA9D,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBZ,SAAvB,CAAiCc,KAAjC,CAAuC,QAAvC,EAAiD,CAAjD,CAAnB;AAEL,QAAIC,OAAO,GAAGf,SAAS,CAACgB,MAAV,CAAiBT,KAAjB,CAAd;AACAD,IAAAA,IAAI,GAAGN,SAAS,CAAE,QAAOG,IAAK,EAAd,CAAhB;AACAG,IAAAA,IAAI,GAAGA,IAAI,CAACW,OAAL,CAAa,KAAb,EAAoBF,OAApB,CAAP;AACAT,IAAAA,IAAI,GAAGA,IAAI,CAACW,OAAL,CAAa,KAAb,EAAoBP,IAApB,CAAP;AACD,GAbD,CAeA,MAAM;AAAC;AAAS;;AAEhB,SAAOJ,IAAP;AACD","sourcesContent":["import hierarchy from \"../../data/location_hierarchy.json\"\r\n\r\nexport default function getLocationHierarchy(item, type) {\r\n  console.log(item)\r\n  let link = \"\"\r\n  let store = \"\"\r\n  try {\r\n    let file = require(`../../data/${type}s/${item}.json`)\r\n    let pkid = file.resources[0].meta.pkid\r\n\r\n    if (type == \"device\") console.log(file)\r\n\r\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1]\r\n    \r\n    let storeId = hierarchy.stores[store]\r\n    link = hierarchy[`link_${type}`]\r\n    link = link.replace(\"{1}\", storeId)\r\n    link = link.replace(\"{2}\", pkid)\r\n  }\r\n\r\n  catch {/*pass*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}