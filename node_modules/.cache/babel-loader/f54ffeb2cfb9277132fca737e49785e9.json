{"ast":null,"code":"import axios from 'axios';\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport getLineData from \"./getLineData\";\nimport getVoicemailData from \"./getVoicemailData\";\nimport getLasData from './getLasData';\nimport getDidData from './getDidData';\nexport default async function callApi(loadingBar, setLoadingBar) {\n  let loadingWidth = 0;\n  let rawData = {};\n  let cleanData = {};\n  let locationHierarchy = {};\n  axios.all([axios.get(`http://localhost:5000/phones`), axios.get(`http://localhost:5000/subscribers`), axios.get(`http://localhost:5000/lines`), axios.get(`http://localhost:5000/voicemail`), axios.get(`http://localhost:5000/did`), axios.get(`http://localhost:5000/las`), axios.get(`http://localhost:5000/location_hierarchy`)]).then(axios.spread(function () {\n    for (var _len = arguments.length, res = new Array(_len), _key = 0; _key < _len; _key++) {\n      res[_key] = arguments[_key];\n    }\n\n    res.forEach(async data => {\n      let type = data.request.responseURL.split('/').at(-1);\n      rawData[type] = res.data;\n      loadingWidth += 20;\n      setLoadingBar({ ...loadingBar,\n        width: loadingWidth\n      });\n\n      switch (type) {\n        case 'phones':\n          cleanData[type] = await getDeviceData(res.data);\n          break;\n\n        case 'subscribers':\n          cleanData[type] = await getUserData(res.data);\n          break;\n\n        case 'lines':\n          cleanData[type] = await getLineData(res);\n          break;\n\n        case 'voicemail':\n          cleanData[type] = await getVoicemailData(res);\n          break;\n\n        case 'did':\n          cleanData[type] = await getDidData(res);\n          break;\n\n        case 'las':\n          cleanData[type] = await getLasData(res);\n          break;\n\n        default:\n          break;\n      }\n    });\n  }));\n  console.time(\"Second\");\n  let res = await axios.get(`http://localhost:5000/phones`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['phones'] = res['data'];\n    cleanData['phones'] = await getDeviceData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/subscribers`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['subscribers'] = res['data'];\n    cleanData['subscribers'] = await getUserData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/lines`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['lines'] = res['data'];\n    cleanData['lines'] = await getLineData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/voicemail`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['voicemail'] = res['data'];\n    cleanData['voicemail'] = await getVoicemailData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/did`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['did'] = res['data'];\n    cleanData['did'] = await getDidData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/las`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    rawData['las'] = res['data'];\n    cleanData['las'] = await getLasData(res);\n  } catch {\n    console.log(res.status);\n  }\n\n  res = await axios.get(`http://localhost:5000/location_hierarchy`);\n\n  try {\n    loadingWidth += 20;\n    setLoadingBar({ ...loadingBar,\n      width: loadingWidth\n    });\n    locationHierarchy = res['data'];\n  } catch {\n    console.log(res.status);\n  }\n\n  console.timeEnd(\"Second\");\n  return new Promise((resolve, reject) => {\n    resolve({\n      \"rawData\": rawData,\n      \"cleanData\": cleanData,\n      \"locationHierarchy\": locationHierarchy\n    });\n    reject(\"fail\");\n  });\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldps/src/common/api/callApi.js"],"names":["axios","getDeviceData","getUserData","getLineData","getVoicemailData","getLasData","getDidData","callApi","loadingBar","setLoadingBar","loadingWidth","rawData","cleanData","locationHierarchy","all","get","then","spread","res","forEach","data","type","request","responseURL","split","at","width","console","time","log","status","timeEnd","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getLineData from \"./getLineData\";\r\nimport getVoicemailData from \"./getVoicemailData\"\r\nimport getLasData from './getLasData';\r\nimport getDidData from './getDidData';\r\n\r\nexport default async function callApi(loadingBar, setLoadingBar) {\r\n  let loadingWidth = 0\r\n  let rawData = {}\r\n  let cleanData = {}\r\n  let locationHierarchy = {}\r\n\r\n  axios.all([\r\n    axios.get(`http://localhost:5000/phones`),\r\n    axios.get(`http://localhost:5000/subscribers`),\r\n    axios.get(`http://localhost:5000/lines`),\r\n    axios.get(`http://localhost:5000/voicemail`),\r\n    axios.get(`http://localhost:5000/did`),\r\n    axios.get(`http://localhost:5000/las`),\r\n    axios.get(`http://localhost:5000/location_hierarchy`)\r\n  ])\r\n  .then(axios.spread((...res) => {\r\n    res.forEach(async data => {\r\n      let type = data.request.responseURL.split('/').at(-1)\r\n      rawData[type] = res.data\r\n      loadingWidth+=20\r\n\r\n      setLoadingBar({...loadingBar, width: loadingWidth})\r\n\r\n      switch(type) {\r\n        case 'phones':      cleanData[type] = await getDeviceData(res.data); break\r\n        case 'subscribers': cleanData[type] = await getUserData(res.data); break\r\n        case 'lines':       cleanData[type] = await getLineData(res); break\r\n        case 'voicemail':   cleanData[type] = await getVoicemailData(res); break\r\n        case 'did':         cleanData[type] = await getDidData(res); break\r\n        case 'las':         cleanData[type] = await getLasData(res); break\r\n        default: break\r\n      }\r\n    })\r\n  }))\r\n\r\n  console.time(\"Second\")\r\n  let res = await axios.get(`http://localhost:5000/phones`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['phones'] = res['data']\r\n    cleanData['phones'] = await getDeviceData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/subscribers`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['subscribers'] = res['data']\r\n    cleanData['subscribers'] = await getUserData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/lines`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['lines'] = res['data']\r\n    cleanData['lines'] = await getLineData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/voicemail`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['voicemail'] = res['data']\r\n    cleanData['voicemail'] = await getVoicemailData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/did`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['did'] = res['data']\r\n    cleanData['did'] = await getDidData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/las`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    rawData['las'] = res['data']\r\n    cleanData['las'] = await getLasData(res)\r\n  }\r\n  catch {console.log(res.status)}\r\n\r\n  res = await axios.get(`http://localhost:5000/location_hierarchy`)\r\n  try {\r\n    loadingWidth+=20\r\n    setLoadingBar({...loadingBar, width: loadingWidth})\r\n    locationHierarchy = res['data']\r\n  }\r\n  catch {console.log(res.status)}\r\n  \r\n  console.timeEnd(\"Second\")\r\n  return new Promise((resolve, reject) => {\r\n    resolve({\r\n      \"rawData\": rawData,\r\n      \"cleanData\": cleanData, \r\n      \"locationHierarchy\": locationHierarchy\r\n    })\r\n    reject(\"fail\")\r\n  })\r\n\r\n}"]},"metadata":{},"sourceType":"module"}