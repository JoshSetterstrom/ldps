{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, React, useState } from 'react';\nimport * as style from \"../css/searchList\";\nimport ListDeviceItem from \"./listDeviceItem\";\nimport ListUserItem from \"./listUserItem\";\nimport IndexMenu from \"./indexMenu\";\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet string = \"\";\nlet searchDevice = getDeviceData;\nlet searchUser = getUserData; // let searchDid = getDidData;\n\nlet deviceRelevantSearch = \"mac\";\nlet userRelevantSearch = \"id\";\nlet filteredDeviceSearch = [\"\"];\nlet filteredUserSearch = [\"\"];\nlet filteredDidSearch = [\"\"];\nlet phoneContainer = [];\nexport default function SearchList() {\n  _s();\n\n  const [device, setDevice] = useState(searchDevice);\n  const [user, setUser] = useState(searchUser);\n  const [scroll, setScroll] = useState({\n    scrollTop: 0\n  });\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\n  const [userDisplay, setUserDisplay] = useState(true);\n  const [didDisplay, setDidDisplay] = useState(false);\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\n  const [deviceReturnLength, setDeviceReturnLength] = useState(0);\n  const deviceIndexRef = useRef(null);\n  const userIndexRef = useRef(null);\n  const scrollRef = useRef({\n    scrollTop: 0\n  }); //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\n\n  const returnSearch = () => {\n    let deviceInfoType = [];\n    let userInfoType = [];\n    let unfilteredDeviceSearch = [];\n    let unfilteredUserSearch = [];\n    searchDevice.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          deviceInfoType.push(e.type);\n          unfilteredDeviceSearch.push(profile);\n        }\n      });\n    });\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\n    searchUser.forEach(profile => {\n      profile.forEach(e => {\n        if (e.data.toString().toLowerCase().includes(string)) {\n          userInfoType.push(e.type);\n          unfilteredUserSearch.push(profile);\n        }\n      });\n    });\n    filteredUserSearch = [...new Set(unfilteredUserSearch)]; //Highlights most relavent searchindex.\n\n    let deviceCounts = [];\n    deviceInfoType.forEach(e => {\n      deviceCounts[e] = (deviceCounts[e] || 0) + 1;\n    });\n    deviceRelevantSearch = Object.keys(deviceCounts)[0];\n    deviceInfoType = [];\n    let userCounts = [];\n    userInfoType.forEach(e => {\n      userCounts[e] = (userCounts[e] || 0) + 1;\n    });\n    userRelevantSearch = Object.keys(userCounts)[0];\n    userInfoType = [];\n  };\n\n  const handleInputChange = e => {\n    string = e.target.value;\n    returnSearch();\n    setDevice(filteredDeviceSearch);\n    setUser(filteredUserSearch);\n  };\n\n  const handleSearchTypeChange = e => {\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(false);\n      return;\n    }\n\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setDeviceDisplay(false);\n      setUserDisplay(true);\n      return;\n    }\n\n    if (e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(true);\n      return;\n    }\n  };\n\n  const handleScroll = () => {\n    setScroll({\n      scrollTop: scrollRef.current.scrollTop\n    });\n    console.log(scroll.scrollTop, phoneContainer.length * 35);\n\n    if (scroll.scrollTop - 28 > phoneContainer.length * 35) {\n      userIndexRef.current.style.position = \"fixed\";\n      userIndexRef.current.style.top = \"50px\";\n      return;\n    }\n\n    userIndexRef.current.style.position = \"static\";\n  }; //Renders a list with all devices returned to filteredSearch and passed to device state.\n\n\n  const renderPhoneList = () => {\n    phoneContainer = [];\n    let i = 0;\n\n    while (i < 100) {\n      if (!device[i]) break;\n      phoneContainer.push(device[i]);\n      i++;\n    }\n\n    if (deviceDisplay) {\n      return phoneContainer.map((item, i) => /*#__PURE__*/_jsxDEV(ListDeviceItem, {\n        mac: item[0].data,\n        user: item[1].data,\n        line: item[2].data,\n        mask: item[3].data,\n        ip: item[4].data,\n        location: item[5].data\n      }, `ID${i}D`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderUserList = () => {\n    let container = [];\n    let i = 0;\n\n    while (i < 100) {\n      if (!user[i]) break;\n      container.push(user[i]);\n      i++;\n    }\n\n    if (userDisplay) {\n      return container.map((item, i) => /*#__PURE__*/_jsxDEV(ListUserItem, {\n        id: item[0].data,\n        name: item[1].data,\n        primary: item[2].data,\n        department: item[3].data,\n        device: item[4].data,\n        location: item[5].data\n      }, `ID${i}U`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderDeviceIndexMenu = () => {\n    if (deviceDisplay) {\n      if (filteredDeviceSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 53\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        relevantSearch: deviceRelevantSearch,\n        index1: [\"MAC Address\", \"mac\"],\n        index2: [\"User\", \"user\"],\n        index3: [\"Primary Line\", \"line\"],\n        index4: [\"Line Mask\", \"mask\"],\n        index5: [\"IP Address\", \"ip\"],\n        index6: [\"Location\", \"location\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderUserIndexMenu = () => {\n    if (userDisplay) {\n      if (filteredUserSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 51\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        relevantSearch: userRelevantSearch,\n        index1: [\"User ID\", \"id\"],\n        index2: [\"Name\", \"name\"],\n        index3: [\"Primary Line\", \"primary\"],\n        index4: [\"Department\", \"department\"],\n        index5: [\"Device\", \"device\"],\n        index6: [\"Location\", \"location\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderDidIndexMenu = () => {\n    if (didDisplay) {\n      if (filteredDidSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 50\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: \"59.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeDeviceStyle,\n        children: \"Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeUserStyle,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeUserStyle,\n        children: \"DID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        onScroll: () => handleScroll(),\n        style: style.listContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: deviceIndexRef,\n          style: {\n            backgroundColor: \"white\",\n            top: \"50px\",\n            position: \"fixed\",\n            zIndex: 0\n          },\n          children: renderDeviceIndexMenu()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), renderPhoneList(), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: userIndexRef,\n          style: {\n            backgroundColor: \"white\",\n            position: \"fixed\",\n            zIndex: 1\n          },\n          children: renderUserIndexMenu()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), renderUserList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"osS95n8bF+Zh6U6jl67WCWpW9s8=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList.jsx"],"names":["useRef","React","useState","style","ListDeviceItem","ListUserItem","IndexMenu","getDeviceData","getUserData","string","searchDevice","searchUser","deviceRelevantSearch","userRelevantSearch","filteredDeviceSearch","filteredUserSearch","filteredDidSearch","phoneContainer","SearchList","device","setDevice","user","setUser","scroll","setScroll","scrollTop","deviceDisplay","setDeviceDisplay","userDisplay","setUserDisplay","didDisplay","setDidDisplay","searchTypeDeviceStyle","setSearchTypeDeviceStyle","searchTypeUserStyle","setSearchTypeUserStyle","deviceReturnLength","setDeviceReturnLength","deviceIndexRef","userIndexRef","scrollRef","returnSearch","deviceInfoType","userInfoType","unfilteredDeviceSearch","unfilteredUserSearch","forEach","profile","e","data","toString","toLowerCase","includes","push","type","Set","deviceCounts","Object","keys","userCounts","handleInputChange","target","value","handleSearchTypeChange","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyleHighlight","handleScroll","current","console","log","length","position","top","renderPhoneList","i","map","item","renderUserList","container","renderDeviceIndexMenu","renderUserIndexMenu","renderDidIndexMenu","minWidth","display","searchInputStyle","listContainerStyle","backgroundColor","zIndex"],"mappings":"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","sourcesContent":["import {useRef, React, useState} from 'react';\r\nimport * as style from \"../css/searchList\";\r\nimport ListDeviceItem from \"./listDeviceItem\";\r\nimport ListUserItem from \"./listUserItem\";\r\nimport IndexMenu from \"./indexMenu\";\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\n\r\nlet string = \"\";\r\nlet searchDevice = getDeviceData;\r\nlet searchUser = getUserData;\r\n// let searchDid = getDidData;\r\nlet deviceRelevantSearch = \"mac\";\r\nlet userRelevantSearch = \"id\"\r\nlet filteredDeviceSearch = [\"\"];\r\nlet filteredUserSearch = [\"\"];\r\nlet filteredDidSearch = [\"\"];\r\nlet phoneContainer = [];\r\n\r\nexport default function SearchList() {\r\n  const [device, setDevice] = useState(searchDevice);\r\n  const [user, setUser] = useState(searchUser);\r\n  const [scroll, setScroll] = useState({scrollTop: 0})\r\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\r\n  const [userDisplay, setUserDisplay] = useState(true);\r\n  const [didDisplay, setDidDisplay] = useState(false);\r\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\r\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\r\n  const [deviceReturnLength, setDeviceReturnLength] = useState(0)\r\n  const deviceIndexRef = useRef(null)\r\n  const userIndexRef = useRef(null)\r\n  const scrollRef = useRef({scrollTop: 0})\r\n  \r\n  //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\r\n  const returnSearch = () => {\r\n    let deviceInfoType = [];\r\n    let userInfoType = [];\r\n    let unfilteredDeviceSearch = [];\r\n    let unfilteredUserSearch = [];\r\n  \r\n    searchDevice.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          deviceInfoType.push(e.type);\r\n          unfilteredDeviceSearch.push(profile);\r\n        }\r\n      });\r\n    });\r\n    filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\r\n  \r\n    searchUser.forEach(profile => {\r\n      profile.forEach(e => {\r\n        if (e.data.toString().toLowerCase().includes(string)) {\r\n          userInfoType.push(e.type);\r\n          unfilteredUserSearch.push(profile);\r\n        }\r\n      })\r\n    })\r\n    filteredUserSearch = [...new Set(unfilteredUserSearch)];\r\n  \r\n    //Highlights most relavent searchindex.\r\n    let deviceCounts = [];\r\n    deviceInfoType.forEach(e => {\r\n      deviceCounts[e] = (deviceCounts[e] || 0) + 1;\r\n    });\r\n    deviceRelevantSearch = Object.keys(deviceCounts)[0];\r\n    deviceInfoType = [];\r\n\r\n    let userCounts = [];\r\n    userInfoType.forEach(e => {\r\n      userCounts[e] = (userCounts[e] || 0) + 1;\r\n    });\r\n    userRelevantSearch = Object.keys(userCounts)[0];\r\n    userInfoType = [];\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    string = e.target.value;\r\n    returnSearch();\r\n    setDevice(filteredDeviceSearch);\r\n    setUser(filteredUserSearch);\r\n  }\r\n\r\n  const handleSearchTypeChange = e => {\r\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(false)\r\n      return\r\n    }\r\n\r\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {  \r\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setDeviceDisplay(false)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n\r\n    if (e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    setScroll({scrollTop: scrollRef.current.scrollTop})\r\n    console.log(scroll.scrollTop, phoneContainer.length*35)\r\n    if (scroll.scrollTop-28 > phoneContainer.length*35) {\r\n      userIndexRef.current.style.position = \"fixed\"\r\n      userIndexRef.current.style.top = \"50px\"\r\n      return\r\n    }\r\n    userIndexRef.current.style.position = \"static\"\r\n  }\r\n\r\n  //Renders a list with all devices returned to filteredSearch and passed to device state.\r\n  const renderPhoneList = () => {\r\n    phoneContainer = []\r\n    let i = 0\r\n    while (i < 100) {\r\n      if (!device[i]) break\r\n      phoneContainer.push(device[i])\r\n      i++\r\n    }\r\n    \r\n    if (deviceDisplay) {\r\n      return phoneContainer.map((item, i) => (\r\n        <ListDeviceItem\r\n          key={`ID${i}D`}\r\n          mac={item[0].data}\r\n          user={item[1].data}\r\n          line={item[2].data}\r\n          mask={item[3].data}\r\n          ip={item[4].data}\r\n          location={item[5].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    let container = []\r\n    let i = 0\r\n    while (i < 100) {\r\n      if (!user[i]) break\r\n      container.push(user[i])\r\n      i++;\r\n    }\r\n    if (userDisplay) {\r\n      return container.map((item, i) => (\r\n        <ListUserItem\r\n          key={`ID${i}U`}\r\n          id={item[0].data}\r\n          name={item[1].data}\r\n          primary={item[2].data}\r\n          department={item[3].data}\r\n          device={item[4].data}\r\n          location={item[5].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderDeviceIndexMenu = () => {\r\n    if (deviceDisplay) {\r\n      if (filteredDeviceSearch.length === 0) return <div></div>\r\n      return <IndexMenu\r\n        relevantSearch={deviceRelevantSearch} \r\n        index1={[\"MAC Address\", \"mac\"]} \r\n        index2={[\"User\", \"user\"]} \r\n        index3={[\"Primary Line\", \"line\"]} \r\n        index4={[\"Line Mask\", \"mask\"]} \r\n        index5={[\"IP Address\", \"ip\"]}\r\n        index6={[\"Location\", \"location\"]}\r\n      />\r\n    }\r\n  }\r\n\r\n  const renderUserIndexMenu = () => {\r\n    if (userDisplay) {\r\n      if (filteredUserSearch.length === 0) return <div></div>\r\n      return <IndexMenu\r\n        relevantSearch={userRelevantSearch} \r\n        index1={[\"User ID\", \"id\"]} \r\n        index2={[\"Name\", \"name\"]}\r\n        index3={[\"Primary Line\", \"primary\"]} \r\n        index4={[\"Department\", \"department\"]}\r\n        index5={[\"Device\", \"device\"]}\r\n        index6={[\"Location\", \"location\"]}\r\n      />\r\n    }\r\n  }\r\n\r\n  const renderDidIndexMenu = () => {\r\n    if (didDisplay) {\r\n      if (filteredDidSearch.length === 0) return <div></div>\r\n      return <IndexMenu\r\n      \r\n      />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{minWidth: \"59.5vw\"}}>\r\n      <div style={{display: \"flex\"}}>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeDeviceStyle}>Device</div>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeUserStyle}>User</div>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeUserStyle}>DID</div>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      </div>\r\n      <div >\r\n        <div ref={scrollRef} onScroll={() => handleScroll()} style={style.listContainerStyle}>\r\n          <div ref={deviceIndexRef} style={{backgroundColor: \"white\", top: \"50px\", position: \"fixed\", zIndex: 0}}>\r\n            {renderDeviceIndexMenu()}\r\n          </div>\r\n          {renderPhoneList()}\r\n          <div ref={userIndexRef} style={{backgroundColor: \"white\", position: \"fixed\", zIndex: 1}}>\r\n            {renderUserIndexMenu()}\r\n          </div>\r\n          {renderUserList()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}