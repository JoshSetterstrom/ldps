{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, React, useState } from 'react';\nimport * as style from \"../css/searchList\";\nimport ListDeviceItem from \"./listDeviceItem\";\nimport ListUserItem from \"./listUserItem\";\nimport IndexMenu from \"./indexMenu\";\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet string = \"\";\nlet searchDevice = getDeviceData;\nlet searchUser = getUserData;\nlet deviceRelevantSearch = \"mac\";\nlet userRelevantSearch = \"id\";\nlet filteredDeviceSearch = [];\nlet filteredUserSearch = [];\nexport default function SearchList() {\n  _s();\n\n  const [device, setDevice] = useState(searchDevice);\n  const [user, setUser] = useState(searchUser);\n  const [scroll, setScroll] = useState({\n    scrollTop: 0\n  });\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\n  const [userDisplay, setUserDisplay] = useState(true);\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\n  const scrollRef = useRef({\n    scrollTop: 0\n  }); //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\n\n  const returnSearch = () => {\n    let deviceInfoType = [];\n    let userInfoType = [];\n    let unfilteredDeviceSearch = [];\n    let unfilteredUserSearch = [];\n    let i = 0; // searchDevice.forEach(profile => {\n    //   profile.forEach(e => {\n    //     if (e.data.toString().toLowerCase().includes(string)) {\n    //       deviceInfoType.push(e.type);\n    //       unfilteredDeviceSearch.push(profile);\n    //     }\n    //   });\n    // });\n    // filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\n    // searchUser.forEach(profile => {\n    //   profile.forEach(e => {\n    //     if (e.data.toString().toLowerCase().includes(string)) {\n    //       userInfoType.push(e.type);\n    //       unfilteredUserSearch.push(profile);\n    //     }\n    //   })\n    // })\n    // filteredUserSearch = [...new Set(unfilteredUserSearch)];\n    // let deviceCounts = [];\n    // deviceInfoType.forEach(e => {\n    //   deviceCounts[e] = (deviceCounts[e] || 0) + 1;\n    // });\n    // deviceRelevantSearch = Object.keys(deviceCounts)[0];\n    // deviceInfoType = [];\n    // let userCounts = [];\n    // userInfoType.forEach(e => {\n    //   userCounts[e] = (userCounts[e] || 0) + 1;\n    // });\n    // userRelevantSearch = Object.keys(userCounts)[0];\n    // userInfoType = [];\n  };\n\n  const handleInputChange = e => {\n    string = e.target.value;\n    returnSearch();\n    setDevice(filteredDeviceSearch);\n    setUser(filteredUserSearch);\n  };\n\n  const handleSearchTypeChange = e => {\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(false);\n      return;\n    }\n\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight);\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setDeviceDisplay(false);\n      setUserDisplay(true);\n      return;\n    }\n\n    if (e.target.style[\"borderWidth\"]) {\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle);\n      setSearchTypeUserStyle(style.searchTypeUserStyle);\n      setDeviceDisplay(true);\n      setUserDisplay(true);\n      return;\n    }\n  };\n\n  const handleScroll = e => {\n    setScroll({\n      scrollTop: scrollRef.current.scrollTop\n    });\n  }; //Renders a list with all devices returned to filteredSearch and passed to device state.\n\n\n  const renderPhoneList = () => {\n    let container = [];\n    let i = 0;\n\n    while (i < 10) {\n      if (!device[i]) break;\n      container.push(device[i]);\n      i++;\n    }\n\n    if (deviceDisplay) {\n      return container.map((item, i) => /*#__PURE__*/_jsxDEV(ListDeviceItem, {\n        mac: item[0].data,\n        user: item[1].data.toLowerCase(),\n        line: item[2].data,\n        mask: item[3].data,\n        ip: item[4].data,\n        location: item[5].data.toLowerCase()\n      }, `ID${i}D`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderUserList = () => {\n    let container = [];\n    let i = 0;\n\n    while (i < 10) {\n      if (!user[i]) break;\n      container.push(user[i]);\n      i++;\n    }\n\n    if (userDisplay) {\n      return container.map((item, i) => /*#__PURE__*/_jsxDEV(ListUserItem, {\n        id: item[0].data,\n        name: item[1].data,\n        primary: item[2].data,\n        department: item[3].data\n      }, `ID${i}U`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  const renderDeviceIndexMenu = () => {\n    if (deviceDisplay) {\n      if (filteredDeviceSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 53\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        index1: [\"MAC Address\", \"mac\"],\n        index2: [\"User\", \"user\"],\n        index3: [\"Primary Line\", \"line\"],\n        index4: [\"Line Mask\", \"mask\"],\n        index5: [\"IP Address\", \"ip\"],\n        index6: [\"Location\", \"location\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderUserIndexMenu = () => {\n    if (userDisplay) {\n      if (filteredUserSearch.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 51\n      }, this);\n      return /*#__PURE__*/_jsxDEV(IndexMenu, {\n        index1: [\"User ID\", \"id\"],\n        index2: [\"Name\", \"name\"],\n        index3: [\"Primary Line\", \"primary\"],\n        index4: [\"Department\", \"department\"],\n        index5: [\"Device\", \"device\"],\n        index6: [\"Location\", \"location\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: \"59.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeDeviceStyle,\n        children: \"Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleSearchTypeChange(e),\n        style: searchTypeUserStyle,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        onScroll: e => handleScroll(e),\n        style: style.listContainerStyle,\n        children: [renderDeviceIndexMenu(), renderPhoneList(), renderUserIndexMenu(), renderUserList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"lg1zGzBcatvmkuufTFF+HBC4BJ8=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList.jsx"],"names":["useRef","React","useState","style","ListDeviceItem","ListUserItem","IndexMenu","getDeviceData","getUserData","string","searchDevice","searchUser","deviceRelevantSearch","userRelevantSearch","filteredDeviceSearch","filteredUserSearch","SearchList","device","setDevice","user","setUser","scroll","setScroll","scrollTop","deviceDisplay","setDeviceDisplay","userDisplay","setUserDisplay","searchTypeDeviceStyle","setSearchTypeDeviceStyle","searchTypeUserStyle","setSearchTypeUserStyle","scrollRef","returnSearch","deviceInfoType","userInfoType","unfilteredDeviceSearch","unfilteredUserSearch","i","handleInputChange","e","target","value","handleSearchTypeChange","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyleHighlight","handleScroll","current","renderPhoneList","container","push","map","item","data","toLowerCase","renderUserList","renderDeviceIndexMenu","length","renderUserIndexMenu","minWidth","display","searchInputStyle","listContainerStyle"],"mappings":"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","sourcesContent":["import {useRef, React, useState} from 'react';\r\nimport * as style from \"../css/searchList\";\r\nimport ListDeviceItem from \"./listDeviceItem\";\r\nimport ListUserItem from \"./listUserItem\";\r\nimport IndexMenu from \"./indexMenu\";\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\n\r\nlet string = \"\";\r\nlet searchDevice = getDeviceData;\r\nlet searchUser = getUserData;\r\nlet deviceRelevantSearch = \"mac\";\r\nlet userRelevantSearch = \"id\"\r\nlet filteredDeviceSearch = [];\r\nlet filteredUserSearch = [];\r\n\r\nexport default function SearchList() {\r\n  const [device, setDevice] = useState(searchDevice);\r\n  const [user, setUser] = useState(searchUser);\r\n  const [scroll, setScroll] = useState({scrollTop: 0})\r\n  const [deviceDisplay, setDeviceDisplay] = useState(true);\r\n  const [userDisplay, setUserDisplay] = useState(true);\r\n  const [searchTypeDeviceStyle, setSearchTypeDeviceStyle] = useState(style.searchTypeDeviceStyle);\r\n  const [searchTypeUserStyle, setSearchTypeUserStyle] = useState(style.searchTypeUserStyle);\r\n  const scrollRef = useRef({scrollTop: 0})\r\n  \r\n  //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\r\n  const returnSearch = () => {\r\n    let deviceInfoType = [];\r\n    let userInfoType = [];\r\n    let unfilteredDeviceSearch = [];\r\n    let unfilteredUserSearch = [];\r\n    let i = 0\r\n  \r\n    // searchDevice.forEach(profile => {\r\n    //   profile.forEach(e => {\r\n    //     if (e.data.toString().toLowerCase().includes(string)) {\r\n    //       deviceInfoType.push(e.type);\r\n    //       unfilteredDeviceSearch.push(profile);\r\n    //     }\r\n    //   });\r\n    // });\r\n    // filteredDeviceSearch = [...new Set(unfilteredDeviceSearch)];\r\n  \r\n    // searchUser.forEach(profile => {\r\n    //   profile.forEach(e => {\r\n    //     if (e.data.toString().toLowerCase().includes(string)) {\r\n    //       userInfoType.push(e.type);\r\n    //       unfilteredUserSearch.push(profile);\r\n    //     }\r\n    //   })\r\n    // })\r\n    // filteredUserSearch = [...new Set(unfilteredUserSearch)];\r\n  \r\n    // let deviceCounts = [];\r\n    // deviceInfoType.forEach(e => {\r\n    //   deviceCounts[e] = (deviceCounts[e] || 0) + 1;\r\n    // });\r\n    // deviceRelevantSearch = Object.keys(deviceCounts)[0];\r\n    // deviceInfoType = [];\r\n\r\n    // let userCounts = [];\r\n    // userInfoType.forEach(e => {\r\n    //   userCounts[e] = (userCounts[e] || 0) + 1;\r\n    // });\r\n    // userRelevantSearch = Object.keys(userCounts)[0];\r\n    // userInfoType = [];\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    string = e.target.value;\r\n    returnSearch();\r\n    setDevice(filteredDeviceSearch);\r\n    setUser(filteredUserSearch);\r\n  }\r\n\r\n  const handleSearchTypeChange = e => {\r\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyleHighlight)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(false)\r\n      return\r\n    }\r\n\r\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {  \r\n      setSearchTypeUserStyle(style.searchTypeUserStyleHighlight)\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setDeviceDisplay(false)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n\r\n    if (e.target.style[\"borderWidth\"]) {\r\n      setSearchTypeDeviceStyle(style.searchTypeDeviceStyle)\r\n      setSearchTypeUserStyle(style.searchTypeUserStyle)\r\n      setDeviceDisplay(true)\r\n      setUserDisplay(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  const handleScroll = e => {\r\n    setScroll({scrollTop: scrollRef.current.scrollTop})\r\n  }\r\n\r\n  //Renders a list with all devices returned to filteredSearch and passed to device state.\r\n  const renderPhoneList = () => {\r\n    let container = []\r\n    let i = 0\r\n    while (i < 10 ) {\r\n      if (!device[i]) break\r\n      container.push(device[i])\r\n      i++\r\n    }\r\n    if (deviceDisplay) {\r\n      return container.map((item, i) => (\r\n        <ListDeviceItem\r\n          key={`ID${i}D`}\r\n          mac={item[0].data}\r\n          user={item[1].data.toLowerCase()}\r\n          line={item[2].data}\r\n          mask={item[3].data}\r\n          ip={item[4].data}\r\n          location={item[5].data.toLowerCase()}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderUserList = () => {\r\n    let container = []\r\n    let i = 0\r\n    while (i < 10) {\r\n      if (!user[i]) break\r\n      container.push(user[i])\r\n      i++;\r\n    }\r\n    if (userDisplay) {\r\n      return container.map((item, i) => (\r\n        <ListUserItem\r\n          key={`ID${i}U`}\r\n          id={item[0].data}\r\n          name={item[1].data}\r\n          primary={item[2].data}\r\n          department={item[3].data}\r\n        />\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderDeviceIndexMenu = () => {\r\n    if (deviceDisplay) {\r\n      if (filteredDeviceSearch.length === 0) return <div></div>\r\n      return <IndexMenu \r\n        index1={[\"MAC Address\", \"mac\"]} \r\n        index2={[\"User\", \"user\"]} \r\n        index3={[\"Primary Line\", \"line\"]} \r\n        index4={[\"Line Mask\", \"mask\"]} \r\n        index5={[\"IP Address\", \"ip\"]}\r\n        index6={[\"Location\", \"location\"]}\r\n      />\r\n    }\r\n  }\r\n\r\n  const renderUserIndexMenu = () => {\r\n    if (userDisplay) {\r\n      if (filteredUserSearch.length === 0) return <div></div>\r\n      return <IndexMenu \r\n        index1={[\"User ID\", \"id\"]} \r\n        index2={[\"Name\", \"name\"]}\r\n        index3={[\"Primary Line\", \"primary\"]} \r\n        index4={[\"Department\", \"department\"]}\r\n        index5={[\"Device\", \"device\"]}\r\n        index6={[\"Location\", \"location\"]}\r\n      />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{minWidth: \"59.5vw\"}}>\r\n      <div style={{display: \"flex\"}}>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeDeviceStyle}>Device</div>\r\n        <div onClick={e => handleSearchTypeChange(e)} style={searchTypeUserStyle}>User</div>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      </div>\r\n      <div >\r\n        <div ref={scrollRef} onScroll={e => handleScroll(e)} style={style.listContainerStyle}>\r\n          {renderDeviceIndexMenu()}\r\n          {renderPhoneList()}\r\n          {renderUserIndexMenu()}\r\n          {renderUserList()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}