{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\LDREACT\\\\src\\\\common\\\\searchList\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport * as __data from \"./searchListData\";\nimport * as style from \"../../css/light/searchList\"; // import FocusedList from './focusedList';\n\nimport getItem from './getItem';\nimport getTotalCount from './getTotalCount';\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport getDidData from \"./getDidData\";\nimport getSearch from './getSearch';\nimport getFilteredSearch from './getFilteredSearch';\nimport ProfileList from \"./profileList\";\nimport Total from \"./total\";\nimport ProfileButtons from \"./profileButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet filteredSearch = {\n  \"device\": {\n    \"results\": getDeviceData,\n    \"relevant\": \"mac\"\n  },\n  \"user\": {\n    \"results\": getUserData,\n    \"relevant\": \"id\"\n  },\n  \"did\": {\n    \"results\": getDidData,\n    \"relevant\": \"did\"\n  }\n};\nexport default function SearchList() {\n  _s();\n\n  const [data, setData] = useState(__data['default']);\n  const [item, setItem] = useState(getItem(filteredSearch)); // const [focused, setFocused] = useState([])\n\n  const [pageNumber, setPageNumber] = useState(10);\n  const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"]);\n  useEffect(() => {\n    setData(getTotalCount(filteredSearch, data));\n  }, [data]);\n\n  const handleInputChange = string => {\n    let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch);\n    filteredSearch = getFilteredSearch(search);\n    setItem(getItem(filteredSearch));\n    setData(getTotalCount(filteredSearch, data));\n  }; // const handleFocus = (e, type, id, assoc) => {\n  //   if (e.target.style.cursor !== \"pointer\") return\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\n  //   setFocused(newFocused)\n  // }\n\n\n  const getItemsToRender = () => {\n    let temp = {};\n\n    for (let i in listToRender) {\n      if (!item[listToRender[i].toLowerCase()]) {\n        /*pass*/\n      } else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()];\n    }\n\n    return temp;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"63.5vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n        temp: filteredSearch,\n        listToRender: listToRender,\n        setListToRender: setListToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileList, {\n        temp: getItemsToRender(),\n        data: data,\n        item: item,\n        pageNumber: pageNumber,\n        filteredSearch: filteredSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        pageNumber: pageNumber,\n        setPageNumber: setPageNumber,\n        profile: item,\n        listToRender: listToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"Bkv3fboAEHTLh916Xdc57AiclFw=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/searchList.jsx"],"names":["React","useState","useEffect","__data","style","getItem","getTotalCount","getDeviceData","getUserData","getDidData","getSearch","getFilteredSearch","ProfileList","Total","ProfileButtons","filteredSearch","SearchList","data","setData","item","setItem","pageNumber","setPageNumber","listToRender","setListToRender","handleInputChange","string","search","getItemsToRender","temp","i","toLowerCase","maxWidth","searchInputStyle","e"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport * as __data from \"./searchListData\"\r\nimport * as style from \"../../css/light/searchList\";\r\n// import FocusedList from './focusedList';\r\nimport getItem from './getItem';\r\nimport getTotalCount from './getTotalCount';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport getSearch from './getSearch';\r\nimport getFilteredSearch from './getFilteredSearch';\r\nimport ProfileList from \"./profileList\"\r\nimport Total from \"./total\"\r\nimport ProfileButtons from \"./profileButtons\"\r\n\r\nlet filteredSearch = {\r\n  \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \r\n  \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\r\n  \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\r\n}\r\n\r\nexport default function SearchList() {\r\n  const [data, setData] = useState(__data['default'])\r\n  const [item, setItem] = useState(getItem(filteredSearch))\r\n  // const [focused, setFocused] = useState([])\r\n  const [pageNumber, setPageNumber] = useState(10)\r\n  const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"])\r\n  \r\n  useEffect(() => {\r\n    setData(getTotalCount(filteredSearch, data))\r\n  }, [data])\r\n\r\n  const handleInputChange = string => {\r\n    let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\r\n    filteredSearch = getFilteredSearch(search)\r\n    setItem(getItem(filteredSearch))\r\n    setData(getTotalCount(filteredSearch, data))\r\n  }\r\n\r\n  // const handleFocus = (e, type, id, assoc) => {\r\n  //   if (e.target.style.cursor !== \"pointer\") return\r\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n  //   setFocused(newFocused)\r\n  // }\r\n\r\n  const getItemsToRender = () => {\r\n    let temp = {}\r\n\r\n    for (let i in listToRender) {\r\n      if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\r\n      else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\r\n    }\r\n    return temp\r\n  }\r\n    \r\n  return (\r\n    <div>\r\n      <div style={{maxWidth: \"63.5vw\"}}>\r\n        <ProfileButtons temp={filteredSearch} listToRender={listToRender} setListToRender={setListToRender}/>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n        <ProfileList temp={getItemsToRender()} data={data} item={item} pageNumber={pageNumber} filteredSearch={filteredSearch}/>\r\n        <Total pageNumber={pageNumber} setPageNumber={setPageNumber} profile={item} listToRender={listToRender}/>\r\n      </div>\r\n      {/* <FocusedList focused={focused} setFocused={setFocused} data={data} item={item} filteredSearch={filteredSearch}/> */}\r\n    </div>\r\n  );\r\n};  "]},"metadata":{},"sourceType":"module"}