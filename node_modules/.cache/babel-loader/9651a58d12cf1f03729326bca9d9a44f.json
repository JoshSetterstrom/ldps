{"ast":null,"code":"export default function getSearch(string, listToRender, profileData) {\n  let returnedObject = {};\n  console.log(listToRender.map(listItem => {\n    return {\n      [listItem]: (() => {\n        return profileData[listItem].filter(list => {\n          let bool = list.some(item => {\n            let cleanItem = item['data'].toString().toLowerCase();\n            let cleanString = string.target.value.toLowerCase();\n            if (cleanItem.includes(cleanString)) return true;else return false;\n          });\n          return bool;\n        });\n      })()\n    };\n  }));\n  listToRender.forEach(listItem => {\n    var _profileData$listItem;\n\n    let returnedList = [];\n    listItem = listItem.toLowerCase();\n    (_profileData$listItem = profileData[listItem]) === null || _profileData$listItem === void 0 ? void 0 : _profileData$listItem.forEach(object => {\n      for (let i in object) {\n        if (object[i]['data'].toString().toLowerCase().includes(string.target.value.toLowerCase())) {\n          returnedList.push(object);\n          break;\n        }\n      }\n    });\n    returnedObject[listItem] = returnedList;\n  });\n  return returnedObject;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/api/getSearch.js"],"names":["getSearch","string","listToRender","profileData","returnedObject","console","log","map","listItem","filter","list","bool","some","item","cleanItem","toString","toLowerCase","cleanString","target","value","includes","forEach","returnedList","object","i","push"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,WAAzC,EAAsD;AACnE,MAAIC,cAAc,GAAG,EAArB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACK,GAAb,CAAiBC,QAAQ,IAAI;AACvC,WAAO;AACL,OAACA,QAAD,GAAY,CAAC,MAAM;AACjB,eAAOL,WAAW,CAACK,QAAD,CAAX,CAAsBC,MAAtB,CAA6BC,IAAI,IAAI;AACxC,cAAIC,IAAI,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAI,IAAI;AAC7B,gBAAIC,SAAS,GAAKD,IAAI,CAAC,MAAD,CAAJ,CAAaE,QAAb,GAAwBC,WAAxB,EAAlB;AACA,gBAAIC,WAAW,GAAGhB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBH,WAApB,EAAlB;AAEA,gBAAIF,SAAS,CAACM,QAAV,CAAmBH,WAAnB,CAAJ,EAAqC,OAAO,IAAP,CAArC,KACK,OAAO,KAAP;AACN,WANY,CAAX;AAQF,iBAAON,IAAP;AACD,SAVM,CAAP;AAUG,OAXO;AADP,KAAP;AAcD,GAfW,CAAZ;AAiBAT,EAAAA,YAAY,CAACmB,OAAb,CAAsBb,QAAD,IAAc;AAAA;;AACjC,QAAIc,YAAY,GAAG,EAAnB;AACAd,IAAAA,QAAQ,GAAGA,QAAQ,CAACQ,WAAT,EAAX;AAEA,6BAAAb,WAAW,CAACK,QAAD,CAAX,gFAAuBa,OAAvB,CAA+BE,MAAM,IAAI;AACvC,WAAK,IAAIC,CAAT,IAAcD,MAAd,EAAsB;AACpB,YAAIA,MAAM,CAACC,CAAD,CAAN,CAAU,MAAV,EAAkBT,QAAlB,GAA6BC,WAA7B,GAA2CI,QAA3C,CAAoDnB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBH,WAApB,EAApD,CAAJ,EAA4F;AAC1FM,UAAAA,YAAY,CAACG,IAAb,CAAkBF,MAAlB;AACA;AACD;AACF;AACF,KAPD;AASAnB,IAAAA,cAAc,CAACI,QAAD,CAAd,GAA2Bc,YAA3B;AACD,GAdD;AAgBA,SAAOlB,cAAP;AACD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n  let returnedObject = {}\r\n\r\n  console.log(listToRender.map(listItem => {\r\n    return {\r\n      [listItem]: (() => {\r\n        return profileData[listItem].filter(list => {\r\n            let bool = list.some(item => {\r\n            let cleanItem   = item['data'].toString().toLowerCase()\r\n            let cleanString = string.target.value.toLowerCase()\r\n    \r\n            if (cleanItem.includes(cleanString)) return true\r\n            else return false\r\n          })\r\n    \r\n          return bool\r\n        })})()\r\n      }\r\n  }))\r\n  \r\n  listToRender.forEach((listItem) => {\r\n    let returnedList = []\r\n    listItem = listItem.toLowerCase()\r\n\r\n    profileData[listItem]?.forEach(object => {\r\n      for (let i in object) {\r\n        if (object[i]['data'].toString().toLowerCase().includes(string.target.value.toLowerCase())) {\r\n          returnedList.push(object)\r\n          break\r\n        }\r\n      }\r\n    })\r\n\r\n    returnedObject[listItem] = returnedList\r\n  })\r\n\r\n  return returnedObject\r\n}"]},"metadata":{},"sourceType":"module"}