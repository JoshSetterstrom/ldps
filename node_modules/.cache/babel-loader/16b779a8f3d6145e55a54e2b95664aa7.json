{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\LDREACT\\\\src\\\\common\\\\searchList\\\\searchList.jsx\";\nimport { React, useState, useEffect } from 'react';\nimport * as __data from \"./searchListData\";\nimport * as style from \"../../css/light/searchList\"; // import FocusedList from './focusedList';\n\nimport getItem from './getItem';\nimport getTotalCount from './getTotalCount';\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport getDidData from \"./getDidData\";\nimport getSearch from './getSearch';\nimport getFilteredSearch from './getFilteredSearch';\nimport ProfileList from \"./profileList\";\nimport Total from \"./total\";\nimport ProfileButtons from \"./profileButtons\"; // let filteredSearch = {\n//   \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \n//   \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\n//   \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList() {\n  // const [data, setData] = useState(__data['default'])\n  // const [item, setItem] = useState(getItem(filteredSearch))\n  // // const [focused, setFocused] = useState([])\n  // const [pageNumber, setPageNumber] = useState(10)\n  // const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"])\n  // useEffect(() => {\n  //   setData(getTotalCount(filteredSearch, data))\n  // }, [data])\n  // const handleInputChange = string => {\n  //   let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\n  //   filteredSearch = getFilteredSearch(search)\n  //   setItem(getItem(filteredSearch))\n  //   setData(getTotalCount(filteredSearch, data, listToRender))\n  // }\n  // const handleFocus = (e, type, id, assoc) => {\n  //   if (e.target.style.cursor !== \"pointer\") return\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\n  //   setFocused(newFocused)\n  // }\n  // const getItemsToRender = () => {\n  //   let temp = {}\n  //   for (let i in listToRender) {\n  //     if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\n  //     else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\n  //   }\n  //   return temp\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/searchList.jsx"],"names":["React","useState","useEffect","__data","style","getItem","getTotalCount","getDeviceData","getUserData","getDidData","getSearch","getFilteredSearch","ProfileList","Total","ProfileButtons","SearchList"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,4BAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KA9CuBA,U;AA8CvB","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport * as __data from \"./searchListData\"\r\nimport * as style from \"../../css/light/searchList\";\r\n// import FocusedList from './focusedList';\r\nimport getItem from './getItem';\r\nimport getTotalCount from './getTotalCount';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport getSearch from './getSearch';\r\nimport getFilteredSearch from './getFilteredSearch';\r\nimport ProfileList from \"./profileList\"\r\nimport Total from \"./total\"\r\nimport ProfileButtons from \"./profileButtons\"\r\n\r\n// let filteredSearch = {\r\n//   \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \r\n//   \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\r\n//   \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\r\n// }\r\n\r\nexport default function SearchList() {\r\n  // const [data, setData] = useState(__data['default'])\r\n  // const [item, setItem] = useState(getItem(filteredSearch))\r\n  // // const [focused, setFocused] = useState([])\r\n  // const [pageNumber, setPageNumber] = useState(10)\r\n  // const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"])\r\n  \r\n  // useEffect(() => {\r\n  //   setData(getTotalCount(filteredSearch, data))\r\n  // }, [data])\r\n\r\n  // const handleInputChange = string => {\r\n  //   let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\r\n  //   filteredSearch = getFilteredSearch(search)\r\n  //   setItem(getItem(filteredSearch))\r\n  //   setData(getTotalCount(filteredSearch, data, listToRender))\r\n  // }\r\n\r\n  // const handleFocus = (e, type, id, assoc) => {\r\n  //   if (e.target.style.cursor !== \"pointer\") return\r\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n  //   setFocused(newFocused)\r\n  // }\r\n\r\n  // const getItemsToRender = () => {\r\n  //   let temp = {}\r\n\r\n  //   for (let i in listToRender) {\r\n  //     if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\r\n  //     else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\r\n  //   }\r\n  //   return temp\r\n  // }\r\n    \r\n  return (\r\n    <div>\r\n      {/* <div style={{maxWidth: \"63.5vw\"}}>\r\n        <ProfileButtons temp={filteredSearch} listToRender={listToRender} setListToRender={setListToRender}/>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n        <ProfileList temp={getItemsToRender()} data={data} item={item} pageNumber={pageNumber} filteredSearch={filteredSearch}/>\r\n        <Total pageNumber={pageNumber} setPageNumber={setPageNumber} profile={item} listToRender={listToRender}/>\r\n      </div> */}\r\n      {/* <FocusedList focused={focused} setFocused={setFocused} data={data} item={item} filteredSearch={filteredSearch}/> */}\r\n    </div>\r\n  );\r\n};  "]},"metadata":{},"sourceType":"module"}