{"ast":null,"code":"import * as style from \"../../css/searchList\";\nexport default function handleSearchTypeChange(data, ret = ['Device', 'User', 'DID', 'borderWidth']) {\n  data = data['default']['display'];\n  let displayStyle = \"\";\n  let display = \"\";\n  ret.forEach(e => {\n    //   if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\n    //   }\n    // })\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\n      return [displayStyle = {\n        \"device\": style.searchTypeDeviceStyleHighlight,\n        \"user\": style.searchTypeUserStyle,\n        \"did\": style.searchTypeDidStyle\n      }, display = {\n        \"device\": true,\n        \"user\": false,\n        \"did\": false\n      }];\n    }\n\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\n      return [displayStyle = {\n        \"device\": style.searchTypeDeviceStyle,\n        \"user\": style.searchTypeUserStyleHighlight,\n        \"did\": style.searchTypeDidStyle\n      }, display = {\n        \"device\": false,\n        \"user\": true,\n        \"did\": false\n      }];\n    }\n\n    if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {\n      return [displayStyle = {\n        \"device\": style.searchTypeDeviceStyle,\n        \"user\": style.searchTypeUserStyle,\n        \"did\": style.searchTypeDidStyleHighlight\n      }, display = {\n        \"device\": false,\n        \"user\": false,\n        \"did\": true\n      }];\n    }\n\n    if (e.target.style[\"borderWidth\"]) {\n      return [displayStyle = {\n        \"device\": style.searchTypeDeviceStyle,\n        \"user\": style.searchTypeUserStyle,\n        \"did\": style.searchTypeDidStyle\n      }, display = {\n        \"device\": true,\n        \"user\": true,\n        \"did\": true\n      }];\n    }\n  });\n  return [displayStyle, display];\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/handleSearchTypeChange.jsx"],"names":["style","handleSearchTypeChange","data","ret","displayStyle","display","forEach","e","target","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyle","searchTypeDidStyle","searchTypeDeviceStyle","searchTypeUserStyleHighlight","searchTypeDidStyleHighlight"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,aAA1B,CAA1C,EAAoF;AACjGD,EAAAA,IAAI,GAAGA,IAAI,CAAC,SAAD,CAAJ,CAAgB,SAAhB,CAAP;AACA,MAAIE,YAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG,EAAd;AAEAF,EAAAA,GAAG,CAACG,OAAJ,CAAYC,CAAC,IAAI;AACjB;AAEA;AACA;AAEE,QAAIA,CAAC,CAACC,MAAF,CAASC,WAAT,KAAyB,QAAzB,IAAqC,CAACF,CAAC,CAACC,MAAF,CAASR,KAAT,CAAe,aAAf,CAA1C,EAAyE;AACvE,aAAQ,CACNI,YAAY,GAAI;AAAC,kBAAUJ,KAAK,CAACU,8BAAjB;AAAiD,gBAAQV,KAAK,CAACW,mBAA/D;AAAoF,eAAOX,KAAK,CAACY;AAAjG,OADV,EAENP,OAAO,GAAI;AAAC,kBAAU,IAAX;AAAiB,gBAAQ,KAAzB;AAAgC,eAAO;AAAvC,OAFL,CAAR;AAID;;AAED,QAAIE,CAAC,CAACC,MAAF,CAASC,WAAT,KAAyB,MAAzB,IAAmC,CAACF,CAAC,CAACC,MAAF,CAASR,KAAT,CAAe,aAAf,CAAxC,EAAuE;AACrE,aAAQ,CACNI,YAAY,GAAI;AAAC,kBAAUJ,KAAK,CAACa,qBAAjB;AAAwC,gBAAQb,KAAK,CAACc,4BAAtD;AAAoF,eAAOd,KAAK,CAACY;AAAjG,OADV,EAENP,OAAO,GAAI;AAAC,kBAAU,KAAX;AAAkB,gBAAQ,IAA1B;AAAgC,eAAO;AAAvC,OAFL,CAAR;AAID;;AAED,QAAIE,CAAC,CAACC,MAAF,CAASC,WAAT,KAAyB,KAAzB,IAAkC,CAACF,CAAC,CAACC,MAAF,CAASR,KAAT,CAAe,aAAf,CAAvC,EAAsE;AACpE,aAAQ,CACNI,YAAY,GAAI;AAAC,kBAAUJ,KAAK,CAACa,qBAAjB;AAAwC,gBAAQb,KAAK,CAACW,mBAAtD;AAA2E,eAAOX,KAAK,CAACe;AAAxF,OADV,EAENV,OAAO,GAAI;AAAC,kBAAU,KAAX;AAAkB,gBAAQ,KAA1B;AAAiC,eAAO;AAAxC,OAFL,CAAR;AAID;;AAED,QAAIE,CAAC,CAACC,MAAF,CAASR,KAAT,CAAe,aAAf,CAAJ,EAAmC;AACjC,aAAQ,CACNI,YAAY,GAAI;AAAC,kBAAUJ,KAAK,CAACa,qBAAjB;AAAwC,gBAAQb,KAAK,CAACW,mBAAtD;AAA2E,eAAOX,KAAK,CAACY;AAAxF,OADV,EAENP,OAAO,GAAI;AAAC,kBAAU,IAAX;AAAiB,gBAAQ,IAAzB;AAA+B,eAAO;AAAtC,OAFL,CAAR;AAID;AACF,GAjCD;AAkCA,SAAO,CAACD,YAAD,EAAeC,OAAf,CAAP;AACD","sourcesContent":["import * as style from \"../../css/searchList\";\r\n\r\nexport default function handleSearchTypeChange(data, ret=['Device', 'User', 'DID', 'borderWidth']) {\r\n  data = data['default']['display']\r\n  let displayStyle = \"\"\r\n  let display = \"\"\r\n\r\n  ret.forEach(e => {\r\n  //   if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\r\n      \r\n  //   }\r\n  // })\r\n\r\n    if (e.target.textContent === \"Device\" && !e.target.style[\"borderWidth\"]) {\r\n      return ([\r\n        displayStyle = ({\"device\": style.searchTypeDeviceStyleHighlight, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n        display = ({\"device\": true, \"user\": false, \"did\": false})\r\n      ])\r\n    }\r\n\r\n    if (e.target.textContent === \"User\" && !e.target.style[\"borderWidth\"]) {\r\n      return ([\r\n        displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyleHighlight, \"did\": style.searchTypeDidStyle}),\r\n        display = ({\"device\": false, \"user\": true, \"did\": false})\r\n      ])\r\n    }\r\n\r\n    if (e.target.textContent === \"DID\" && !e.target.style[\"borderWidth\"]) {  \r\n      return ([\r\n        displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyleHighlight}),\r\n        display = ({\"device\": false, \"user\": false, \"did\": true})\r\n      ])\r\n    }\r\n\r\n    if (e.target.style[\"borderWidth\"]) {\r\n      return ([\r\n        displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n        display = ({\"device\": true, \"user\": true, \"did\": true})\r\n      ])\r\n    }\r\n  })\r\n  return [displayStyle, display]\r\n}"]},"metadata":{},"sourceType":"module"}