{"ast":null,"code":"import returnSearch from \"./returnSearch\";\nexport default function getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch, ret = ['Device', 'User', 'Did']) {\n  let temp = {};\n  ret.forEach(e => {\n    switch (e) {\n      case \"Device\":\n        temp[e.toLowerCase()] = returnSearch(getDeviceData, string.target.value.toLowerCase(), filteredSearch.device.results);\n        break;\n\n      case \"User\":\n        temp[e.toLowerCase()] = returnSearch(getUserData, string.target.value.toLowerCase(), filteredSearch.user.results);\n        break;\n\n      case \"Did\":\n        temp[e.toLowerCase()] = returnSearch(getDidData, string.target.value.toLowerCase(), filteredSearch.did.results);\n        break;\n\n      default:\n        break;\n    }\n  });\n  return temp;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/getSearch.js"],"names":["returnSearch","getSearch","getDeviceData","getUserData","getDidData","string","filteredSearch","ret","temp","forEach","e","toLowerCase","target","value","device","results","user","did"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,SAAT,CAAmBC,aAAnB,EAAkCC,WAAlC,EAA+CC,UAA/C,EAA2DC,MAA3D,EAAmEC,cAAnE,EAAmFC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,CAAvF,EAAkH;AAC/H,MAAIC,IAAI,GAAG,EAAX;AAEAD,EAAAA,GAAG,CAACE,OAAJ,CAAYC,CAAC,IAAI;AACf,YAAOA,CAAP;AACE,WAAK,QAAL;AACEF,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACE,aAAD,EAAgBG,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAAhB,EAAmDL,cAAc,CAACQ,MAAf,CAAsBC,OAAzE,CAApC;AACA;;AACF,WAAK,MAAL;AACEP,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACG,WAAD,EAAcE,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAAd,EAAiDL,cAAc,CAACU,IAAf,CAAoBD,OAArE,CAApC;AACA;;AACF,WAAK,KAAL;AACEP,QAAAA,IAAI,CAACE,CAAC,CAACC,WAAF,EAAD,CAAJ,GAAwBX,YAAY,CAACI,UAAD,EAAaC,MAAM,CAACO,MAAP,CAAcC,KAAd,CAAoBF,WAApB,EAAb,EAAgDL,cAAc,CAACW,GAAf,CAAmBF,OAAnE,CAApC;AACA;;AACF;AAAS;AAVX;AAaD,GAdD;AAeA,SAAOP,IAAP;AACD","sourcesContent":["import returnSearch from \"./returnSearch\"\r\n\r\nexport default function getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch, ret=['Device', 'User', 'Did']) {\r\n  let temp = {}\r\n\r\n  ret.forEach(e => {\r\n    switch(e) {\r\n      case \"Device\":\r\n        temp[e.toLowerCase()] = returnSearch(getDeviceData, string.target.value.toLowerCase(), filteredSearch.device.results); \r\n        break\r\n      case \"User\": \r\n        temp[e.toLowerCase()] = returnSearch(getUserData, string.target.value.toLowerCase(), filteredSearch.user.results); \r\n        break\r\n      case \"Did\": \r\n        temp[e.toLowerCase()] = returnSearch(getDidData, string.target.value.toLowerCase(), filteredSearch.did.results); \r\n        break\r\n      default: break\r\n    } \r\n\r\n  })\r\n  return temp\r\n}"]},"metadata":{},"sourceType":"module"}