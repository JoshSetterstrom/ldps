{"ast":null,"code":"import profiles from \"../data/profileList.json\";\nexport default function getDeviceData() {\n  let profileList = [];\n  profiles['devices'].forEach((device, i) => {\n    try {\n      const data = require(`../data/devices/${device}.json`);\n\n      profileList.push([{\n        type: \"mac\",\n        index: \"MAC Address\",\n        data: function () {\n          try {\n            return !data.data.name.toUpperCase() ? \"\" : data.data.name.toUpperCase();\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"product\",\n        index: \"Product\",\n        data: function () {\n          try {\n            return !data.data.product ? \"\" : data.data.product;\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"user\",\n        index: \"User ID\",\n        data: function () {\n          try {\n            return !data.data.ownerUserName ? \"\" : data.data.ownerUserName;\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"description\",\n        index: \"Description\",\n        data: function () {\n          try {\n            return !data.data.description ? \"\" : data.data.description;\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"primary\",\n        index: \"Primary Line\",\n        data: function () {\n          try {\n            return !data.data.lines.line[0].dirn.pattern ? \"\" : data.data.lines.line[0].dirn.pattern;\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"mask\",\n        index: \"E164 Mask\",\n        data: function () {\n          try {\n            return !data.data.lines.line[0].e164Mask ? \"\" : data.data.lines.line[0].e164Mask;\n          } catch {\n            return \"\";\n          }\n        }()\n      }, {\n        type: \"location\",\n        index: \"Location\",\n        data: function () {\n          try {\n            return !data.meta.hierarchy.split(\"_\").pop() ? \"\" : data.meta.hierarchy.split(\"_\").pop();\n          } catch {\n            return \"\";\n          }\n        }()\n      }]);\n    } catch {\n      /*pass*/\n    }\n  });\n  return profileList;\n}\n;","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDeviceData.js"],"names":["profiles","getDeviceData","profileList","forEach","device","i","data","require","push","type","index","name","toUpperCase","product","ownerUserName","description","lines","line","dirn","pattern","e164Mask","meta","hierarchy","split","pop"],"mappings":"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","sourcesContent":["import profiles from \"../data/profileList.json\";\r\n\r\nexport default function getDeviceData() {\r\n  let profileList = [];\r\n\r\n  profiles['devices'].forEach((device, i) => {\r\n    try {\r\n      const data = require(`../data/devices/${device}.json`);\r\n  \r\n      profileList.push([\r\n        {\r\n          type: \"mac\",\r\n          index: \"MAC Address\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.name.toUpperCase() \r\n              ? \"\"\r\n              : data.data.name.toUpperCase() \r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"product\",\r\n          index: \"Product\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.product\r\n              ? \"\"\r\n              : data.data.product\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"user\",\r\n          index: \"User ID\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.ownerUserName\r\n              ? \"\"\r\n              : data.data.ownerUserName\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"description\",\r\n          index: \"Description\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.description\r\n              ? \"\"\r\n              : data.data.description\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"primary\",\r\n          index: \"Primary Line\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.lines.line[0].dirn.pattern\r\n              ? \"\"\r\n              : data.data.lines.line[0].dirn.pattern\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"mask\",\r\n          index: \"E164 Mask\",\r\n          data: function() {\r\n            try {\r\n              return !data.data.lines.line[0].e164Mask\r\n              ? \"\"\r\n              : data.data.lines.line[0].e164Mask\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        },\r\n        {\r\n          type: \"location\",\r\n          index: \"Location\",\r\n          data: function() {\r\n            try {\r\n              return !data.meta.hierarchy.split(\"_\").pop()\r\n              ? \"\"\r\n              : data.meta.hierarchy.split(\"_\").pop()\r\n            } \r\n            catch {return \"\"}\r\n          }()\r\n        }\r\n      ]);\r\n\r\n    }\r\n    catch {/*pass*/}\r\n  });\r\n\r\n  return profileList;\r\n};"]},"metadata":{},"sourceType":"module"}