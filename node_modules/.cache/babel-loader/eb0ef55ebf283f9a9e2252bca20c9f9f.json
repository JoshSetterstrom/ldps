{"ast":null,"code":"export default function getSearch(string, listToRender, profileData) {\n  let returnedObject = {};\n  listToRender.forEach(listItem => {\n    var _profileData$listItem;\n\n    listItem = listItem.toLowerCase();\n    let returnedList = [];\n    (_profileData$listItem = profileData[listItem]) === null || _profileData$listItem === void 0 ? void 0 : _profileData$listItem.forEach(value => {\n      let cleanArray = value.slice(1, Object.keys(value).at(-1));\n\n      for (let i in cleanArray) {\n        if (cleanArray[i]['data'].toLowerCase().includes(string.target.value.toLowerCase())) {\n          returnedList.push(value);\n          break;\n        }\n      }\n    });\n    returnedObject[listItem] = returnedList;\n  });\n  return returnedObject;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getSearch.js"],"names":["getSearch","string","listToRender","profileData","returnedObject","forEach","listItem","toLowerCase","returnedList","value","cleanArray","slice","Object","keys","at","i","includes","target","push"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,YAA3B,EAAyCC,WAAzC,EAAsD;AACnE,MAAIC,cAAc,GAAG,EAArB;AAEAF,EAAAA,YAAY,CAACG,OAAb,CAAsBC,QAAD,IAAc;AAAA;;AACjCA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,WAAT,EAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;AAEA,6BAAAL,WAAW,CAACG,QAAD,CAAX,gFAAuBD,OAAvB,CAA+BI,KAAK,IAAI;AACtC,UAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,EAAnB,CAAsB,CAAC,CAAvB,CAAf,CAAjB;;AACA,WAAK,IAAIC,CAAT,IAAcL,UAAd,EAA0B;AACxB,YAAIA,UAAU,CAACK,CAAD,CAAV,CAAc,MAAd,EAAsBR,WAAtB,GAAoCS,QAApC,CAA6Cf,MAAM,CAACgB,MAAP,CAAcR,KAAd,CAAoBF,WAApB,EAA7C,CAAJ,EAAqF;AACnFC,UAAAA,YAAY,CAACU,IAAb,CAAkBT,KAAlB;AACA;AACD;AACF;AACF,KARD;AASAL,IAAAA,cAAc,CAACE,QAAD,CAAd,GAA2BE,YAA3B;AACD,GAdD;AAgBA,SAAOJ,cAAP;AACD","sourcesContent":["export default function getSearch(string, listToRender, profileData) {\r\n  let returnedObject = {}\r\n\r\n  listToRender.forEach((listItem) => {\r\n    listItem = listItem.toLowerCase()\r\n    let returnedList = []\r\n\r\n    profileData[listItem]?.forEach(value => {\r\n      let cleanArray = value.slice(1, Object.keys(value).at(-1))\r\n      for (let i in cleanArray) {\r\n        if (cleanArray[i]['data'].toLowerCase().includes(string.target.value.toLowerCase())) {\r\n          returnedList.push(value)\r\n          break\r\n        }\r\n      }\r\n    })\r\n    returnedObject[listItem] = returnedList\r\n  })\r\n\r\n  return returnedObject\r\n}"]},"metadata":{},"sourceType":"module"}