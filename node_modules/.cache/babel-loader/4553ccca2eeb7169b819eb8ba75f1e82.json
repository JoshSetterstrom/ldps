{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useMemo, useState } from 'react';\nimport * as style from \"../../css/light/searchList\";\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\nimport getUserData from \"../dataRetrieval/getUserData\";\nimport getDidData from \"./getDidData\";\nimport getSearch from '../dataRetrieval/getSearch';\nimport ProfileList from \"../profileList/profileList\";\nimport Total from \"../total/total\";\nimport ProfileButtons from \"../profileButtons/profileButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchList() {\n  _s();\n\n  const profileData = useMemo(() => {\n    return {\n      \"device\": getDeviceData(),\n      \"user\": getUserData()\n    };\n  }, []);\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\"]);\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleInputChange = string => {\n    setUserInput(string.target.value.toLowerCase());\n    setProfileDataToRender(getSearch(string, listToRender, profileData));\n  }; // const handleFocus = (e, type, id, assoc) => {\n  //   if (e.target.style.cursor !== \"pointer\") return\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\n  //   setFocused(newFocused)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"63.5vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n        profileData: profileData,\n        listToRender: listToRender,\n        setListToRender: setListToRender,\n        userInput: userInput,\n        setProfileDataToRender: setProfileDataToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProfileList, {\n        listToRender: listToRender,\n        profileDataToRender: profileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        totalToRenderNumber: totalToRenderNumber,\n        setTotalToRenderNumber: setTotalToRenderNumber,\n        profileDataToRender: profileDataToRender,\n        listToRender: listToRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"+siPNHzW4me4ee1EH6SEcnCGG0c=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/searchList.jsx"],"names":["React","useMemo","useState","style","getDeviceData","getUserData","getDidData","getSearch","ProfileList","Total","ProfileButtons","SearchList","profileData","listToRender","setListToRender","profileDataToRender","setProfileDataToRender","totalToRenderNumber","setTotalToRenderNumber","userInput","setUserInput","handleInputChange","string","target","value","toLowerCase","maxWidth","searchInputStyle","e"],"mappings":";;;AAAA,SAAQA,KAAR,EAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAO,KAAKC,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,WAAW,GAAGX,OAAO,CAAC,MAAM;AAAC,WAAO;AAAC,gBAAUG,aAAa,EAAxB;AAA4B,cAAQC,WAAW;AAA/C,KAAP;AAA0D,GAAlE,EAAoE,EAApE,CAA3B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAC,QAAD,EAAW,MAAX,CAAD,CAAhD;AACA,QAAM,CAACa,mBAAD,EAAsBC,sBAAtB,IAAgDd,QAAQ,CAACU,WAAD,CAA9D;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDhB,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMmB,iBAAiB,GAAGC,MAAM,IAAI;AAClCF,IAAAA,YAAY,CAACE,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAoBC,WAApB,EAAD,CAAZ;AACAT,IAAAA,sBAAsB,CAACT,SAAS,CAACe,MAAD,EAAST,YAAT,EAAuBD,WAAvB,CAAV,CAAtB;AACD,GAHD,CAPmC,CAYnC;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAACc,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,WAAW,EAAEd,WAA7B;AAA0C,QAAA,YAAY,EAAEC,YAAxD;AAAsE,QAAA,eAAe,EAAEC,eAAvF;AAAwG,QAAA,SAAS,EAAEK,SAAnH;AAA8H,QAAA,sBAAsB,EAAEH;AAAtJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEb,KAAK,CAACwB,gBAApB;AAAsC,QAAA,QAAQ,EAAEC,CAAC,IAAIP,iBAAiB,CAACO,CAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAEf,YAA3B;AAAyC,QAAA,mBAAmB,EAAEE,mBAA9D;AAAmF,QAAA,mBAAmB,EAAEE;AAAxG;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,mBAAmB,EAAEA,mBAA5B;AAAiD,QAAA,sBAAsB,EAAEC,sBAAzE;AAAiG,QAAA,mBAAmB,EAAEH,mBAAtH;AAA2I,QAAA,YAAY,EAAEF;AAAzJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BuBF,U;;KAAAA,U;AA8BvB","sourcesContent":["import {React, useMemo, useState} from 'react';\r\nimport * as style from \"../../css/light/searchList\";\r\nimport getDeviceData from \"../dataRetrieval/getDeviceData\";\r\nimport getUserData from \"../dataRetrieval/getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport getSearch from '../dataRetrieval/getSearch';\r\nimport ProfileList from \"../profileList/profileList\"\r\nimport Total from \"../total/total\"\r\nimport ProfileButtons from \"../profileButtons/profileButtons\"\r\n\r\nexport default function SearchList() {\r\n  const profileData = useMemo(() => {return {\"device\": getDeviceData(), \"user\": getUserData()}}, [])\r\n  const [listToRender, setListToRender] = useState([\"Device\", \"User\"])\r\n  const [profileDataToRender, setProfileDataToRender] = useState(profileData)\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(50)\r\n  const [userInput, setUserInput] = useState(\"\")\r\n\r\n  const handleInputChange = string => {\r\n    setUserInput(string.target.value.toLowerCase())\r\n    setProfileDataToRender(getSearch(string, listToRender, profileData))\r\n  }\r\n\r\n  // const handleFocus = (e, type, id, assoc) => {\r\n  //   if (e.target.style.cursor !== \"pointer\") return\r\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n  //   setFocused(newFocused)\r\n  // }\r\n    \r\n  return (\r\n    <div>\r\n      <div style={{maxWidth: \"63.5vw\"}}>\r\n        <ProfileButtons profileData={profileData} listToRender={listToRender} setListToRender={setListToRender} userInput={userInput} setProfileDataToRender={setProfileDataToRender}/>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n        <ProfileList listToRender={listToRender} profileDataToRender={profileDataToRender} totalToRenderNumber={totalToRenderNumber}/>\r\n        <Total totalToRenderNumber={totalToRenderNumber} setTotalToRenderNumber={setTotalToRenderNumber} profileDataToRender={profileDataToRender} listToRender={listToRender}/>\r\n      </div>\r\n      {/* <FocusedList focused={focused} setFocused={setFocused} data={data} item={item} filteredSearch={filteredSearch}/> */}\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}