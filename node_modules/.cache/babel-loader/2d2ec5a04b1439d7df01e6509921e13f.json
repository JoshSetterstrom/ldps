{"ast":null,"code":"var BSONExtModule = require('bindings')('bson').BSON;\n\nvar BSONJS = require('bson');\n\nconst BSON = new BSONExtModule([BSONJS.Binary, BSONJS.Code, BSONJS.DBRef, BSONJS.Decimal128, BSONJS.Double, BSONJS.Int32, BSONJS.Long, BSONJS.Map, BSONJS.MaxKey, BSONJS.MinKey, BSONJS.ObjectId, BSONJS.BSONRegExp, BSONJS.BSONSymbol, BSONJS.Timestamp]);\nmodule.exports = Object.create(null);\nmodule.exports.BSON_INT32_MAX = 0x7fffffff;\nmodule.exports.BSON_INT32_MIN = -0x80000000;\nmodule.exports.BSON_INT64_MAX = BSONJS.Long.MAX_VALUE;\nmodule.exports.BSON_INT64_MIN = BSONJS.Long.MIN_VALUE;\nmodule.exports.JS_INT_MAX = Number.MAX_SAFE_INTEGER;\nmodule.exports.JS_INT_MIN = Number.MIN_SAFE_INTEGER; // Just add constants to the Native BSON parser\n\nmodule.exports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nmodule.exports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\nmodule.exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\nmodule.exports.BSON_BINARY_SUBTYPE_UUID = 3;\nmodule.exports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\nmodule.exports.BSON_BINARY_SUBTYPE_MD5 = 5;\nmodule.exports.BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\nmodule.exports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n/** @type {import('bson').Binary} */\n\nmodule.exports.Binary = BSONJS.Binary;\n/** @type {import('bson').Code} */\n\nmodule.exports.Code = BSONJS.Code;\n/** @type {import('bson').DBRef} */\n\nmodule.exports.DBRef = BSONJS.DBRef;\n/** @type {import('bson').Decimal128} */\n\nmodule.exports.Decimal128 = BSONJS.Decimal128;\n/** @type {import('bson').Double} */\n\nmodule.exports.Double = BSONJS.Double;\n/** @type {import('bson').Int32} */\n\nmodule.exports.Int32 = BSONJS.Int32;\n/** @type {import('bson').Long} */\n\nmodule.exports.Long = BSONJS.Long;\n/** @type {import('bson').Map} */\n\nmodule.exports.Map = BSONJS.Map;\n/** @type {import('bson').MaxKey} */\n\nmodule.exports.MaxKey = BSONJS.MaxKey;\n/** @type {import('bson').MinKey} */\n\nmodule.exports.MinKey = BSONJS.MinKey;\n/** @type {import('bson').ObjectId} */\n\nmodule.exports.ObjectId = BSONJS.ObjectId;\n/** @type {import('bson').BSONRegExp} */\n\nmodule.exports.BSONRegExp = BSONJS.BSONRegExp;\n/** @type {import('bson').BSONSymbol} */\n\nmodule.exports.BSONSymbol = BSONJS.BSONSymbol;\n/** @type {import('bson').Timestamp} */\n\nmodule.exports.Timestamp = BSONJS.Timestamp; // special case for deprecated names\n\n/** @type {import('bson').ObjectId} */\n\nmodule.exports.ObjectID = BSONJS.ObjectId;\n/** @type {import('bson').calculateObjectSize} */\n\nmodule.exports.calculateObjectSize = BSON.calculateObjectSize.bind(BSON);\n/** @type {import('bson').serialize} */\n\nmodule.exports.serialize = BSON.serialize.bind(BSON);\n/** @type {import('bson').serializeWithBufferAndIndex} */\n\nmodule.exports.serializeWithBufferAndIndex = BSON.serializeWithBufferAndIndex.bind(BSON);\n/** @type {import('bson').deserialize} */\n\nmodule.exports.deserialize = BSON.deserialize.bind(BSON);\n/** @type {import('bson').deserializeStream} */\n\nmodule.exports.deserializeStream = BSON.deserializeStream.bind(BSON);\nObject.freeze(module.exports);","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/node_modules/bson-ext/lib/index.js"],"names":["BSONExtModule","require","BSON","BSONJS","Binary","Code","DBRef","Decimal128","Double","Int32","Long","Map","MaxKey","MinKey","ObjectId","BSONRegExp","BSONSymbol","Timestamp","module","exports","Object","create","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","MAX_VALUE","BSON_INT64_MIN","MIN_VALUE","JS_INT_MAX","Number","MAX_SAFE_INTEGER","JS_INT_MIN","MIN_SAFE_INTEGER","BSON_BINARY_SUBTYPE_DEFAULT","BSON_BINARY_SUBTYPE_FUNCTION","BSON_BINARY_SUBTYPE_BYTE_ARRAY","BSON_BINARY_SUBTYPE_UUID","BSON_BINARY_SUBTYPE_UUID_NEW","BSON_BINARY_SUBTYPE_MD5","BSON_BINARY_SUBTYPE_ENCRYPTED","BSON_BINARY_SUBTYPE_USER_DEFINED","ObjectID","calculateObjectSize","bind","serialize","serializeWithBufferAndIndex","deserialize","deserializeStream","freeze"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoB,MAApB,EAA4BC,IAAhD;;AAEA,IAAIC,MAAM,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,IAAI,GAAG,IAAIF,aAAJ,CAAkB,CAC7BG,MAAM,CAACC,MADsB,EAE7BD,MAAM,CAACE,IAFsB,EAG7BF,MAAM,CAACG,KAHsB,EAI7BH,MAAM,CAACI,UAJsB,EAK7BJ,MAAM,CAACK,MALsB,EAM7BL,MAAM,CAACM,KANsB,EAO7BN,MAAM,CAACO,IAPsB,EAQ7BP,MAAM,CAACQ,GARsB,EAS7BR,MAAM,CAACS,MATsB,EAU7BT,MAAM,CAACU,MAVsB,EAW7BV,MAAM,CAACW,QAXsB,EAY7BX,MAAM,CAACY,UAZsB,EAa7BZ,MAAM,CAACa,UAbsB,EAc7Bb,MAAM,CAACc,SAdsB,CAAlB,CAAb;AAiBAC,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AAEAH,MAAM,CAACC,OAAP,CAAeG,cAAf,GAAgC,UAAhC;AACAJ,MAAM,CAACC,OAAP,CAAeI,cAAf,GAAgC,CAAC,UAAjC;AAEAL,MAAM,CAACC,OAAP,CAAeK,cAAf,GAAgCrB,MAAM,CAACO,IAAP,CAAYe,SAA5C;AACAP,MAAM,CAACC,OAAP,CAAeO,cAAf,GAAgCvB,MAAM,CAACO,IAAP,CAAYiB,SAA5C;AAEAT,MAAM,CAACC,OAAP,CAAeS,UAAf,GAA4BC,MAAM,CAACC,gBAAnC;AACAZ,MAAM,CAACC,OAAP,CAAeY,UAAf,GAA4BF,MAAM,CAACG,gBAAnC,C,CAEA;;AACAd,MAAM,CAACC,OAAP,CAAec,2BAAf,GAA6C,CAA7C;AACAf,MAAM,CAACC,OAAP,CAAee,4BAAf,GAA8C,CAA9C;AACAhB,MAAM,CAACC,OAAP,CAAegB,8BAAf,GAAgD,CAAhD;AACAjB,MAAM,CAACC,OAAP,CAAeiB,wBAAf,GAA0C,CAA1C;AACAlB,MAAM,CAACC,OAAP,CAAekB,4BAAf,GAA8C,CAA9C;AACAnB,MAAM,CAACC,OAAP,CAAemB,uBAAf,GAAyC,CAAzC;AACApB,MAAM,CAACC,OAAP,CAAeoB,6BAAf,GAA+C,CAA/C;AACArB,MAAM,CAACC,OAAP,CAAeqB,gCAAf,GAAkD,GAAlD;AAEA;;AACAtB,MAAM,CAACC,OAAP,CAAef,MAAf,GAAwBD,MAAM,CAACC,MAA/B;AACA;;AACAc,MAAM,CAACC,OAAP,CAAed,IAAf,GAAsBF,MAAM,CAACE,IAA7B;AACA;;AACAa,MAAM,CAACC,OAAP,CAAeb,KAAf,GAAuBH,MAAM,CAACG,KAA9B;AACA;;AACAY,MAAM,CAACC,OAAP,CAAeZ,UAAf,GAA4BJ,MAAM,CAACI,UAAnC;AACA;;AACAW,MAAM,CAACC,OAAP,CAAeX,MAAf,GAAwBL,MAAM,CAACK,MAA/B;AACA;;AACAU,MAAM,CAACC,OAAP,CAAeV,KAAf,GAAuBN,MAAM,CAACM,KAA9B;AACA;;AACAS,MAAM,CAACC,OAAP,CAAeT,IAAf,GAAsBP,MAAM,CAACO,IAA7B;AACA;;AACAQ,MAAM,CAACC,OAAP,CAAeR,GAAf,GAAqBR,MAAM,CAACQ,GAA5B;AACA;;AACAO,MAAM,CAACC,OAAP,CAAeP,MAAf,GAAwBT,MAAM,CAACS,MAA/B;AACA;;AACAM,MAAM,CAACC,OAAP,CAAeN,MAAf,GAAwBV,MAAM,CAACU,MAA/B;AACA;;AACAK,MAAM,CAACC,OAAP,CAAeL,QAAf,GAA0BX,MAAM,CAACW,QAAjC;AACA;;AACAI,MAAM,CAACC,OAAP,CAAeJ,UAAf,GAA4BZ,MAAM,CAACY,UAAnC;AACA;;AACAG,MAAM,CAACC,OAAP,CAAeH,UAAf,GAA4Bb,MAAM,CAACa,UAAnC;AACA;;AACAE,MAAM,CAACC,OAAP,CAAeF,SAAf,GAA2Bd,MAAM,CAACc,SAAlC,C,CAEA;;AACA;;AACAC,MAAM,CAACC,OAAP,CAAesB,QAAf,GAA0BtC,MAAM,CAACW,QAAjC;AAEA;;AACAI,MAAM,CAACC,OAAP,CAAeuB,mBAAf,GAAqCxC,IAAI,CAACwC,mBAAL,CAAyBC,IAAzB,CAA8BzC,IAA9B,CAArC;AACA;;AACAgB,MAAM,CAACC,OAAP,CAAeyB,SAAf,GAA2B1C,IAAI,CAAC0C,SAAL,CAAeD,IAAf,CAAoBzC,IAApB,CAA3B;AACA;;AACAgB,MAAM,CAACC,OAAP,CAAe0B,2BAAf,GAA6C3C,IAAI,CAAC2C,2BAAL,CAAiCF,IAAjC,CAAsCzC,IAAtC,CAA7C;AACA;;AACAgB,MAAM,CAACC,OAAP,CAAe2B,WAAf,GAA6B5C,IAAI,CAAC4C,WAAL,CAAiBH,IAAjB,CAAsBzC,IAAtB,CAA7B;AACA;;AACAgB,MAAM,CAACC,OAAP,CAAe4B,iBAAf,GAAmC7C,IAAI,CAAC6C,iBAAL,CAAuBJ,IAAvB,CAA4BzC,IAA5B,CAAnC;AAEAkB,MAAM,CAAC4B,MAAP,CAAc9B,MAAM,CAACC,OAArB","sourcesContent":["var BSONExtModule = require('bindings')('bson').BSON;\n\nvar BSONJS = require('bson');\n\nconst BSON = new BSONExtModule([\n  BSONJS.Binary,\n  BSONJS.Code,\n  BSONJS.DBRef,\n  BSONJS.Decimal128,\n  BSONJS.Double,\n  BSONJS.Int32,\n  BSONJS.Long,\n  BSONJS.Map,\n  BSONJS.MaxKey,\n  BSONJS.MinKey,\n  BSONJS.ObjectId,\n  BSONJS.BSONRegExp,\n  BSONJS.BSONSymbol,\n  BSONJS.Timestamp\n]);\n\nmodule.exports = Object.create(null);\n\nmodule.exports.BSON_INT32_MAX = 0x7fffffff;\nmodule.exports.BSON_INT32_MIN = -0x80000000;\n\nmodule.exports.BSON_INT64_MAX = BSONJS.Long.MAX_VALUE;\nmodule.exports.BSON_INT64_MIN = BSONJS.Long.MIN_VALUE;\n\nmodule.exports.JS_INT_MAX = Number.MAX_SAFE_INTEGER;\nmodule.exports.JS_INT_MIN = Number.MIN_SAFE_INTEGER;\n\n// Just add constants to the Native BSON parser\nmodule.exports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nmodule.exports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\nmodule.exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\nmodule.exports.BSON_BINARY_SUBTYPE_UUID = 3;\nmodule.exports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\nmodule.exports.BSON_BINARY_SUBTYPE_MD5 = 5;\nmodule.exports.BSON_BINARY_SUBTYPE_ENCRYPTED = 6;\nmodule.exports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n/** @type {import('bson').Binary} */\nmodule.exports.Binary = BSONJS.Binary;\n/** @type {import('bson').Code} */\nmodule.exports.Code = BSONJS.Code;\n/** @type {import('bson').DBRef} */\nmodule.exports.DBRef = BSONJS.DBRef;\n/** @type {import('bson').Decimal128} */\nmodule.exports.Decimal128 = BSONJS.Decimal128;\n/** @type {import('bson').Double} */\nmodule.exports.Double = BSONJS.Double;\n/** @type {import('bson').Int32} */\nmodule.exports.Int32 = BSONJS.Int32;\n/** @type {import('bson').Long} */\nmodule.exports.Long = BSONJS.Long;\n/** @type {import('bson').Map} */\nmodule.exports.Map = BSONJS.Map;\n/** @type {import('bson').MaxKey} */\nmodule.exports.MaxKey = BSONJS.MaxKey;\n/** @type {import('bson').MinKey} */\nmodule.exports.MinKey = BSONJS.MinKey;\n/** @type {import('bson').ObjectId} */\nmodule.exports.ObjectId = BSONJS.ObjectId;\n/** @type {import('bson').BSONRegExp} */\nmodule.exports.BSONRegExp = BSONJS.BSONRegExp;\n/** @type {import('bson').BSONSymbol} */\nmodule.exports.BSONSymbol = BSONJS.BSONSymbol;\n/** @type {import('bson').Timestamp} */\nmodule.exports.Timestamp = BSONJS.Timestamp;\n\n// special case for deprecated names\n/** @type {import('bson').ObjectId} */\nmodule.exports.ObjectID = BSONJS.ObjectId;\n\n/** @type {import('bson').calculateObjectSize} */\nmodule.exports.calculateObjectSize = BSON.calculateObjectSize.bind(BSON);\n/** @type {import('bson').serialize} */\nmodule.exports.serialize = BSON.serialize.bind(BSON);\n/** @type {import('bson').serializeWithBufferAndIndex} */\nmodule.exports.serializeWithBufferAndIndex = BSON.serializeWithBufferAndIndex.bind(BSON);\n/** @type {import('bson').deserialize} */\nmodule.exports.deserialize = BSON.deserialize.bind(BSON);\n/** @type {import('bson').deserializeStream} */\nmodule.exports.deserializeStream = BSON.deserializeStream.bind(BSON);\n\nObject.freeze(module.exports);\n"]},"metadata":{},"sourceType":"script"}