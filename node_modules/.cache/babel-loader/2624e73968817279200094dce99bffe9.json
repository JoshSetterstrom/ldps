{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focusedProfileContent.jsx\";\nimport editStyleEnter from \"./utils/editStyleEnter\";\nimport editStyleLeave from \"./utils/editStyleLeave\"; // Extends FocusedDataList //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FocusedDataItem(_ref) {\n  let {\n    style,\n    itemObject\n  } = _ref;\n\n  const renderProfileContent = (selector, value, indent) => {\n    // Renders first level object keys //\n    if (value === null) return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      onMouseEnter: e => editStyleEnter(e),\n      onMouseLeave: e => editStyleLeave(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          textIndent: `${indent * 15 + 3}px`\n        },\n        children: selector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          direction: \"rtl\",\n          textIndent: \"5px\"\n        },\n        children: \"null\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this); // If object has an object value, this will render the next object key with an indent //\n    // This will also call itself to render the next object //\n\n    if (typeof value === \"object\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          onMouseEnter: e => editStyleEnter(e),\n          onMouseLeave: e => editStyleLeave(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textIndent: `${indent * 15 + 3}px`\n            },\n            children: selector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: style.profileContentSeparator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), function () {\n          return Object.keys(value).map(new_selector => renderProfileContent(new_selector, value[new_selector], indent + 1));\n        }()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    } // Renders object's data if object value is not an object //\n    else return /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseEnter: e => editStyleEnter(e),\n      onMouseLeave: e => editStyleLeave(e),\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          textIndent: `${indent * 15 + 3}px`\n        },\n        children: selector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"50%\",\n          direction: \"rtl\",\n          marginRight: \"5px\"\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  return Object.keys(itemObject).map(item => renderProfileContent(item, itemObject[item], 0));\n}\n_c = FocusedDataItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusedDataItem\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focusedProfileContent.jsx"],"names":["editStyleEnter","editStyleLeave","FocusedDataItem","style","itemObject","renderProfileContent","selector","value","indent","display","e","width","textIndent","direction","profileContentSeparator","Object","keys","map","new_selector","marginRight","item"],"mappings":"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","sourcesContent":["import editStyleEnter from \"./utils/editStyleEnter\"\r\nimport editStyleLeave from \"./utils/editStyleLeave\"\r\n\r\n\r\n// Extends FocusedDataList //\r\nexport default function FocusedDataItem({style, itemObject}) {\r\n  const renderProfileContent = (selector, value, indent) => {\r\n    \r\n    // Renders first level object keys //\r\n    if (value === null) return (\r\n      <div \r\n          style={{display: \"flex\"}}\r\n          onMouseEnter={e => editStyleEnter(e)}\r\n          onMouseLeave={e => editStyleLeave(e)}\r\n          >\r\n  \r\n        <div style={{width: \"50%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n        <div style={{width: \"50%\", direction: \"rtl\", textIndent: \"5px\"}}>null</div>\r\n      </div>\r\n    )\r\n  \r\n    // If object has an object value, this will render the next object key with an indent //\r\n    // This will also call itself to render the next object //\r\n    if (typeof(value) === \"object\") {\r\n      return (\r\n        <div>\r\n          <div style={{display: \"flex\"}}\r\n               onMouseEnter={e => editStyleEnter(e)}\r\n               onMouseLeave={e => editStyleLeave(e)}>\r\n  \r\n            <div style={{textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n            <div style={style.profileContentSeparator}></div>\r\n          </div>\r\n          \r\n          {function() { \r\n            return Object.keys(value).map((new_selector) => (\r\n              renderProfileContent(new_selector, value[new_selector], indent+1)\r\n            ))\r\n          }()}\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    // Renders object's data if object value is not an object //\r\n    else return (\r\n      <div \r\n          onMouseEnter={e => editStyleEnter(e)}\r\n          onMouseLeave={e => editStyleLeave(e)}\r\n          style={{display: \"flex\"}}>\r\n        <div style={{width: \"50%\", textIndent: `${indent*15+3}px`}}>{selector}</div>\r\n        <div style={{width: \"50%\", direction: \"rtl\", marginRight: \"5px\"}}>{value}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return Object.keys(itemObject).map((item) => (\r\n    renderProfileContent(item, itemObject[item], 0)\r\n  ))  \r\n}"]},"metadata":{},"sourceType":"module"}