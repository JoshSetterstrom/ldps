{"ast":null,"code":"import * as style from \"../../css/searchList\";\nexport default function handleSearchTypeChange(targ, data, ret = ['Device', 'User', 'DID', 'borderWidth']) {\n  let displayStyle = \"\";\n  let display = \"\";\n  ret.forEach(e => {\n    if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\n      return {\n        'device': style.searchTypeDeviceStyleHighlight,\n        'user': style.searchTypeUserStyle,\n        'did': style.searchTypeDidStyle\n      };\n    }\n  });\n\n  if (targ.target.textContent === \"Device\" && !targ.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyleHighlight,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": true,\n      \"user\": false,\n      \"did\": false\n    }];\n  }\n\n  if (targ.target.textContent === \"User\" && !targ.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyleHighlight,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": false,\n      \"user\": true,\n      \"did\": false\n    }];\n  }\n\n  if (targ.target.textContent === \"DID\" && !targ.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyleHighlight\n    }, display = {\n      \"device\": false,\n      \"user\": false,\n      \"did\": true\n    }];\n  }\n\n  if (targ.target.style[\"borderWidth\"]) {\n    return [displayStyle = {\n      \"device\": style.searchTypeDeviceStyle,\n      \"user\": style.searchTypeUserStyle,\n      \"did\": style.searchTypeDidStyle\n    }, display = {\n      \"device\": false,\n      \"user\": false,\n      \"did\": false\n    }];\n  }\n\n  return [displayStyle, display];\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/handleSearchTypeChange.jsx"],"names":["style","handleSearchTypeChange","targ","data","ret","displayStyle","display","forEach","e","target","textContent","searchTypeDeviceStyleHighlight","searchTypeUserStyle","searchTypeDidStyle","searchTypeDeviceStyle","searchTypeUserStyleHighlight","searchTypeDidStyleHighlight"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,IAAhC,EAAsCC,IAAtC,EAA4CC,GAAG,GAAC,CAAC,QAAD,EAAW,MAAX,EAAmB,KAAnB,EAA0B,aAA1B,CAAhD,EAA0F;AACvG,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAG,EAAd;AAEAF,EAAAA,GAAG,CAACG,OAAJ,CAAYC,CAAC,IAAI;AACf,QAAIN,IAAI,CAACO,MAAL,CAAYC,WAAZ,KAA6B,GAAEF,CAAE,EAAjC,IAAsC,CAACN,IAAI,CAACO,MAAL,CAAYT,KAAZ,CAAkB,aAAlB,CAA3C,EAA6E;AAC3E,aACE;AAAC,kBAAUA,KAAK,CAACW,8BAAjB;AAAiD,gBAAQX,KAAK,CAACY,mBAA/D;AAAoF,eAAOZ,KAAK,CAACa;AAAjG,OADF;AAGD;AACF,GAND;;AAQA,MAAIX,IAAI,CAACO,MAAL,CAAYC,WAAZ,KAA4B,QAA5B,IAAwC,CAACR,IAAI,CAACO,MAAL,CAAYT,KAAZ,CAAkB,aAAlB,CAA7C,EAA+E;AAC7E,WAAQ,CACNK,YAAY,GAAI;AAAC,gBAAUL,KAAK,CAACW,8BAAjB;AAAiD,cAAQX,KAAK,CAACY,mBAA/D;AAAoF,aAAOZ,KAAK,CAACa;AAAjG,KADV,EAENP,OAAO,GAAI;AAAC,gBAAU,IAAX;AAAiB,cAAQ,KAAzB;AAAgC,aAAO;AAAvC,KAFL,CAAR;AAID;;AAED,MAAIJ,IAAI,CAACO,MAAL,CAAYC,WAAZ,KAA4B,MAA5B,IAAsC,CAACR,IAAI,CAACO,MAAL,CAAYT,KAAZ,CAAkB,aAAlB,CAA3C,EAA6E;AAC3E,WAAQ,CACNK,YAAY,GAAI;AAAC,gBAAUL,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACe,4BAAtD;AAAoF,aAAOf,KAAK,CAACa;AAAjG,KADV,EAENP,OAAO,GAAI;AAAC,gBAAU,KAAX;AAAkB,cAAQ,IAA1B;AAAgC,aAAO;AAAvC,KAFL,CAAR;AAID;;AAED,MAAIJ,IAAI,CAACO,MAAL,CAAYC,WAAZ,KAA4B,KAA5B,IAAqC,CAACR,IAAI,CAACO,MAAL,CAAYT,KAAZ,CAAkB,aAAlB,CAA1C,EAA4E;AAC1E,WAAQ,CACNK,YAAY,GAAI;AAAC,gBAAUL,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACY,mBAAtD;AAA2E,aAAOZ,KAAK,CAACgB;AAAxF,KADV,EAENV,OAAO,GAAI;AAAC,gBAAU,KAAX;AAAkB,cAAQ,KAA1B;AAAiC,aAAO;AAAxC,KAFL,CAAR;AAID;;AAED,MAAIJ,IAAI,CAACO,MAAL,CAAYT,KAAZ,CAAkB,aAAlB,CAAJ,EAAsC;AACpC,WAAQ,CACNK,YAAY,GAAI;AAAC,gBAAUL,KAAK,CAACc,qBAAjB;AAAwC,cAAQd,KAAK,CAACY,mBAAtD;AAA2E,aAAOZ,KAAK,CAACa;AAAxF,KADV,EAENP,OAAO,GAAI;AAAC,gBAAU,KAAX;AAAkB,cAAQ,KAA1B;AAAiC,aAAO;AAAxC,KAFL,CAAR;AAID;;AACD,SAAO,CAACD,YAAD,EAAeC,OAAf,CAAP;AACD","sourcesContent":["import * as style from \"../../css/searchList\";\r\n\r\nexport default function handleSearchTypeChange(targ, data, ret=['Device', 'User', 'DID', 'borderWidth']) {\r\n  let displayStyle = \"\"\r\n  let display = \"\"\r\n\r\n  ret.forEach(e => {\r\n    if (targ.target.textContent === `${e}` && !targ.target.style['borderWidth']) {\r\n      return (\r\n        {'device': style.searchTypeDeviceStyleHighlight, 'user': style.searchTypeUserStyle, 'did': style.searchTypeDidStyle}\r\n      )\r\n    }\r\n  })\r\n\r\n  if (targ.target.textContent === \"Device\" && !targ.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyleHighlight, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": true, \"user\": false, \"did\": false})\r\n    ])\r\n  }\r\n\r\n  if (targ.target.textContent === \"User\" && !targ.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyleHighlight, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": false, \"user\": true, \"did\": false})\r\n    ])\r\n  }\r\n\r\n  if (targ.target.textContent === \"DID\" && !targ.target.style[\"borderWidth\"]) {  \r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyleHighlight}),\r\n      display = ({\"device\": false, \"user\": false, \"did\": true})\r\n    ])\r\n  }\r\n\r\n  if (targ.target.style[\"borderWidth\"]) {\r\n    return ([\r\n      displayStyle = ({\"device\": style.searchTypeDeviceStyle, \"user\": style.searchTypeUserStyle, \"did\": style.searchTypeDidStyle}),\r\n      display = ({\"device\": false, \"user\": false, \"did\": false})\r\n    ])\r\n  }\r\n  return [displayStyle, display]\r\n}"]},"metadata":{},"sourceType":"module"}