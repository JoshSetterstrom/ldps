{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\profileTotal\\\\profileTotal.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport * as style from \"./style/profileTotalStyle\";\nimport ProfileTotalItem from \"./profileTotalItem\";\nimport ProfileTotalInput from \"./profileTotalInput\"; // Extends Main //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileTotal(_ref) {\n  _s();\n\n  let {\n    totalToRenderNumber,\n    setTotalToRenderNumber,\n    profileDataToRender,\n    listToRender\n  } = _ref;\n  const [userInputRecord, setUserInputRecord] = useState(\"\"); // Renders each total item //\n  // What's rendered is dependent on the listToRender state //\n\n  const renderTotalItems = () => {\n    return listToRender === null || listToRender === void 0 ? void 0 : listToRender.map((item, i) => /*#__PURE__*/_jsxDEV(ProfileTotalItem, {\n      style: style,\n      item: item,\n      profileDataToRender: profileDataToRender\n    }, \"PTI\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  }; // Renders all components of ProfileTotal //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitleMain,\n      children: \"Total Count:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), renderTotalItems(), /*#__PURE__*/_jsxDEV(ProfileTotalInput, {\n      style: style,\n      totalToRenderNumber: totalToRenderNumber,\n      userInputRecord: userInputRecord,\n      setUserInputRecord: setUserInputRecord,\n      setTotalToRenderNumber: setTotalToRenderNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileTotal, \"QH1oC11ArWDPzxjQSlF2N7/vD+w=\");\n\n_c = ProfileTotal;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileTotal\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileTotal/profileTotal.jsx"],"names":["useState","style","ProfileTotalItem","ProfileTotalInput","ProfileTotal","totalToRenderNumber","setTotalToRenderNumber","profileDataToRender","listToRender","userInputRecord","setUserInputRecord","renderTotalItems","map","item","i","totalContainer","totalTitleMain"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;;AACA,eAAe,SAASC,YAAT,OACoE;AAAA;;AAAA,MAD9C;AACnCC,IAAAA,mBADmC;AACdC,IAAAA,sBADc;AACUC,IAAAA,mBADV;AAC+BC,IAAAA;AAD/B,GAC8C;AACjF,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD,CADiF,CAGjF;AACA;;AACA,QAAMW,gBAAgB,GAAG,MAAM;AAC7B,WAAOH,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEI,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,kBACvB,QAAC,gBAAD;AACkB,MAAA,KAAK,EAAEb,KADzB;AAEkB,MAAA,IAAI,EAAEY,IAFxB;AAGkB,MAAA,mBAAmB,EAAEN;AAHvC,OAAuB,QAAMO,CAA7B;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAMD,GAPD,CALiF,CAejF;;;AACA,sBACE;AAAK,IAAA,KAAK,EAAEb,KAAK,CAACc,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEd,KAAK,CAACe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,gBAAgB,EAFnB,eAGE,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEV,KAA1B;AACmB,MAAA,mBAAmB,EAAEI,mBADxC;AAEmB,MAAA,eAAe,EAAEI,eAFpC;AAGmB,MAAA,kBAAkB,EAAEC,kBAHvC;AAImB,MAAA,sBAAsB,EAAEJ;AAJ3C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA5BuBF,Y;;KAAAA,Y;AA4BvB","sourcesContent":["import {useState} from \"react\"\r\nimport * as style from \"./style/profileTotalStyle\"\r\nimport ProfileTotalItem from \"./profileTotalItem\"\r\nimport ProfileTotalInput from \"./profileTotalInput\";\r\n\r\n// Extends Main //\r\nexport default function ProfileTotal({\r\n  totalToRenderNumber, setTotalToRenderNumber, profileDataToRender, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\");\r\n\r\n  // Renders each total item //\r\n  // What's rendered is dependent on the listToRender state //\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map((item, i) => (\r\n      <ProfileTotalItem key={\"PTI\"+i}\r\n                        style={style}\r\n                        item={item}\r\n                        profileDataToRender={profileDataToRender}/>\r\n    ));\r\n  };\r\n\r\n\r\n  // Renders all components of ProfileTotal //\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitleMain}>Total Count:</div>\r\n      {renderTotalItems()}\r\n      <ProfileTotalInput style={style} \r\n                         totalToRenderNumber={totalToRenderNumber} \r\n                         userInputRecord={userInputRecord}\r\n                         setUserInputRecord={setUserInputRecord} \r\n                         setTotalToRenderNumber={setTotalToRenderNumber}/>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}