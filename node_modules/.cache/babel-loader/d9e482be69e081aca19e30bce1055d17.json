{"ast":null,"code":"export default function getHcsLink(profile, location_hierarchy) {\n  let link = \"\";\n  let store = \"\"; // try {\n\n  let pkid = profile['meta']['pkid'];\n  if (file['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file['meta']['hierarchy'].split(\"Store \")[1];\n  link = location_hierarchy[0][`link_${type}`];\n  link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store]);\n  link = link.replace(\"{2}\", pkid);\n  console.log(link); // }\n  // catch {/*catch non-existing device*/}\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["getHcsLink","profile","location_hierarchy","link","store","pkid","file","includes","split","type","replace","console","log"],"mappings":"AAAA,eAAe,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,kBAA7B,EAAiD;AAC9D,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ,CAF8D,CAI9D;;AACA,MAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgB,MAAhB,CAAX;AAGA,MAAIK,IAAI,CAAC,MAAD,CAAJ,CAAa,WAAb,EAA0BC,QAA1B,CAAmC,aAAnC,CAAJ,EAAuDH,KAAK,GAAG,aAAR,CAAvD,KACKA,KAAK,GAAG,WAAWE,IAAI,CAAC,MAAD,CAAJ,CAAa,WAAb,EAA0BE,KAA1B,CAAgC,QAAhC,EAA0C,CAA1C,CAAnB;AAELL,EAAAA,IAAI,GAAGD,kBAAkB,CAAC,CAAD,CAAlB,CAAuB,QAAOO,IAAK,EAAnC,CAAP;AACAN,EAAAA,IAAI,GAAGA,IAAI,CAACO,OAAL,CAAa,KAAb,EAAoBR,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,QAAtB,EAAgCE,KAAhC,CAApB,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACO,OAAL,CAAa,KAAb,EAAoBL,IAApB,CAAP;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAf8D,CAgB9D;AAEA;;AAEA,SAAOA,IAAP;AACD","sourcesContent":["export default function getHcsLink(profile, location_hierarchy) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  // try {\r\n  let pkid = profile['meta']['pkid']\r\n\r\n  \r\n  if (file['meta']['hierarchy'].includes(\"Head Office\")) store = \"head_office\"\r\n  else store = \"store_\" + file['meta']['hierarchy'].split(\"Store \")[1]\r\n  \r\n  link = location_hierarchy[0][`link_${type}`]\r\n  link = link.replace(\"{1}\", location_hierarchy[1]['stores'][store])\r\n  link = link.replace(\"{2}\", pkid)\r\n\r\n  console.log(link)\r\n  // }\r\n\r\n  // catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}