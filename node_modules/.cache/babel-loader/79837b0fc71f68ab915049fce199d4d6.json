{"ast":null,"code":"import hierarchy from \"../data/location_hierarchy.json\";\nexport default function getHcsLink(type, profile) {\n  let link = \"\";\n  let store = \"\";\n\n  try {\n    let file = require(`../data/${type}s/${profile}.json`);\n\n    let pkid = file.meta.pkid;\n    if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1];\n    link = hierarchy[`link_${type}`];\n    link = link.replace(\"{1}\", hierarchy.stores[store]);\n    link = link.replace(\"{2}\", pkid);\n    console.log(link);\n  } catch {\n    /*catch non-existing device*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getHcsLink.js"],"names":["hierarchy","getHcsLink","type","profile","link","store","file","require","pkid","meta","includes","split","replace","stores","console","log"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iCAAtB;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;AAChD,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAI;AACF,QAAIC,IAAI,GAAGC,OAAO,CAAE,WAAUL,IAAK,KAAIC,OAAQ,OAA7B,CAAlB;;AACA,QAAIK,IAAI,GAAGF,IAAI,CAACG,IAAL,CAAUD,IAArB;AAGA,QAAIF,IAAI,CAACG,IAAL,CAAUT,SAAV,CAAoBU,QAApB,CAA6B,aAA7B,CAAJ,EAAiDL,KAAK,GAAG,aAAR,CAAjD,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACG,IAAL,CAAUT,SAAV,CAAoBW,KAApB,CAA0B,QAA1B,EAAoC,CAApC,CAAnB;AAELP,IAAAA,IAAI,GAAGJ,SAAS,CAAE,QAAOE,IAAK,EAAd,CAAhB;AACAE,IAAAA,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,KAAb,EAAoBZ,SAAS,CAACa,MAAV,CAAiBR,KAAjB,CAApB,CAAP;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,KAAb,EAAoBJ,IAApB,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,GAZD,CAcA,MAAM;AAAC;AAA8B;;AAErC,SAAOA,IAAP;AACD","sourcesContent":["import hierarchy from \"../data/location_hierarchy.json\"\r\n\r\nexport default function getHcsLink(type, profile) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n\r\n  try {\r\n    let file = require(`../data/${type}s/${profile}.json`)\r\n    let pkid = file.meta.pkid\r\n\r\n    \r\n    if (file.meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.meta.hierarchy.split(\"Store \")[1]\r\n    \r\n    link = hierarchy[`link_${type}`]\r\n    link = link.replace(\"{1}\", hierarchy.stores[store])\r\n    link = link.replace(\"{2}\", pkid)\r\n    console.log(link)\r\n  }\r\n\r\n  catch {/*catch non-existing device*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}