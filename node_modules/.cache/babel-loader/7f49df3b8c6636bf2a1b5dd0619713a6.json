{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport 'simplebar/dist/simplebar.min.css';\nimport * as style from \"./style/mainStyle\";\nimport callApi from './api/callApi';\nimport Focused from \"./focused/focused\";\nimport Loading from \"./loading/loading\";\nimport ProfileList from \"./profileList/profileList\";\nimport ProfileButtons from \"./profileButtons/profileButtons\";\nimport ProfileTotal from \"./profileTotal/profileTotal\"; //Extends App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [listToRender, setListToRender] = useState([\"Phones\", \"Subscribers\", \"Lines\", \"Voicemail\", \"DID\", \"LAS\"]);\n  const [rawData, setRawData] = useState([]);\n  const [profileData, setProfileData] = useState([]);\n  const [profileDataToRender, setProfileDataToRender] = useState([]);\n  const [locationHierarchy, setLocationHierarchy] = useState([]);\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(25);\n  const [focused, setFocused] = useState([]);\n  const [loading, setLoading] = useState(style.loadingContainer);\n  const [loadingBar, setLoadingBar] = useState(style.loadingBar); // Retrieves data from server //\n\n  useEffect(() => {\n    const getData = async () => {\n      let res = await callApi(loadingBar, setLoadingBar);\n      setRawData(res['rawData']);\n      setProfileData(res['cleanData']);\n      setProfileDataToRender(res['cleanData']);\n      setLocationHierarchy(res['locationHierarchy']);\n      setLoading({ ...style.loadingContainer,\n        visibility: \"hidden\"\n      });\n    };\n\n    getData(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.main,\n    children: [/*#__PURE__*/_jsxDEV(Loading, {\n      container: loading,\n      bar: loadingBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileButtons, {\n      listToRender: listToRender,\n      setListToRender: setListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.containerMiddle,\n      children: [/*#__PURE__*/_jsxDEV(ProfileList, {\n        focused: focused,\n        setFocused: setFocused,\n        listToRender: listToRender,\n        profileData: profileData,\n        profileDataToRender: profileDataToRender,\n        setProfileDataToRender: setProfileDataToRender,\n        totalToRenderNumber: totalToRenderNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Focused, {\n        focused: focused,\n        setFocused: setFocused,\n        locationHierarchy: locationHierarchy,\n        rawData: rawData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileTotal, {\n      listToRender: listToRender,\n      profileDataToRender: profileDataToRender,\n      totalToRenderNumber: totalToRenderNumber,\n      setTotalToRenderNumber: setTotalToRenderNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"vIdq4qqMOfZc+Tm7QtMWwdmXUAg=\");\n\n_c = Main;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/main.jsx"],"names":["React","useEffect","useState","style","callApi","Focused","Loading","ProfileList","ProfileButtons","ProfileTotal","Main","listToRender","setListToRender","rawData","setRawData","profileData","setProfileData","profileDataToRender","setProfileDataToRender","locationHierarchy","setLocationHierarchy","totalToRenderNumber","setTotalToRenderNumber","focused","setFocused","loading","setLoading","loadingContainer","loadingBar","setLoadingBar","getData","res","visibility","main","containerMiddle"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from 'react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport * as style from \"./style/mainStyle\";\r\nimport callApi from './api/callApi';\r\nimport Focused from \"./focused/focused\";\r\nimport Loading from \"./loading/loading\";\r\nimport ProfileList from \"./profileList/profileList\"\r\nimport ProfileButtons from \"./profileButtons/profileButtons\"\r\nimport ProfileTotal from \"./profileTotal/profileTotal\"\r\n\r\n//Extends App\r\nexport default function Main() {\r\n  const [listToRender, setListToRender] = useState([\"Phones\", \"Subscribers\", \"Lines\", \"Voicemail\", \"DID\", \"LAS\"])\r\n  const [rawData, setRawData] = useState([])\r\n  const [profileData, setProfileData] = useState([])\r\n  const [profileDataToRender, setProfileDataToRender] = useState([])\r\n  const [locationHierarchy, setLocationHierarchy] = useState([])\r\n  const [totalToRenderNumber, setTotalToRenderNumber] = useState(25)\r\n  const [focused, setFocused] = useState([])\r\n  const [loading, setLoading] = useState(style.loadingContainer)\r\n  const [loadingBar, setLoadingBar] = useState(style.loadingBar)\r\n\r\n  // Retrieves data from server //\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let res = await callApi(loadingBar, setLoadingBar)\r\n      setRawData(res['rawData'])\r\n      setProfileData(res['cleanData'])\r\n      setProfileDataToRender(res['cleanData'])\r\n      setLocationHierarchy(res['locationHierarchy'])\r\n      setLoading({...style.loadingContainer, visibility: \"hidden\"})\r\n    }\r\n    getData()\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div style={style.main}>\r\n      <Loading container={loading} bar={loadingBar}/>\r\n      \r\n      <ProfileButtons\r\n          listToRender={listToRender}\r\n          setListToRender={setListToRender}/>\r\n\r\n      <div style={style.containerMiddle}>\r\n        <ProfileList \r\n            focused={focused}\r\n            setFocused={setFocused}\r\n            listToRender={listToRender}\r\n            profileData={profileData}\r\n            profileDataToRender={profileDataToRender}\r\n            setProfileDataToRender={setProfileDataToRender}\r\n            totalToRenderNumber={totalToRenderNumber}/>\r\n        \r\n        <Focused \r\n            focused={focused} \r\n            setFocused={setFocused} \r\n            locationHierarchy={locationHierarchy}\r\n            rawData={rawData}/>\r\n      </div>\r\n\r\n      <ProfileTotal \r\n          listToRender={listToRender}\r\n          profileDataToRender={profileDataToRender} \r\n          totalToRenderNumber={totalToRenderNumber} \r\n          setTotalToRenderNumber={setTotalToRenderNumber}/>\r\n    \r\n    </div>\r\n  )\r\n};"]},"metadata":{},"sourceType":"module"}