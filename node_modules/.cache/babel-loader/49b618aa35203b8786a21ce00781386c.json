{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const [buttons] = useState([\"Device\"]); // const [defaultDataToRender] = useState(buttons)\n  // const [filteredDataToRender, setFilteredDataToRender] = useState(buttons)\n  // const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style))\n\n  const [buttonStyle, setButtonStyle] = useState([style.searchTypeOther]);\n\n  const addFilter = (item, position) => {\n    setButtonStyle(() => {\n      return style.searchTypeOtherHighlight;\n    } // return buttonStyle\n    // setFilteredDataToRender(filteredDataToRender.filter((e) => {return e !== item.innerHTML}))\n    // item.style = style.searchTypeOtherHighlight\n    );\n  };\n\n  function ProfileButton({\n    item,\n    position\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => addFilter(e, position),\n      style: buttonStyle[0],\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  const renderButtons = () => {\n    return buttons.map((item, i) => /*#__PURE__*/_jsxDEV(ProfileButton, {\n      item: item,\n      position: i\n    }, `RB${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n} // <div \n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\n//   {item}\n// </div>\n\n_s(ProfileButtons, \"Zhx9olV0VG4gdrhmBWoe9OXW1G4=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","props","buttons","buttonStyle","setButtonStyle","searchTypeOther","addFilter","item","position","searchTypeOtherHighlight","ProfileButton","e","renderButtons","map","i","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,OAAD,IAAYH,QAAQ,CAAC,CAAC,QAAD,CAAD,CAA1B,CAD4C,CAE5C;AACA;AACA;;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAACH,KAAK,CAACS,eAAP,CAAD,CAA9C;;AAEA,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACpCJ,IAAAA,cAAc,CAAC,MAAM;AAAC,aAAOR,KAAK,CAACa,wBAAb;AAAsC,KAA9C,CAEZ;AAEF;AACA;AALc,KAAd;AAOD,GARD;;AAUA,WAASC,aAAT,CAAuB;AAACH,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAvB,EAAyC;AACvC,wBACE;AACI,MAAA,OAAO,EAAGG,CAAD,IAAOL,SAAS,CAACK,CAAD,EAAIH,QAAJ,CAD7B;AAEI,MAAA,KAAK,EAAEL,WAAW,CAAC,CAAD,CAFtB;AAAA,gBAGGI;AAHH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,QAAMK,aAAa,GAAG,MAAM;AAC1B,WAAOV,OAAO,CAACW,GAAR,CAAY,CAACN,IAAD,EAAOO,CAAP,kBACjB,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEP,IAArB;AAA2B,MAAA,QAAQ,EAAEO;AAArC,OAA8C,KAAIA,CAAE,EAApD;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGJ,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAID;AACA;AACA;AACA;AACA;;GA9CwBZ,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const [buttons] = useState([\"Device\"])\r\n  // const [defaultDataToRender] = useState(buttons)\r\n  // const [filteredDataToRender, setFilteredDataToRender] = useState(buttons)\r\n  // const [buttonStyle, setButtonStyle] = useState(createButtonState(buttons, style))\r\n  const [buttonStyle, setButtonStyle] = useState([style.searchTypeOther])\r\n  \r\n  const addFilter = (item, position) => {\r\n    setButtonStyle(() => {return style.searchTypeOtherHighlight}\r\n      \r\n      // return buttonStyle\r\n      \r\n    // setFilteredDataToRender(filteredDataToRender.filter((e) => {return e !== item.innerHTML}))\r\n    // item.style = style.searchTypeOtherHighlight\r\n    )\r\n  }\r\n\r\n  function ProfileButton({item, position}) {\r\n    return (\r\n      <div\r\n          onClick={(e) => addFilter(e, position)} \r\n          style={buttonStyle[0]}>\r\n        {item}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttons.map((item, i) => (\r\n      <ProfileButton item={item} position={i} key={`RB${i}`}/>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// <div \r\n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\r\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\r\n//   {item}\r\n// </div>"]},"metadata":{},"sourceType":"module"}