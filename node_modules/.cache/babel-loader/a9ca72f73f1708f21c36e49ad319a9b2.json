{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport * as __data from \"./searchListData\";\nimport * as style from \"../../css/light/searchList\";\nimport FocusedList from './focusedList';\nimport getItem from './getItem';\nimport getTotalCount from './getTotalCount';\nimport getDeviceData from \"./getDeviceData\";\nimport getUserData from \"./getUserData\";\nimport getDidData from \"./getDidData\";\nimport getSearch from './getSearch';\nimport getFilteredSearch from './getFilteredSearch';\nimport ItemList from \"./itemList\";\nimport Total from \"./total\";\nimport ProfileButtons from \"./profileButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet filteredSearch = {\n  \"device\": {\n    \"results\": getDeviceData,\n    \"relevant\": \"mac\"\n  },\n  \"user\": {\n    \"results\": getUserData,\n    \"relevant\": \"id\"\n  },\n  \"did\": {\n    \"results\": getDidData,\n    \"relevant\": \"did\"\n  }\n};\nexport default function SearchList() {\n  _s();\n\n  const [data, setData] = useState(__data['default']);\n  const [item, setItem] = useState(getItem(filteredSearch));\n  const [focused, setFocused] = useState([]);\n  const [pageNumber, setPageNumber] = useState(100);\n  const [tempItem, setTempItem] = useState(\"\");\n  const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"]);\n  useEffect(() => {\n    setData(getTotalCount(filteredSearch, data));\n  }, [data]);\n\n  const handleInputChange = string => {\n    let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch);\n    filteredSearch = getFilteredSearch(search);\n    setItem(getItem(filteredSearch));\n    setData(getTotalCount(filteredSearch, data));\n  }; // const handleFocus = (e, type, id, assoc) => {\n  //   if (e.target.style.cursor !== \"pointer\") return\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\n  //   setFocused(newFocused)\n  // }\n\n\n  const getItemsToRender = () => {\n    let temp = {};\n\n    for (let i in listToRender) {\n      if (!item[listToRender[i].toLowerCase()]) {\n        /*pass*/\n      } else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()];\n    }\n\n    return temp;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"63.5vw\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ProfileButtons, {\n      temp: filteredSearch,\n      listToRender: listToRender,\n      setListToRender: setListToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: style.searchInputStyle,\n      onChange: e => handleInputChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      temp: getItemsToRender(),\n      data: data,\n      item: item,\n      pageNumber: pageNumber,\n      filteredSearch: filteredSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      tempItem: tempItem,\n      pageNumber: pageNumber,\n      setTempItem: setTempItem,\n      setPageNumber: setPageNumber,\n      profile: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"6OY9/wQPYudTlOn9Ij0SClENvAM=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/searchList.jsx"],"names":["React","useState","useEffect","__data","style","FocusedList","getItem","getTotalCount","getDeviceData","getUserData","getDidData","getSearch","getFilteredSearch","ItemList","Total","ProfileButtons","filteredSearch","SearchList","data","setData","item","setItem","focused","setFocused","pageNumber","setPageNumber","tempItem","setTempItem","listToRender","setListToRender","handleInputChange","string","search","getItemsToRender","temp","i","toLowerCase","maxWidth","searchInputStyle","e"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport * as __data from \"./searchListData\"\r\nimport * as style from \"../../css/light/searchList\";\r\nimport FocusedList from './focusedList';\r\nimport getItem from './getItem';\r\nimport getTotalCount from './getTotalCount';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getDidData from \"./getDidData\";\r\nimport getSearch from './getSearch';\r\nimport getFilteredSearch from './getFilteredSearch';\r\nimport ItemList from \"./itemList\"\r\nimport Total from \"./total\"\r\nimport ProfileButtons from \"./profileButtons\"\r\n\r\nlet filteredSearch = {\r\n  \"device\": {\"results\": getDeviceData, \"relevant\": \"mac\"}, \r\n  \"user\": {\"results\": getUserData, \"relevant\": \"id\"},\r\n  \"did\": {\"results\": getDidData, \"relevant\": \"did\"}\r\n}\r\n\r\nexport default function SearchList() {\r\n  const [data, setData] = useState(__data['default'])\r\n  const [item, setItem] = useState(getItem(filteredSearch))\r\n  const [focused, setFocused] = useState([])\r\n  const [pageNumber, setPageNumber] = useState(100)\r\n  const [tempItem, setTempItem] = useState(\"\")\r\n  const [listToRender, setListToRender] = useState([\"DID\", \"Device\", \"User\", \"Line\", \"Voicemail\"])\r\n  \r\n  useEffect(() => {\r\n    setData(getTotalCount(filteredSearch, data))\r\n  }, [data])\r\n\r\n  const handleInputChange = string => {\r\n    let search = getSearch(getDeviceData, getUserData, getDidData, string, filteredSearch)\r\n    filteredSearch = getFilteredSearch(search)\r\n    setItem(getItem(filteredSearch))\r\n    setData(getTotalCount(filteredSearch, data))\r\n  }\r\n\r\n  // const handleFocus = (e, type, id, assoc) => {\r\n  //   if (e.target.style.cursor !== \"pointer\") return\r\n  //   for (let i in focused) if (e.target.innerHTML === focused[i][0].resources[0].data[id]) return\r\n  //   let newFocused = [[require(`../../data/${type}/${e.nativeEvent.path[1].innerText.split('\\n')[0]}.json`), id, type, assoc], ...newFocused]\r\n  //   setFocused(newFocused)\r\n  // }\r\n\r\n  const getItemsToRender = () => {\r\n    let temp = {}\r\n    for (let i in listToRender) {\r\n      if (!item[listToRender[i].toLowerCase()]) {/*pass*/}\r\n      else temp[listToRender[i].toLowerCase()] = item[listToRender[i].toLowerCase()]\r\n    }\r\n    return temp\r\n  }\r\n    \r\n  return (\r\n    <div style={{maxWidth: \"63.5vw\"}}>\r\n      <ProfileButtons temp={filteredSearch} listToRender={listToRender} setListToRender={setListToRender}></ProfileButtons>\r\n      <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      {/* <FocusedList focused={focused} setTempItem={setTempItem} setFocused={setFocused} data={data} item={item} filteredSearch={filteredSearch}/> */}\r\n      <ItemList temp={getItemsToRender()} data={data} item={item} pageNumber={pageNumber} filteredSearch={filteredSearch}/>\r\n      <Total tempItem={tempItem} pageNumber={pageNumber} setTempItem={setTempItem} setPageNumber={setPageNumber} profile={item}/>\r\n    </div>\r\n  );\r\n};  "]},"metadata":{},"sourceType":"module"}