{"ast":null,"code":"const {\n  MongoClient\n} = require('mongodb');\n\nconst client = new MongoClient(\"mongodb://localhost:27017\");\n\nasync function getDeviceData() {\n  // let profileList = [];\n  try {\n    let client = await MongoClient.connect(\"mongodb://localhost:27017\");\n    let db = client.db(\"profiles\");\n    let collection = db.collection(\"devices\");\n    let result = await collection.find();\n    console.log(await result.toArray());\n  } catch (err) {\n    console.error(err);\n  } finally {\n    client.close();\n  }\n} // => {\n//   db = client.db(\"profiles\")\n//   collection = db.collection(\"devices\")\n//   item = collection.find({\"profile\": \"80000002\"})\n//   console.log(item.toArray())\n// })\n// let db = client.db(\"local\")\n// let collection = await db.collection.find({}).toArray()\n// console.log(collection)\n// let db = client.db(\"profiles\")\n// let collection = db.collection(\"devices\")\n// console.log(collection)\n// return console.log('done.')\n// MongoClient.connect(\"mongodb://localhost:27017\", function(err, db) {\n//   console.log(err,db)\n// }) \n// const client = new MongoClient(\"mongodb://localhost:27017\")\n// console.log(client)\n// profiles['devices'].forEach((device, i) => {\n// print(client)\n// const data = require(`../data/devices/${device}.json`);\n// profileList.push([\n//   {\n//     type: \"mac\",\n//     index: \"MAC Address\",\n//     data: function() {\n//       try {\n//         return !data.data.name.toUpperCase() \n//         ? \"\"\n//         : data.data.name.toUpperCase() \n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"product\",\n//     index: \"Product\",\n//     data: function() {\n//       try {\n//         return !data.data.product\n//         ? \"\"\n//         : data.data.product\n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"user\",\n//     index: \"User ID\",\n//     data: function() {\n//       try {\n//         return !data.data.ownerUserName\n//         ? \"\"\n//         : data.data.ownerUserName\n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"description\",\n//     index: \"Description\",\n//     data: function() {\n//       try {\n//         return !data.data.description\n//         ? \"\"\n//         : data.data.description\n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"primary\",\n//     index: \"Primary Line\",\n//     data: function() {\n//       try {\n//         return !data.data.lines.line[0].dirn.pattern\n//         ? \"\"\n//         : data.data.lines.line[0].dirn.pattern\n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"mask\",\n//     index: \"E164 Mask\",\n//     data: function() {\n//       try {\n//         return !data.data.lines.line[0].e164Mask\n//         ? \"\"\n//         : data.data.lines.line[0].e164Mask\n//       } \n//       catch {return \"\"}\n//     }()\n//   },\n//   {\n//     type: \"location\",\n//     index: \"Location\",\n//     data: function() {\n//       try {\n//         return !data.meta.hierarchy.split(\"_\").pop()\n//         ? \"\"\n//         : data.meta.hierarchy.split(\"_\").pop()\n//       } \n//       catch {return \"\"}\n//     }()\n//   }\n// ]);\n// });\n// return profileList;\n// };\n\n\ngetDeviceData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/dataRetrieval/getDeviceData.js"],"names":["MongoClient","require","client","getDeviceData","connect","db","collection","result","find","console","log","toArray","err","error","close"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAgBC,OAAO,CAAC,SAAD,CAA7B;;AACA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgB,2BAAhB,CAAf;;AAIA,eAAeG,aAAf,GAA+B;AAC7B;AAEA,MAAI;AACF,QAAID,MAAM,GAAG,MAAMF,WAAW,CAACI,OAAZ,CAAoB,2BAApB,CAAnB;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,UAAV,CAAT;AACA,QAAIC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAjB;AACA,QAAIC,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAX,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMH,MAAM,CAACI,OAAP,EAAlB;AACD,GAND,CAOA,OAAMC,GAAN,EAAW;AAACH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AAAmB,GAP/B,SAQQ;AAACV,IAAAA,MAAM,CAACY,KAAP;AAAe;AACzaAAa","sourcesContent":["const {MongoClient} = require('mongodb');\r\nconst client = new MongoClient(\"mongodb://localhost:27017\")\r\n\r\n\r\n\r\nasync function getDeviceData() {\r\n  // let profileList = [];\r\n    \r\n  try {\r\n    let client = await MongoClient.connect(\"mongodb://localhost:27017\")\r\n    let db = client.db(\"profiles\")\r\n    let collection = db.collection(\"devices\")\r\n    let result = await collection.find()\r\n    console.log(await result.toArray())\r\n  }\r\n  catch(err) {console.error(err)}\r\n  finally {client.close()}\r\n}\r\n\r\n  // => {\r\n  //   db = client.db(\"profiles\")\r\n  //   collection = db.collection(\"devices\")\r\n  //   item = collection.find({\"profile\": \"80000002\"})\r\n  //   console.log(item.toArray())\r\n  // })\r\n\r\n  // let db = client.db(\"local\")\r\n  // let collection = await db.collection.find({}).toArray()\r\n  // console.log(collection)\r\n\r\n  // let db = client.db(\"profiles\")\r\n\r\n  // let collection = db.collection(\"devices\")\r\n\r\n  // console.log(collection)\r\n\r\n  // return console.log('done.')\r\n\r\n  // MongoClient.connect(\"mongodb://localhost:27017\", function(err, db) {\r\n  //   console.log(err,db)\r\n  // }) \r\n  \r\n  // const client = new MongoClient(\"mongodb://localhost:27017\")\r\n  // console.log(client)\r\n\r\n  // profiles['devices'].forEach((device, i) => {\r\n    // print(client)\r\n    // const data = require(`../data/devices/${device}.json`);\r\n\r\n    // profileList.push([\r\n    //   {\r\n    //     type: \"mac\",\r\n    //     index: \"MAC Address\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.name.toUpperCase() \r\n    //         ? \"\"\r\n    //         : data.data.name.toUpperCase() \r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"product\",\r\n    //     index: \"Product\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.product\r\n    //         ? \"\"\r\n    //         : data.data.product\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"user\",\r\n    //     index: \"User ID\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.ownerUserName\r\n    //         ? \"\"\r\n    //         : data.data.ownerUserName\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"description\",\r\n    //     index: \"Description\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.description\r\n    //         ? \"\"\r\n    //         : data.data.description\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"primary\",\r\n    //     index: \"Primary Line\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.lines.line[0].dirn.pattern\r\n    //         ? \"\"\r\n    //         : data.data.lines.line[0].dirn.pattern\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"mask\",\r\n    //     index: \"E164 Mask\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.data.lines.line[0].e164Mask\r\n    //         ? \"\"\r\n    //         : data.data.lines.line[0].e164Mask\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   },\r\n    //   {\r\n    //     type: \"location\",\r\n    //     index: \"Location\",\r\n    //     data: function() {\r\n    //       try {\r\n    //         return !data.meta.hierarchy.split(\"_\").pop()\r\n    //         ? \"\"\r\n    //         : data.meta.hierarchy.split(\"_\").pop()\r\n    //       } \r\n    //       catch {return \"\"}\r\n    //     }()\r\n    //   }\r\n    // ]);\r\n  // });\r\n\r\n  // return profileList;\r\n// };\r\n\r\ngetDeviceData()"]},"metadata":{},"sourceType":"module"}