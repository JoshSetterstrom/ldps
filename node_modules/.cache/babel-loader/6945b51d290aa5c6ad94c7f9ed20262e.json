{"ast":null,"code":"import axios from \"axios\";\nexport default function getDeviceData(state) {\n  axios.get('http://localhost:5000/devices').then(data => {\n    return getData(data);\n  }).catch(reject => console.log(reject));\n}\n\nfunction getData(data) {\n  let profileList = [];\n  data['data'].forEach((profile, i) => {\n    profileList.push([{\n      type: \"mac\",\n      index: \"MAC Address\",\n      data: (() => {\n        try {\n          return profile['data']['name'].toUpperCase();\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"product\",\n      index: \"Product\",\n      data: (() => {\n        try {\n          return profile['data']['product'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"user\",\n      index: \"User ID\",\n      data: (() => {\n        try {\n          return profile['data']['ownerUserName'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"description\",\n      index: \"Description\",\n      data: (() => {\n        try {\n          return profile['data']['description'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"primary\",\n      index: \"Primary Line\",\n      data: (() => {\n        try {\n          return profile['data']['lines']['line'][0]['dirn']['pattern'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"mask\",\n      index: \"E164 Mask\",\n      data: (() => {\n        try {\n          return profile['lines']['line'][0]['e164Mask'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"location\",\n      index: \"Location\",\n      data: (() => {\n        try {\n          return profile['meta']['hierarchy'];\n        } catch {\n          return \"\";\n        }\n      })()\n    }]);\n  });\n  return profileList;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDeviceData.js"],"names":["axios","getDeviceData","state","get","then","data","getData","catch","reject","console","log","profileList","forEach","profile","i","push","type","index","toUpperCase"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default function getDeviceData(state) {\r\n  axios.get('http://localhost:5000/devices')\r\n    .then(data => {return getData(data)})\r\n    .catch(reject => console.log(reject))\r\n}\r\n\r\nfunction getData(data) {\r\n  let profileList = []\r\n\r\n  data['data'].forEach((profile, i) => {\r\n    profileList.push([\r\n      {\r\n        type: \"mac\",\r\n        index: \"MAC Address\",\r\n        data: (() => {\r\n          try {return profile['data']['name'].toUpperCase()}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"product\",\r\n        index: \"Product\",\r\n        data: (() => {\r\n          try {return profile['data']['product']}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"user\",\r\n        index: \"User ID\",\r\n        data: (() => {\r\n          try {return profile['data']['ownerUserName']}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"description\",\r\n        index: \"Description\",\r\n        data: (() => {\r\n          try {return profile['data']['description']}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: (() => {\r\n          try {return profile['data']['lines']['line'][0]['dirn']['pattern']}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"mask\",\r\n        index: \"E164 Mask\",\r\n        data: (() => {\r\n          try {return profile['lines']['line'][0]['e164Mask']}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"location\",\r\n        index: \"Location\",\r\n        data: (() => {\r\n          try {return profile['meta']['hierarchy']}\r\n          catch {return \"\"}\r\n        })()\r\n      }\r\n    ])\r\n  })\r\n\r\n  return profileList\r\n}"]},"metadata":{},"sourceType":"module"}