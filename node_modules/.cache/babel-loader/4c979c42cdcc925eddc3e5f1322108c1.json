{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons({\n  listToRender,\n  setListToRender\n}) {\n  _s();\n\n  const staticButtons = listToRender;\n  const [highlighted, setHighlighted] = useState(\"\");\n  const [defaultButtons] = useState(staticButtons);\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(defaultButtons, style));\n\n  const changeFilter = (item, position) => {\n    console.log(\"1\", highlighted, item.target.innerHTML);\n\n    if (highlighted === item.target.innerHTML) {\n      setButtonStyle(createButtonState(defaultButtons, style));\n      setListToRender(defaultButtons);\n      setHighlighted(\"\");\n      return;\n    } else {\n      let newButtonState = createButtonState(defaultButtons, style);\n      newButtonState = { ...newButtonState,\n        [position]: style.searchTypeOtherHighlight\n      };\n      setButtonStyle(newButtonState);\n      setListToRender([item.target.innerHTML]);\n      setHighlighted(item.target.innerHTML);\n    }\n  };\n\n  const renderButtons = () => {\n    return defaultButtons.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => changeFilter(e, i),\n      style: buttonStyle[i],\n      children: item\n    }, `button${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileButtons, \"GI4ezQqzXPn8xktjyAXDBb08Amo=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","listToRender","setListToRender","staticButtons","highlighted","setHighlighted","defaultButtons","buttonStyle","setButtonStyle","changeFilter","item","position","console","log","target","innerHTML","newButtonState","searchTypeOtherHighlight","renderButtons","map","i","e","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAxB,EAAyD;AAAA;;AACtE,QAAMC,aAAa,GAAGF,YAAtB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,cAAD,IAAmBP,QAAQ,CAACI,aAAD,CAAjC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACF,iBAAiB,CAACS,cAAD,EAAiBV,KAAjB,CAAlB,CAA9C;;AAEA,QAAMa,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBT,WAAjB,EAA8BM,IAAI,CAACI,MAAL,CAAYC,SAA1C;;AACA,QAAIX,WAAW,KAAKM,IAAI,CAACI,MAAL,CAAYC,SAAhC,EAA2C;AACzCP,MAAAA,cAAc,CAACX,iBAAiB,CAACS,cAAD,EAAiBV,KAAjB,CAAlB,CAAd;AACAM,MAAAA,eAAe,CAACI,cAAD,CAAf;AACAD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD,KALD,MAOK;AACH,UAAIW,cAAc,GAAGnB,iBAAiB,CAACS,cAAD,EAAiBV,KAAjB,CAAtC;AACAoB,MAAAA,cAAc,GAAG,EAAC,GAAGA,cAAJ;AAAoB,SAACL,QAAD,GAAYf,KAAK,CAACqB;AAAtC,OAAjB;AACAT,MAAAA,cAAc,CAACQ,cAAD,CAAd;AACAd,MAAAA,eAAe,CAAC,CAACQ,IAAI,CAACI,MAAL,CAAYC,SAAb,CAAD,CAAf;AACAV,MAAAA,cAAc,CAACK,IAAI,CAACI,MAAL,CAAYC,SAAb,CAAd;AACD;AAEF,GAjBD;;AAmBA,QAAMG,aAAa,GAAG,MAAM;AAC1B,WAAOZ,cAAc,CAACa,GAAf,CAAmB,CAACT,IAAD,EAAOU,CAAP,kBACxB;AAAwB,MAAA,OAAO,EAAEC,CAAC,IAAIZ,YAAY,CAACY,CAAD,EAAID,CAAJ,CAAlD;AAA0D,MAAA,KAAK,EAAEb,WAAW,CAACa,CAAD,CAA5E;AAAA,gBACGV;AADH,OAAW,SAAQU,CAAE,EAArB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGL,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCuBlB,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons({listToRender, setListToRender}) {\r\n  const staticButtons = listToRender\r\n  const [highlighted, setHighlighted] = useState(\"\")\r\n  const [defaultButtons] = useState(staticButtons)\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(defaultButtons, style))\r\n\r\n  const changeFilter = (item, position) => {\r\n    console.log(\"1\", highlighted, item.target.innerHTML)\r\n    if (highlighted === item.target.innerHTML) {\r\n      setButtonStyle(createButtonState(defaultButtons, style))\r\n      setListToRender(defaultButtons)\r\n      setHighlighted(\"\")\r\n      return\r\n    }\r\n\r\n    else {\r\n      let newButtonState = createButtonState(defaultButtons, style)\r\n      newButtonState = {...newButtonState, [position]: style.searchTypeOtherHighlight}\r\n      setButtonStyle(newButtonState)\r\n      setListToRender([item.target.innerHTML])\r\n      setHighlighted(item.target.innerHTML)\r\n    }\r\n\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return defaultButtons.map((item, i) => (\r\n      <div key={`button${i}`} onClick={e => changeFilter(e, i)} style={buttonStyle[i]}>\r\n        {item}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}