{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\focused\\\\focusedList.jsx\";\nimport { useRef } from \"react\";\nimport * as style from \"../../css/light/focusedList\";\nimport FocusedTitle from \"./focusedTitle\";\nimport FocusedHistory from \"./focusedHistory\";\nimport FocusedListItem from \"./focusedListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet focusedDataTitle = {\n  backgroundColor: \"#4382BC\",\n  textAlign: \"center\"\n};\nlet arrow = {\n  display: \"inline-block\",\n  width: \"5px\",\n  height: \"5px\",\n  borderRight: \"3px solid #4382BC\",\n  borderTop: \"3px solid #4382BC\"\n};\nlet arrowRight = { ...arrow,\n  transform: \"rotate(45deg)\",\n  margin: \"4px 0 0 5px\"\n};\nlet arrowDown = { ...arrow,\n  transform: \"rotate(135deg)\",\n  margin: \"4px 0 0 5px\"\n};\nexport default function FocusedList({\n  focused,\n  setFocused\n}) {\n  var _s = $RefreshSig$();\n\n  if (!focused[0]) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 27\n  }, this);\n\n  let focusedItem = require(`../../data/${focused[1]}/${focused[0]}.json`);\n\n  function ProfileJSON() {\n    _s();\n\n    const dataRef = useRef(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dataRef,\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: getJsontest()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(ProfileJSON, \"BQofqMcm0s00HjNTute9RxapU3s=\");\n\n  function FocusedData() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"hidden\",\n        display: \"flex\"\n      },\n      children: [\"                                     \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"97%\",\n          margin: \"12px auto 0px auto\",\n          border: \"1px solid black\",\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: focusedDataTitle,\n          children: \"Current Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProfileJSON, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  function stringify(data) {\n    if (!data) return \"undefined\";\n    if (data === null) return \"undefined\";\n\n    if (typeof data === \"object\") {\n      return Object.keys(data).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item, stringify(data[item])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this);\n  }\n\n  function getJsontest() {\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseEnter: e => {\n        e.currentTarget.style.backgroundColor = \"#b7eef5\";\n      },\n      onMouseLeave: e => {\n        e.currentTarget.style.backgroundColor = \"white\";\n      },\n      style: {\n        fontSize: \"11px\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FocusedListItem, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this));\n  }\n\n  function getJson() {\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"11px\",\n          textIndent: \"3px\",\n          width: \"40%\"\n        },\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"11px\"\n        },\n        children: stringify(focusedItem.resources[0].data[item])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this));\n  }\n\n  if (focusedItem.resources[0].data.associatedDevices) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.focusedContainer,\n      children: [/*#__PURE__*/_jsxDEV(FocusedTitle, {\n        setFocused: setFocused,\n        focusedItem: focusedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FocusedData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FocusedHistory, {\n        focusedItem: focusedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = FocusedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusedList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/focused/focusedList.jsx"],"names":["useRef","style","FocusedTitle","FocusedHistory","FocusedListItem","focusedDataTitle","backgroundColor","textAlign","arrow","display","width","height","borderRight","borderTop","arrowRight","transform","margin","arrowDown","FocusedList","focused","setFocused","focusedItem","require","ProfileJSON","dataRef","getJsontest","FocusedData","overflow","border","stringify","data","Object","keys","map","item","i","resources","e","currentTarget","fontSize","getJson","textIndent","associatedDevices","focusedContainer"],"mappings":"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","sourcesContent":["import { useRef} from \"react\";\r\nimport * as style from \"../../css/light/focusedList\";\r\nimport FocusedTitle from \"./focusedTitle\"\r\nimport FocusedHistory from \"./focusedHistory\";\r\nimport FocusedListItem from \"./focusedListItem\"\r\n\r\nlet focusedDataTitle = {\r\n  backgroundColor: \"#4382BC\",\r\n  textAlign: \"center\",\r\n}\r\n\r\nlet arrow = {\r\n  display: \"inline-block\", \r\n  width: \"5px\", \r\n  height: \"5px\", \r\n  \r\n  borderRight: \"3px solid #4382BC\", \r\n  borderTop: \"3px solid #4382BC\", \r\n}\r\n\r\nlet arrowRight = {\r\n  ...arrow, \r\n  transform: \"rotate(45deg)\",\r\n  margin: \"4px 0 0 5px\"\r\n}\r\n\r\nlet arrowDown = {\r\n  ...arrow, \r\n  transform: \"rotate(135deg)\",\r\n  margin: \"4px 0 0 5px\"\r\n}\r\n\r\nexport default function FocusedList({focused, setFocused}) {\r\n  if (!focused[0]) return <div></div>\r\n  let focusedItem = require(`../../data/${focused[1]}/${focused[0]}.json`)\r\n\r\n  function ProfileJSON() {\r\n    const dataRef = useRef(null)\r\n\r\n    return (\r\n      <div ref={dataRef} style={{backgroundColor: \"white\"}}>\r\n        {getJsontest()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function FocusedData() {\r\n    return (\r\n      <div style={{overflow: \"hidden\", display: \"flex\"}}>                                     {/*height: 398px*/}\r\n        <div style={{width: \"97%\", margin: \"12px auto 0px auto\", border: \"1px solid black\", backgroundColor: \"white\"}}>\r\n          <div style={focusedDataTitle}>Current Profile</div>\r\n          <ProfileJSON/>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  function stringify(data) {\r\n    if (!data) return \"undefined\"\r\n    if (data === null) return \"undefined\"\r\n\r\n    if (typeof(data) === \"object\") {\r\n      return Object.keys(data).map((item, i) => (\r\n        <div>\r\n          {item}\r\n          <div>\r\n            {item}\r\n            {stringify(data[item])}\r\n          </div>\r\n        </div>\r\n      ))\r\n    }\r\n    else return <div>{data}</div>\r\n  }\r\n\r\n  function getJsontest() {\r\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => (\r\n      <div \r\n        onMouseEnter={e => {e.currentTarget.style.backgroundColor = \"#b7eef5\"}}\r\n        onMouseLeave={e => {e.currentTarget.style.backgroundColor = \"white\"}}  \r\n        style={{fontSize: \"11px\", width: \"100%\"}}><FocusedListItem item={item}/></div>\r\n    ))\r\n  }\r\n\r\n  function getJson() {\r\n    return Object.keys(focusedItem.resources[0].data).map((item, i) => (\r\n      <div style={{display: \"flex\", width: \"100%\"}}>\r\n        <div style={{fontSize: \"11px\", textIndent:\"3px\", width: \"40%\"}}>\r\n          {item}\r\n        </div>\r\n        <div style={{fontSize: \"11px\"}}>\r\n          {stringify(focusedItem.resources[0].data[item])}\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  if (focusedItem.resources[0].data.associatedDevices) {\r\n    return (\r\n      <div style={style.focusedContainer}>\r\n        <FocusedTitle setFocused={setFocused} focusedItem={focusedItem}/>\r\n        <FocusedData/>\r\n        <FocusedHistory focusedItem={focusedItem}/>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}