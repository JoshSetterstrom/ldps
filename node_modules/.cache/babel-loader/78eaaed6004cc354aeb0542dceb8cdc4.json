{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Administrator/Desktop/ld/ldps/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Administrator/Desktop/ld/ldps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import getDeviceData from\"./getDeviceData\";import getUserData from\"./getUserData\";import getLineData from\"./getLineData\";import getVoicemailData from\"./getVoicemailData\";import getLasData from'./getLasData';import getDidData from'./getDidData';var routes=['phones','subscribers','lines','voicemail','did','las','location_hierarchy','profile_changes'];export default function callApi(){return _callApi.apply(this,arguments);}function _callApi(){_callApi=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var rawData,cleanData,locationHierarchy,profileChanges,promises;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:rawData={};cleanData={};locationHierarchy={};profileChanges={};promises=routes.map(function(route){return axios.get(\"\".concat(process.env.REACT_APP_PROD_URL).concat(route));});_context2.next=7;return axios.all(promises).then(axios.spread(function(){for(var _len=arguments.length,res=new Array(_len),_key=0;_key<_len;_key++){res[_key]=arguments[_key];}res.forEach(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var type;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:type=data.request.responseURL.split('/').at(-1);rawData[type]=data.data;_context.t0=type;_context.next=_context.t0==='phones'?5:_context.t0==='subscribers'?7:_context.t0==='lines'?9:_context.t0==='voicemail'?11:_context.t0==='did'?13:_context.t0==='las'?15:_context.t0==='location_hierarchy'?17:_context.t0==='profile_changes'?19:21;break;case 5:cleanData[type]=getDeviceData(data.data);return _context.abrupt(\"break\",22);case 7:cleanData[type]=getUserData(data.data);return _context.abrupt(\"break\",22);case 9:cleanData[type]=getLineData(data.data);return _context.abrupt(\"break\",22);case 11:cleanData[type]=getVoicemailData(data.data);return _context.abrupt(\"break\",22);case 13:cleanData[type]=getDidData(data.data);return _context.abrupt(\"break\",22);case 15:cleanData[type]=getLasData(data.data);return _context.abrupt(\"break\",22);case 17:locationHierarchy=data.data;return _context.abrupt(\"break\",22);case 19:profileChanges=data.data;return _context.abrupt(\"break\",22);case 21:return _context.abrupt(\"break\",22);case 22:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());})).then(function(){return new Promise(function(resolve,reject){resolve({\"rawData\":rawData,\"cleanData\":cleanData,\"locationHierarchy\":locationHierarchy,\"profileChanges\":profileChanges});reject(\"fail\");});});case 7:return _context2.abrupt(\"return\",_context2.sent);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _callApi.apply(this,arguments);};","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/ld/ldps/src/common/api/callApi.js"],"names":["axios","getDeviceData","getUserData","getLineData","getVoicemailData","getLasData","getDidData","routes","callApi","rawData","cleanData","locationHierarchy","profileChanges","promises","map","route","get","process","env","REACT_APP_PROD_URL","all","then","spread","res","forEach","data","type","request","responseURL","split","at","Promise","resolve","reject"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,GAAIC,CAAAA,MAAM,CAAG,CAAC,QAAD,CAAW,aAAX,CAA0B,OAA1B,CAAmC,WAAnC,CAAgD,KAAhD,CAAuD,KAAvD,CAA8D,oBAA9D,CAAoF,iBAApF,CAAb,CAEA,uBAA8BC,CAAAA,OAA9B,0C,qFAAe,wMACTC,OADS,CACC,EADD,CAETC,SAFS,CAEG,EAFH,CAGTC,iBAHS,CAGW,EAHX,CAITC,cAJS,CAIQ,EAJR,CAKTC,QALS,CAKEN,MAAM,CAACO,GAAP,CAAW,SAAAC,KAAK,QAAIf,CAAAA,KAAK,CAACgB,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,kBAAzB,SAA8CJ,KAA9C,EAAJ,EAAhB,CALF,wBAOAf,CAAAA,KAAK,CAACoB,GAAN,CAAUP,QAAV,EACVQ,IADU,CACLrB,KAAK,CAACsB,MAAN,CAAa,UAAY,+BAARC,GAAQ,0CAARA,GAAQ,wBAC7BA,GAAG,CAACC,OAAJ,0FAAY,iBAAMC,IAAN,2HACNC,IADM,CACMD,IAAI,CAACE,OAAL,CAAaC,WAAb,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,EAApC,CAAuC,CAAC,CAAxC,CADN,CAEVrB,OAAO,CAACiB,IAAD,CAAP,CAAgBD,IAAI,CAACA,IAArB,CAFU,YAIHC,IAJG,6BAKH,QALG,iBAMH,aANG,iBAOH,OAPG,iBAQH,WARG,kBASH,KATG,kBAUH,KAVG,kBAWH,oBAXG,kBAYH,iBAZG,oBAKmBhB,SAAS,CAACgB,IAAD,CAAT,CAAoBzB,aAAa,CAACwB,IAAI,CAACA,IAAN,CAAjC,CALnB,0CAMmBf,SAAS,CAACgB,IAAD,CAAT,CAAoBxB,WAAW,CAACuB,IAAI,CAACA,IAAN,CAA/B,CANnB,0CAOmBf,SAAS,CAACgB,IAAD,CAAT,CAAoBvB,WAAW,CAACsB,IAAI,CAACA,IAAN,CAA/B,CAPnB,2CAQmBf,SAAS,CAACgB,IAAD,CAAT,CAAoBtB,gBAAgB,CAACqB,IAAI,CAACA,IAAN,CAApC,CARnB,2CASmBf,SAAS,CAACgB,IAAD,CAAT,CAAoBpB,UAAU,CAACmB,IAAI,CAACA,IAAN,CAA9B,CATnB,2CAUmBf,SAAS,CAACgB,IAAD,CAAT,CAAoBrB,UAAU,CAACoB,IAAI,CAACA,IAAN,CAA9B,CAVnB,2CAWmBd,iBAAiB,CAAGc,IAAI,CAACA,IAAzB,CAXnB,2CAYmBb,cAAc,CAAMa,IAAI,CAACA,IAAzB,CAZnB,qIAAZ,gEAgBD,CAjBK,CADK,EAmBVJ,IAnBU,CAmBL,UAAM,CACV,MAAO,IAAIU,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCD,OAAO,CAAC,CACN,UAAWvB,OADL,CAEN,YAAaC,SAFP,CAGN,oBAAqBC,iBAHf,CAIN,iBAAkBC,cAJZ,CAAD,CAAP,CAMAqB,MAAM,CAAC,MAAD,CAAN,CACD,CARM,CAAP,CASD,CA7BU,CAPA,iH,0CAqCd","sourcesContent":["import axios from 'axios';\r\nimport getDeviceData from \"./getDeviceData\";\r\nimport getUserData from \"./getUserData\";\r\nimport getLineData from \"./getLineData\";\r\nimport getVoicemailData from \"./getVoicemailData\";\r\nimport getLasData from './getLasData';\r\nimport getDidData from './getDidData';\r\n\r\nlet routes = ['phones', 'subscribers', 'lines', 'voicemail', 'did', 'las', 'location_hierarchy', 'profile_changes']\r\n\r\nexport default async function callApi() {\r\n  let rawData = {};\r\n  let cleanData = {};\r\n  let locationHierarchy = {};\r\n  let profileChanges = {};\r\n  let promises = routes.map(route => axios.get(`${process.env.REACT_APP_PROD_URL}${route}`))\r\n\r\n  return await axios.all(promises)\r\n    .then(axios.spread((...res) => {\r\n      res.forEach(async data => {\r\n        let type      = data.request.responseURL.split('/').at(-1)\r\n        rawData[type] = data.data\r\n\r\n        switch(type) {\r\n          case 'phones':             cleanData[type]   = getDeviceData(data.data); break;\r\n          case 'subscribers':        cleanData[type]   = getUserData(data.data); break;\r\n          case 'lines':              cleanData[type]   = getLineData(data.data); break;\r\n          case 'voicemail':          cleanData[type]   = getVoicemailData(data.data); break;\r\n          case 'did':                cleanData[type]   = getDidData(data.data); break;\r\n          case 'las':                cleanData[type]   = getLasData(data.data); break;\r\n          case 'location_hierarchy': locationHierarchy = data.data; break;\r\n          case 'profile_changes':    profileChanges    = data.data; break;\r\n          default:                   break\r\n        }\r\n      });\r\n    }))\r\n    .then(() => {\r\n      return new Promise((resolve, reject) => {\r\n        resolve({\r\n          \"rawData\": rawData,\r\n          \"cleanData\": cleanData, \r\n          \"locationHierarchy\": locationHierarchy,\r\n          \"profileChanges\": profileChanges\r\n        })\r\n        reject(\"fail\")\r\n      });\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}