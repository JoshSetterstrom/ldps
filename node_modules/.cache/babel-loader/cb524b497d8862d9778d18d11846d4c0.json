{"ast":null,"code":"export default function getData(data) {\n  let profileList = [];\n  data['data'].forEach((profile, i) => {\n    profileList.push([{\n      type: \"mac\",\n      index: \"MAC Address\",\n      data: (() => {\n        let destruct = profile['data']['name'].toUpperCase();\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"product\",\n      index: \"Product\",\n      data: (() => {\n        let destruct = profile['data']['product'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"user\",\n      index: \"User ID\",\n      data: (() => {\n        let destruct = profile['data']['ownerUserName'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"description\",\n      index: \"Description\",\n      data: (() => {\n        let destruct = profile['data']['description'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"primary\",\n      index: \"Primary Line\",\n      data: (() => {\n        let destruct = profile['data']['lines']['line'][0]['dirn']['pattern'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"mask\",\n      index: \"E164 Mask\",\n      data: (() => {\n        let destruct = profile['lines']['line'][0]['e164Mask'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }, {\n      type: \"location\",\n      index: \"Location\",\n      data: (() => {\n        let destruct = profile['meta']['hierarchy'];\n\n        try {\n          return destruct ? destruct : \"\";\n        } catch {\n          return \"\";\n        }\n      })()\n    }]);\n  });\n  return profileList;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/dataRetrieval/getDeviceData.js"],"names":["getData","data","profileList","forEach","profile","i","push","type","index","destruct","toUpperCase"],"mappings":"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","sourcesContent":["export default function getData(data) {\r\n  let profileList = []\r\n\r\n  data['data'].forEach((profile, i) => {\r\n    profileList.push([\r\n      {\r\n        type: \"mac\",\r\n        index: \"MAC Address\",\r\n        data: (() => {\r\n          let destruct = profile['data']['name'].toUpperCase()\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"product\",\r\n        index: \"Product\",\r\n        data: (() => {\r\n          let destruct = profile['data']['product']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"user\",\r\n        index: \"User ID\",\r\n        data: (() => {\r\n          let destruct = profile['data']['ownerUserName']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"description\",\r\n        index: \"Description\",\r\n        data: (() => {\r\n          let destruct = profile['data']['description']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"primary\",\r\n        index: \"Primary Line\",\r\n        data: (() => {\r\n          let destruct = profile['data']['lines']['line'][0]['dirn']['pattern']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"mask\",\r\n        index: \"E164 Mask\",\r\n        data: (() => {\r\n          let destruct = profile['lines']['line'][0]['e164Mask']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      },\r\n      {\r\n        type: \"location\",\r\n        index: \"Location\",\r\n        data: (() => {\r\n          let destruct = profile['meta']['hierarchy']\r\n          try {return destruct ? destruct : \"\"}\r\n          catch {return \"\"}\r\n        })()\r\n      }\r\n    ])\r\n  })\r\n\r\n  return profileList\r\n}"]},"metadata":{},"sourceType":"module"}