{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport * as style from \"../css/searchList\";\nimport ListItem from \"./listItem\";\nimport IndexMenu from \"./indexMenu\";\nimport getDeviceData from \"./getDeviceData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet string = \"\";\nlet searchData = getDeviceData;\nlet relevantSearch = \"mac\";\nlet filteredSearch = []; //Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\n\nconst returnSearch = () => {\n  let infoType = [];\n  let unfilteredSearch = [];\n  searchData.forEach(profile => {\n    profile.forEach(e => {\n      if (!e.data) e.data = \"\";\n\n      if (e.data.toString().toLowerCase().includes(string)) {\n        infoType.push(e.type);\n        unfilteredSearch.push(profile);\n      }\n    });\n  });\n  filteredSearch = [...new Set(unfilteredSearch)]; //Highlights most relavent searchindex.\n\n  let counts = [];\n  infoType.forEach(e => {\n    counts[e] = (counts[e] || 0) + 1;\n  });\n  relevantSearch = Object.keys(counts)[0];\n  infoType = [];\n};\n\nexport default function SearchList() {\n  _s();\n\n  const [device, setDevice] = useState(searchData);\n  const [searchTypeLeftHighlight, setSearchTypeLeftHighlight] = useState(\"false\");\n  const [searchTypeHighlight, setSearchTypeHighlight] = useState(\"false\");\n\n  const handleInputChange = e => {\n    string = e.target.value;\n    returnSearch();\n    setDevice(filteredSearch);\n  };\n\n  const handleSearchTypeChange = e => {\n    // setSearchTypeLeftHighlight(\"true\")\n    // setSearchTypeLeftStyle(style.searchTypeLeftStyle)\n    // setSearchTypeStyle(style.searchTypeStyle)\n    if (e.target.textContent === \"Device\" && (e.target.state === undefined || e.target.state === \"false\")) setSearchTypeLeftHighlight(\"true\");else setSearchTypeLeftHighlight(\"false\");\n    console.log(e.target.state); // if (e.target.highlight === \"true\" && e.target.textContent === \"User\") setSearchTypeStyle(style.searchTypeStyleHighlight)\n    // if (e.target.highlight === \"true\" && e.target.textContent === \"Device\") setSearchTypeLeftStyle(style.searchTypeLeftStyleHighlight)\n  }; //Renders a list with all devices returned to filteredSearch and passed to device state.\n\n\n  const renderPhoneList = () => {\n    return device.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n      mac: device[i][0].data,\n      user: device[i][1].data.toLowerCase(),\n      line: device[i][2].data,\n      mask: device[i][3].data,\n      ip: device[i][4].data,\n      location: device[i][5].data.toLowerCase()\n    }, `ID${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        state: searchTypeLeftHighlight,\n        onClick: e => handleSearchTypeChange(e),\n        style: style.searchTypeLeftStyle,\n        children: \"Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        state: searchTypeHighlight,\n        onClick: e => handleSearchTypeChange(e),\n        style: style.searchTypeStyle,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.searchInputStyle,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IndexMenu, {\n      relevantSearch: relevantSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.listContainerStyle,\n      children: renderPhoneList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchList, \"3sZ4oQjZMruHnYFJNd34dxupqck=\");\n\n_c = SearchList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchList\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList.jsx"],"names":["React","useState","style","ListItem","IndexMenu","getDeviceData","string","searchData","relevantSearch","filteredSearch","returnSearch","infoType","unfilteredSearch","forEach","profile","e","data","toString","toLowerCase","includes","push","type","Set","counts","Object","keys","SearchList","device","setDevice","searchTypeLeftHighlight","setSearchTypeLeftHighlight","searchTypeHighlight","setSearchTypeHighlight","handleInputChange","target","value","handleSearchTypeChange","textContent","state","undefined","console","log","renderPhoneList","map","item","i","display","searchTypeLeftStyle","searchTypeStyle","searchInputStyle","listContainerStyle"],"mappings":"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","sourcesContent":["import {React, useState} from 'react';\r\nimport * as style from \"../css/searchList\";\r\nimport ListItem from \"./listItem\";\r\nimport IndexMenu from \"./indexMenu\";\r\nimport getDeviceData from \"./getDeviceData\";\r\n\r\nlet string = \"\";\r\nlet searchData = getDeviceData;\r\nlet relevantSearch = \"mac\";\r\nlet filteredSearch = [];\r\n\r\n//Removes duplicates and returns a list of devices that include any data value corresponding with user input string.\r\nconst returnSearch = () => {\r\n  let infoType = [];\r\n  let unfilteredSearch = [];\r\n\r\n  searchData.forEach(profile => {\r\n    profile.forEach(e => {\r\n      if (!e.data) e.data = \"\";\r\n      if ((e.data).toString().toLowerCase().includes(string)) {\r\n        infoType.push(e.type);\r\n        unfilteredSearch.push(profile);\r\n      }\r\n    });\r\n  });\r\n  filteredSearch = [...new Set(unfilteredSearch)];\r\n\r\n  //Highlights most relavent searchindex.\r\n  let counts = [];\r\n  infoType.forEach(e => {\r\n    counts[e] = (counts[e] || 0) + 1;\r\n  });\r\n  relevantSearch = Object.keys(counts)[0];\r\n  infoType = [];\r\n};\r\n\r\nexport default function SearchList() {\r\n  const [device, setDevice] = useState(searchData);\r\n  const [searchTypeLeftHighlight, setSearchTypeLeftHighlight] = useState(\"false\")\r\n  const [searchTypeHighlight, setSearchTypeHighlight] = useState(\"false\")\r\n  \r\n  const handleInputChange = e => {\r\n    string = e.target.value;\r\n    returnSearch();\r\n    setDevice(filteredSearch);\r\n  }\r\n\r\n  const handleSearchTypeChange = e => {\r\n    // setSearchTypeLeftHighlight(\"true\")\r\n    // setSearchTypeLeftStyle(style.searchTypeLeftStyle)\r\n    // setSearchTypeStyle(style.searchTypeStyle)\r\n    \r\n    if (e.target.textContent === \"Device\" && (e.target.state === undefined || e.target.state === \"false\")) setSearchTypeLeftHighlight(\"true\")\r\n    else setSearchTypeLeftHighlight(\"false\")\r\n    \r\n    console.log(e.target.state)\r\n    // if (e.target.highlight === \"true\" && e.target.textContent === \"User\") setSearchTypeStyle(style.searchTypeStyleHighlight)\r\n    \r\n    // if (e.target.highlight === \"true\" && e.target.textContent === \"Device\") setSearchTypeLeftStyle(style.searchTypeLeftStyleHighlight)\r\n  }\r\n\r\n  //Renders a list with all devices returned to filteredSearch and passed to device state.\r\n  const renderPhoneList = () => {\r\n    return device.map((item, i) => (\r\n      <ListItem \r\n        key={`ID${i}`}\r\n        mac={device[i][0].data}\r\n        user={device[i][1].data.toLowerCase()}\r\n        line={device[i][2].data}\r\n        mask={device[i][3].data}\r\n        ip={device[i][4].data}\r\n        location={device[i][5].data.toLowerCase()}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display: \"flex\"}}>\r\n        <div state={searchTypeLeftHighlight} onClick={e => handleSearchTypeChange(e)} style={style.searchTypeLeftStyle}>Device</div>\r\n        <div state={searchTypeHighlight} onClick={e => handleSearchTypeChange(e)} style={style.searchTypeStyle}>User</div>\r\n        <input style={style.searchInputStyle} onChange={e => handleInputChange(e)}/>\r\n      </div>\r\n      <IndexMenu relevantSearch={relevantSearch}/>\r\n      <div style={style.listContainerStyle}>{renderPhoneList()}</div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}