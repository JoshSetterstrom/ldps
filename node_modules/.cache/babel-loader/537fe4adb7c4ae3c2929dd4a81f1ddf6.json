{"ast":null,"code":"import hierarchy from \"../../data/location_hierarchy.json\";\nexport default function getLocationHierarchy(item, type) {\n  let link = \"\";\n  let store = \"\";\n\n  try {\n    let file = require(`../../data/${type}s/${phone}.json`);\n\n    let pkid = file.resources[0].meta.pkid;\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\";else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1];\n    let storeId = hierarchy.stores[store];\n    link = hierarchy[`link_${type}`];\n    link = link.replace(\"{1}\", storeId);\n    link = link.replace(\"{2}\", pkid);\n  } catch {\n    /*pass*/\n  }\n\n  return link;\n}","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/getLocationHierarchy.js"],"names":["hierarchy","getLocationHierarchy","item","type","link","store","file","require","phone","pkid","resources","meta","includes","split","storeId","stores","replace"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oCAAtB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AACvD,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI;AACF,QAAIC,IAAI,GAAGC,OAAO,CAAE,cAAaJ,IAAK,KAAIK,KAAM,OAA9B,CAAlB;;AACA,QAAIC,IAAI,GAAGH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBF,IAAlC;AAEA,QAAIH,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBX,SAAvB,CAAiCY,QAAjC,CAA0C,aAA1C,CAAJ,EAA8DP,KAAK,GAAG,aAAR,CAA9D,KACKA,KAAK,GAAG,WAAWC,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBC,IAAlB,CAAuBX,SAAvB,CAAiCa,KAAjC,CAAuC,QAAvC,EAAiD,CAAjD,CAAnB;AAEL,QAAIC,OAAO,GAAGd,SAAS,CAACe,MAAV,CAAiBV,KAAjB,CAAd;AACAD,IAAAA,IAAI,GAAGJ,SAAS,CAAE,QAAOG,IAAK,EAAd,CAAhB;AACAC,IAAAA,IAAI,GAAGA,IAAI,CAACY,OAAL,CAAa,KAAb,EAAoBF,OAApB,CAAP;AACAV,IAAAA,IAAI,GAAGA,IAAI,CAACY,OAAL,CAAa,KAAb,EAAoBP,IAApB,CAAP;AAEC,GAZH,CAaA,MAAM;AAAC;AAAS;;AAEhB,SAAOL,IAAP;AACD","sourcesContent":["import hierarchy from \"../../data/location_hierarchy.json\"\r\n\r\nexport default function getLocationHierarchy(item, type) {\r\n  let link = \"\"\r\n  let store = \"\"\r\n  try {\r\n    let file = require(`../../data/${type}s/${phone}.json`)\r\n    let pkid = file.resources[0].meta.pkid\r\n\r\n    if (file.resources[0].meta.hierarchy.includes(\"Head Office\")) store = \"head_office\"\r\n    else store = \"store_\" + file.resources[0].meta.hierarchy.split(\"Store \")[1]\r\n    \r\n    let storeId = hierarchy.stores[store]\r\n    link = hierarchy[`link_${type}`]\r\n    link = link.replace(\"{1}\", storeId)\r\n    link = link.replace(\"{2}\", pkid)\r\n\r\n    }\r\n  catch {/*pass*/}\r\n\r\n  return link\r\n}"]},"metadata":{},"sourceType":"module"}