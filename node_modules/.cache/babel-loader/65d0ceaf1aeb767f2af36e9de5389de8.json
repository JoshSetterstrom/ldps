{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\total.jsx\";\nimport React, { useCallback } from \"react\";\nimport * as style from \"../../css/light/totalBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Total({\n  setPageNumber,\n  profile,\n  listToRender\n}) {\n  const renderTotalItems = () => {\n    return listToRender === null || listToRender === void 0 ? void 0 : listToRender.map((item, i) => {\n      var _profile$item$toLower;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalBarItem,\n        children: `${item}: ${(_profile$item$toLower = profile[item.toLowerCase()]) === null || _profile$item$toLower === void 0 ? void 0 : _profile$item$toLower.length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const renderItemsPerPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalButton // onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButtonLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitle1,\n      children: \"Total Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), renderTotalItems(), renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this); // const onKeyPress = useCallback(e => {\n  //   if (e.key === \"Enter\") setPageNumber(tempItem)\n  // }, [setPageNumber, tempItem])\n  // const renderTotalBarItems = () => {\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\n  //     <div style={style.totalBarItem}>\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\n  //     </div>\n  //   ))\n  // }\n  // return (\n  //   <div style={style.totalContainer}>\n  //     <div style={style.totalTitle1}>Total Count</div>\n  //     {renderTotalBarItems()}\n  //     <div style={style.totalTitle2}>Items/Page</div>\n  //     <input placeholder=\"10\" style={style.totalInput} \n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\n  //       onKeyPress={onKeyPress}\n  //     />\n  //     <div \n  //       style={style.totalButton}\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\n  //     >\n  //       <div style={style.totalButtonLine}></div>\n  //     </div>\n  //   </div>\n  // )\n}\n_c = Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/total.jsx"],"names":["React","useCallback","style","Total","setPageNumber","profile","listToRender","renderTotalItems","map","item","i","totalBarItem","toLowerCase","length","renderItemsPerPage","totalButton","totalButtonLine","totalContainer","totalTitle1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAf,EAAuD;AAEpE,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,WAAOD,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEE,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP;AAAA;;AAAA,0BACvB;AAAK,QAAA,KAAK,EAAER,KAAK,CAACS,YAAlB;AAAA,kBAAkC,GAAEF,IAAK,KAAR,yBAAYJ,OAAO,CAACI,IAAI,CAACG,WAAL,EAAD,CAAnB,0DAAY,sBAA6BC,MAAO;AAAjF;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAlB,CAAP;AAGD,GAJD;;AAMA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AACI,MAAA,KAAK,EAAEZ,KAAK,CAACa,WADjB,CAEI;AAFJ;AAAA,6BAIE;AAAK,QAAA,KAAK,EAAEb,KAAK,CAACc;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD;;AAWA,sBACE;AAAK,IAAA,KAAK,EAAEd,KAAK,CAACe,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEf,KAAK,CAACgB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGX,gBAAgB,EAFnB,EAGGO,kBAAkB,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAnBoE,CA2BpE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;KAxDuBX,K","sourcesContent":["import React, {useCallback} from \"react\"\r\nimport * as style from \"../../css/light/totalBar\"\r\n\r\nexport default function Total({setPageNumber, profile, listToRender}) {\r\n\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map((item, i) => (\r\n      <div style={style.totalBarItem}>{`${item}: ${profile[item.toLowerCase()]?.length}`}</div>\r\n    ))\r\n  }\r\n\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div \r\n          style={style.totalButton}\r\n          // onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\r\n          >\r\n        <div style={style.totalButtonLine}></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitle1}>Total Count</div>\r\n      {renderTotalItems()}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n\r\n  // const onKeyPress = useCallback(e => {\r\n  //   if (e.key === \"Enter\") setPageNumber(tempItem)\r\n  // }, [setPageNumber, tempItem])\r\n\r\n  // const renderTotalBarItems = () => {\r\n  //   return [\"Device\", \"User\", \"DID\", \"DID\"].map((item, i ) => (\r\n  //     <div style={style.totalBarItem}>\r\n  //       {`${item}: ${profile[item.toLowerCase()].length}`}\r\n  //     </div>\r\n  //   ))\r\n  // }\r\n\r\n  // return (\r\n  //   <div style={style.totalContainer}>\r\n  //     <div style={style.totalTitle1}>Total Count</div>\r\n  //     {renderTotalBarItems()}\r\n  //     <div style={style.totalTitle2}>Items/Page</div>\r\n  //     <input placeholder=\"10\" style={style.totalInput} \r\n  //       onChange={useCallback(e =>setTempItem(parseInt(e.target.value)), [setTempItem])}\r\n  //       onKeyPress={onKeyPress}\r\n  //     />\r\n  //     <div \r\n  //       style={style.totalButton}\r\n  //       onClick={useCallback(() => setPageNumber(tempItem), [tempItem, setPageNumber])}\r\n  //     >\r\n  //       <div style={style.totalButtonLine}></div>\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}"]},"metadata":{},"sourceType":"module"}