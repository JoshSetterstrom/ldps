{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const staticButtons = props.listToRender;\n  const [buttonsToRender] = useState(staticButtons);\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style));\n\n  const changeFilter = (item, position) => {\n    buttonStyle[position].border ? setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOther\n    }) : setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOtherHighlight\n    });\n\n    if (!props.listToRender.includes(item.target.innerHTML)) {\n      let temp = props.listToRender;\n      temp.push(item.target.innerHTML);\n      return props.setListToRender(temp.sort());\n    }\n\n    let temp = props.listToRender;\n    temp = temp.filter(e => {\n      return e !== item.target.innerHTML;\n    });\n    return props.setListToRender(temp);\n  };\n\n  const renderButtons = () => {\n    return buttonsToRender.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        changeFilter(e, i);\n        console.log(props.listToRender);\n      },\n      style: buttonStyle[i],\n      children: item\n    }, `B${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileButtons, \"SmJqGRWcBlPdv7YGDQOQ3V4GiwI=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","props","staticButtons","listToRender","buttonsToRender","buttonStyle","setButtonStyle","changeFilter","item","position","border","searchTypeOther","searchTypeOtherHighlight","includes","target","innerHTML","temp","push","setListToRender","sort","filter","e","renderButtons","map","i","console","log","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMC,aAAa,GAAGD,KAAK,CAACE,YAA5B;AACA,QAAM,CAACC,eAAD,IAAoBL,QAAQ,CAACG,aAAD,CAAlC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACF,iBAAiB,CAACO,eAAD,EAAkBR,KAAlB,CAAlB,CAA9C;;AAEA,QAAMW,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvCJ,IAAAA,WAAW,CAACI,QAAD,CAAX,CAAsBC,MAAtB,GACEJ,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACI,QAAD,GAAYb,KAAK,CAACe;AAAnC,KAAD,CADhB,GAEEL,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACI,QAAD,GAAYb,KAAK,CAACgB;AAAnC,KAAD,CAFhB;;AAIA,QAAI,CAACX,KAAK,CAACE,YAAN,CAAmBU,QAAnB,CAA4BL,IAAI,CAACM,MAAL,CAAYC,SAAxC,CAAL,EAAyD;AACvD,UAAIC,IAAI,GAAGf,KAAK,CAACE,YAAjB;AACAa,MAAAA,IAAI,CAACC,IAAL,CAAUT,IAAI,CAACM,MAAL,CAAYC,SAAtB;AACA,aAAOd,KAAK,CAACiB,eAAN,CAAsBF,IAAI,CAACG,IAAL,EAAtB,CAAP;AACD;;AACD,QAAIH,IAAI,GAAGf,KAAK,CAACE,YAAjB;AACAa,IAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAaC,CAAD,IAAO;AAAC,aAAOA,CAAC,KAAKb,IAAI,CAACM,MAAL,CAAYC,SAAzB;AAAmC,KAAvD,CAAP;AACA,WAAOd,KAAK,CAACiB,eAAN,CAAsBF,IAAtB,CAAP;AACD,GAbD;;AAeA,QAAMM,aAAa,GAAG,MAAM;AAC1B,WAAOlB,eAAe,CAACmB,GAAhB,CAAoB,CAACf,IAAD,EAAOgB,CAAP,kBACzB;AAAmB,MAAA,OAAO,EAAGH,CAAD,IAAO;AAACd,QAAAA,YAAY,CAACc,CAAD,EAAIG,CAAJ,CAAZ;AAAoBC,QAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAK,CAACE,YAAlB;AAAgC,OAAxF;AAA0F,MAAA,KAAK,EAAEE,WAAW,CAACmB,CAAD,CAA5G;AAAA,gBACGhB;AADH,OAAW,IAAGgB,CAAE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGN,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjCuBtB,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const staticButtons = props.listToRender\r\n  const [buttonsToRender] = useState(staticButtons)\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style))\r\n\r\n  const changeFilter = (item, position) => {\r\n    buttonStyle[position].border \r\n    ? setButtonStyle({...buttonStyle, [position]: style.searchTypeOther})\r\n    : setButtonStyle({...buttonStyle, [position]: style.searchTypeOtherHighlight})\r\n\r\n    if (!props.listToRender.includes(item.target.innerHTML)) {\r\n      let temp = props.listToRender\r\n      temp.push(item.target.innerHTML)\r\n      return props.setListToRender(temp.sort())\r\n    }\r\n    let temp = props.listToRender\r\n    temp = temp.filter((e) => {return e !== item.target.innerHTML})\r\n    return props.setListToRender(temp)\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttonsToRender.map((item, i) => (\r\n      <div key={`B${i}`} onClick={(e) => {changeFilter(e, i); console.log(props.listToRender)}} style={buttonStyle[i]}>\r\n        {item}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}