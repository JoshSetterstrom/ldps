{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\profileTotal\\\\profileTotal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport * as style from \"./style/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileTotalItem(_ref) {\n  var _profileDataToRender$;\n\n  let {\n    item,\n    style,\n    profileDataToRender\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    style: style.totalBarItem,\n    children: `${item}: ${(_profileDataToRender$ = profileDataToRender[item.toLowerCase()]) === null || _profileDataToRender$ === void 0 ? void 0 : _profileDataToRender$.length}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n}\n\n_c = ProfileTotalItem;\nexport default function ProfileTotal(_ref2) {\n  _s();\n\n  let {\n    totalToRenderNumber,\n    setTotalToRenderNumber,\n    profileDataToRender,\n    listToRender\n  } = _ref2;\n  const [userInputRecord, setUserInputRecord] = useState(\"\"); // Event listener to check items/page value on user input // \n\n  const onKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord);\n  }, [setTotalToRenderNumber, userInputRecord]); // Renders each total item //\n  // What's rendered is dependent on the listToRender state //\n\n  const renderTotalItems = () => {\n    return listToRender === null || listToRender === void 0 ? void 0 : listToRender.map(item => /*#__PURE__*/_jsxDEV(ProfileTotalItem, {\n      item: item,\n      style: style.totalBarItem,\n      profileDataToRender: profileDataToRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this) // <div style={style.totalBarItem}>\n    //   {`${item}: ${profileDataToRender[item.toLowerCase()]?.length}`}\n    // </div>\n    );\n  }; // Renders items/page element //\n\n\n  const renderItemsPerPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginLeft: \"auto\",\n        paddingRight: \"3px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalTitleOther,\n        children: \"Items/Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: totalToRenderNumber,\n        style: style.totalInput,\n        onChange: e => setUserInputRecord(parseInt(e.target.value)),\n        onKeyPress: onKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style.totalButton,\n        onClick: () => setTotalToRenderNumber(userInputRecord),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style.totalButtonLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }; // Renders all components of ProfileTotal //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.totalContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.totalTitleMain,\n      children: \"Total Count:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), renderTotalItems(), renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileTotal, \"3dh7auNqujkmNsFgyGjhAzUMpD4=\");\n\n_c2 = ProfileTotal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileTotalItem\");\n$RefreshReg$(_c2, \"ProfileTotal\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/profileTotal/profileTotal.jsx"],"names":["React","useCallback","useState","style","ProfileTotalItem","item","profileDataToRender","totalBarItem","toLowerCase","length","ProfileTotal","totalToRenderNumber","setTotalToRenderNumber","listToRender","userInputRecord","setUserInputRecord","onKeyPress","e","key","renderTotalItems","map","renderItemsPerPage","display","marginLeft","paddingRight","totalTitleOther","totalInput","parseInt","target","value","totalButton","totalButtonLine","totalContainer","totalTitleMain"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;;;AAEA,SAASC,gBAAT,OAA8D;AAAA;;AAAA,MAApC;AAACC,IAAAA,IAAD;AAAOF,IAAAA,KAAP;AAAcG,IAAAA;AAAd,GAAoC;;AAC5D;AAAA;AAAK,IAAA,KAAK,EAAEH,KAAK,CAACI,YAAlB;AAAA,cACI,GAAEF,IAAK,KAAR,yBAAYC,mBAAmB,CAACD,IAAI,CAACG,WAAL,EAAD,CAA/B,0DAAY,sBAAyCC,MAAO;AAD/D;AAAA;AAAA;AAAA;AAAA;AAGD;;KAJQL,gB;AAMT,eAAe,SAASM,YAAT,QAAwG;AAAA;;AAAA,MAAlF;AAACC,IAAAA,mBAAD;AAAsBC,IAAAA,sBAAtB;AAA8CN,IAAAA,mBAA9C;AAAmEO,IAAAA;AAAnE,GAAkF;AACrH,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD,CADqH,CAIrH;;AACA,QAAMc,UAAU,GAAGf,WAAW,CAACgB,CAAC,IAAI;AAClC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBN,sBAAsB,CAACE,eAAD,CAAtB;AACxB,GAF6B,EAE3B,CAACF,sBAAD,EAAyBE,eAAzB,CAF2B,CAA9B,CALqH,CAUrH;AACA;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,WAAON,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEO,GAAd,CAAkBf,IAAI,iBAC3B,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACI,YAFf;AAGE,MAAA,mBAAmB,EAAED;AAHvB;AAAA;AAAA;AAAA;AAAA,YAD2B,CAM3B;AACA;AACA;AARK,KAAP;AAUD,GAXD,CAZqH,CA0BrH;;;AACA,QAAMe,kBAAkB,GAAG,MAAM;AAC/B,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE,MAA9B;AAAsCC,QAAAA,YAAY,EAAE;AAApD,OAAZ;AAAA,8BACE;AAAK,QAAA,KAAK,EAAErB,KAAK,CAACsB,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACI,QAAA,WAAW,EAAEd,mBADjB;AAEI,QAAA,KAAK,EAAER,KAAK,CAACuB,UAFjB;AAGI,QAAA,QAAQ,EAAET,CAAC,IAAIF,kBAAkB,CAACY,QAAQ,CAACV,CAAC,CAACW,MAAF,CAASC,KAAV,CAAT,CAHrC;AAII,QAAA,UAAU,EAAEb;AAJhB;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AACI,QAAA,KAAK,EAAEb,KAAK,CAAC2B,WADjB;AAEI,QAAA,OAAO,EAAE,MAAMlB,sBAAsB,CAACE,eAAD,CAFzC;AAAA,+BAGE;AAAK,UAAA,KAAK,EAAEX,KAAK,CAAC4B;AAAlB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GArBD,CA3BqH,CAmDrH;;;AACA,sBACE;AAAK,IAAA,KAAK,EAAE5B,KAAK,CAAC6B,cAAlB;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE7B,KAAK,CAAC8B,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGd,gBAAgB,EAFnB,EAGGE,kBAAkB,EAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3DuBX,Y;;MAAAA,Y","sourcesContent":["import React, {useCallback, useState} from \"react\"\r\nimport * as style from \"./style/css\"\r\n\r\nfunction ProfileTotalItem({item, style, profileDataToRender}) {\r\n  <div style={style.totalBarItem}>\r\n    {`${item}: ${profileDataToRender[item.toLowerCase()]?.length}`}\r\n  </div>\r\n}\r\n\r\nexport default function ProfileTotal({totalToRenderNumber, setTotalToRenderNumber, profileDataToRender, listToRender}) {\r\n  const [userInputRecord, setUserInputRecord] = useState(\"\")\r\n\r\n\r\n  // Event listener to check items/page value on user input // \r\n  const onKeyPress = useCallback(e => {\r\n    if (e.key === \"Enter\") setTotalToRenderNumber(userInputRecord)\r\n  }, [setTotalToRenderNumber, userInputRecord])\r\n\r\n\r\n  // Renders each total item //\r\n  // What's rendered is dependent on the listToRender state //\r\n  const renderTotalItems = () => {\r\n    return listToRender?.map(item => (\r\n      <ProfileTotalItem\r\n        item={item}\r\n        style={style.totalBarItem}\r\n        profileDataToRender={profileDataToRender}/>\r\n\r\n      // <div style={style.totalBarItem}>\r\n      //   {`${item}: ${profileDataToRender[item.toLowerCase()]?.length}`}\r\n      // </div>\r\n    ))\r\n  }\r\n\r\n\r\n  // Renders items/page element //\r\n  const renderItemsPerPage = () => {\r\n    return (\r\n      <div style={{display: \"flex\", marginLeft: \"auto\", paddingRight: \"3px\"}}>\r\n        <div style={style.totalTitleOther}>Items/Page</div>\r\n\r\n        {/* Renders input element for items/page referencing onKeyPress */}\r\n        <input \r\n            placeholder={totalToRenderNumber} \r\n            style={style.totalInput} \r\n            onChange={e => setUserInputRecord(parseInt(e.target.value))}\r\n            onKeyPress={onKeyPress}/>\r\n\r\n        {/* Renders the enter button for items/page */}\r\n        <div \r\n            style={style.totalButton}\r\n            onClick={() => setTotalToRenderNumber(userInputRecord)}>\r\n          <div style={style.totalButtonLine}></div>  \r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  // Renders all components of ProfileTotal //\r\n  return (\r\n    <div style={style.totalContainer}>\r\n      <div style={style.totalTitleMain}>Total Count:</div>\r\n      {renderTotalItems()}\r\n      {renderItemsPerPage()}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}