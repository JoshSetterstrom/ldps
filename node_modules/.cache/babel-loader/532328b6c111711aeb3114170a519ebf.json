{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\ld\\\\ldreact\\\\src\\\\common\\\\searchList\\\\profileButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport * as style from \"../../css/light/searchList\";\nimport createButtonState from \"./createButtonState\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProfileButtons(props) {\n  _s();\n\n  const staticButtons = props.listToRender;\n  const [buttonsToRender] = useState(staticButtons);\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style));\n\n  const changeFilter = (item, position) => {\n    buttonStyle[position].border ? setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOther\n    }) : setButtonStyle({ ...buttonStyle,\n      [position]: style.searchTypeOtherHighlight\n    });\n\n    if (props.listToRender.includes(item.target.innerHTML)) {\n      let temp = props.listToRender;\n      temp = temp.filter(e => {\n        return e !== item.target.innerHTML;\n      });\n      props.setListToRender(temp);\n    } else {\n      let temp = props.listToRender;\n      temp.push(item.target.innerHTML);\n      props.setListToRender(temp);\n    }\n  };\n\n  const renderButtons = () => {\n    return buttonsToRender.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => changeFilter(e, i),\n      style: buttonStyle[i],\n      children: item\n    }, `B${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      marginBottom: \"5px\"\n    },\n    children: renderButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n} // <div \n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\n//   {item}\n// </div>\n\n_s(ProfileButtons, \"SmJqGRWcBlPdv7YGDQOQ3V4GiwI=\");\n\n_c = ProfileButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButtons\");","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/ldreact/src/common/searchList/profileButtons.jsx"],"names":["style","createButtonState","React","useState","ProfileButtons","props","staticButtons","listToRender","buttonsToRender","buttonStyle","setButtonStyle","changeFilter","item","position","border","searchTypeOther","searchTypeOtherHighlight","includes","target","innerHTML","temp","filter","e","setListToRender","push","renderButtons","map","i","display","marginBottom"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAMC,aAAa,GAAGD,KAAK,CAACE,YAA5B;AACA,QAAM,CAACC,eAAD,IAAoBL,QAAQ,CAACG,aAAD,CAAlC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACF,iBAAiB,CAACO,eAAD,EAAkBR,KAAlB,CAAlB,CAA9C;;AAEA,QAAMW,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvCJ,IAAAA,WAAW,CAACI,QAAD,CAAX,CAAsBC,MAAtB,GACEJ,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACI,QAAD,GAAYb,KAAK,CAACe;AAAnC,KAAD,CADhB,GAEEL,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACI,QAAD,GAAYb,KAAK,CAACgB;AAAnC,KAAD,CAFhB;;AAIA,QAAIX,KAAK,CAACE,YAAN,CAAmBU,QAAnB,CAA4BL,IAAI,CAACM,MAAL,CAAYC,SAAxC,CAAJ,EAAwD;AACtD,UAAIC,IAAI,GAAGf,KAAK,CAACE,YAAjB;AACAa,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAO;AAAC,eAAOA,CAAC,KAAKV,IAAI,CAACM,MAAL,CAAYC,SAAzB;AAAmC,OAAvD,CAAP;AACAd,MAAAA,KAAK,CAACkB,eAAN,CAAsBH,IAAtB;AACD,KAJD,MAKK;AACH,UAAIA,IAAI,GAAGf,KAAK,CAACE,YAAjB;AACAa,MAAAA,IAAI,CAACI,IAAL,CAAUZ,IAAI,CAACM,MAAL,CAAYC,SAAtB;AACAd,MAAAA,KAAK,CAACkB,eAAN,CAAsBH,IAAtB;AACD;AACF,GAfD;;AAiBA,QAAMK,aAAa,GAAG,MAAM;AAC1B,WAAOjB,eAAe,CAACkB,GAAhB,CAAoB,CAACd,IAAD,EAAOe,CAAP,kBACzB;AAAmB,MAAA,OAAO,EAAGL,CAAD,IAAOX,YAAY,CAACW,CAAD,EAAIK,CAAJ,CAA/C;AAAuD,MAAA,KAAK,EAAElB,WAAW,CAACkB,CAAD,CAAzE;AAAA,gBACGf;AADH,OAAW,IAAGe,CAAE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAZ;AAAA,cACGJ,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAID;AACA;AACA;AACA;AACA;;GA3CwBrB,c;;KAAAA,c","sourcesContent":["import * as style from \"../../css/light/searchList\";\r\nimport createButtonState from \"./createButtonState\";\r\nimport React, {useState} from 'react';\r\n\r\nexport default function ProfileButtons(props) {\r\n  const staticButtons = props.listToRender\r\n  const [buttonsToRender] = useState(staticButtons)\r\n  const [buttonStyle, setButtonStyle] = useState(createButtonState(buttonsToRender, style))\r\n\r\n  const changeFilter = (item, position) => {\r\n    buttonStyle[position].border \r\n    ? setButtonStyle({...buttonStyle, [position]: style.searchTypeOther})\r\n    : setButtonStyle({...buttonStyle, [position]: style.searchTypeOtherHighlight})\r\n\r\n    if (props.listToRender.includes(item.target.innerHTML)) {\r\n      let temp = props.listToRender\r\n      temp = temp.filter((e) => {return e !== item.target.innerHTML})\r\n      props.setListToRender(temp)\r\n    }\r\n    else {\r\n      let temp = props.listToRender\r\n      temp.push(item.target.innerHTML)\r\n      props.setListToRender(temp)\r\n    }\r\n  }\r\n\r\n  const renderButtons = () => {\r\n    return buttonsToRender.map((item, i) => (\r\n      <div key={`B${i}`} onClick={(e) => changeFilter(e, i)} style={buttonStyle[i]}>\r\n        {item}\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div style={{display: \"flex\", marginBottom: \"5px\"}}>\r\n      {renderButtons()}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// <div \r\n//     onClick={e => props.getSearchTypeChange(e, item.toLowerCase())}\r\n//     style={style[props.data['display']['style'][item.toLowerCase()]]}>\r\n//   {item}\r\n// </div>"]},"metadata":{},"sourceType":"module"}