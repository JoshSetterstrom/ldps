{"ast":null,"code":"import phones from \"../../data/phone_list\";\nimport lasPhones from \"../../data/las_phones\";\n\nconst getData = () => {}; // const getDeviceData = () => {\n//   let i = 0;\n//   let searchDevice = [];\n//   phones['phones'].forEach(phone => {\n//     const container = require(`../../data/phones/${phone}.json`);\n//     const changeName = container => !container ? \"\" : container\n//     const changeUser = (container) => {\n//       if (!container) return \"\"\n//       if (!container.line[0]) return \"\"\n//       if (!container.line[0].displayAscii) return \"\"\n//       return container.line[0].displayAscii\n//     }\n//     const changeLine = (container) => {\n//       if (!container) return \"\"\n//       if (!container.line[0]) return \"\"\n//       if (!container.line[0].dirn) return \"\"\n//       if (!container.line[0].dirn.pattern) return \"\"\n//       return container.line[0].dirn.pattern\n//     }\n//     const changeMask = (container) => {\n//       if (!container) return \"\"\n//       if (!container.line[0]) return \"\"\n//       if (!container.line[0].e164Mask) return \"\"\n//       return container.line[0].e164Mask\n//     }\n//     searchDevice.push([\n//       {\n//         key: i,\n//         type: \"mac\",\n//         data: changeName(container.resources[0].data.name.toUpperCase())\n//       },\n//       {\n//         key: i,\n//         type: \"product\",\n//         data: container.resources[0].data.product\n//       },\n//       {\n//         key: i,\n//         type: \"user\",\n//         data: changeUser(container.resources[0].data.lines)\n//       },\n//       {\n//         key: i,\n//         type: \"primary\",\n//         data: changeLine(container.resources[0].data.lines)\n//       },\n//       {\n//         key: i,\n//         type: \"mask\",\n//         data: changeMask(container.resources[0].data.lines)\n//       },\n//       {\n//         key: i,\n//         type: \"ip\",\n//         data: changeName(container.resources[0].data.ip_address)\n//       },\n//       {\n//         key: i,\n//         type: \"location\",\n//         data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\n//       }\n//     ]);\n//   });\n//   lasPhones['devices'].forEach(device => {\n//     searchDevice.push([\n//       {\n//         key: i,\n//         type: \"mac\",\n//         data: device.mac\n//       },\n//       {\n//         key: i,\n//         type: \"product\",\n//         data: \"\"\n//       },\n//       {\n//         key: i,\n//         type: \"user\",\n//         data: device.user\n//       },\n//       {\n//         key: i,\n//         type: \"line\",\n//         data: device.line\n//       },\n//       {\n//         key: i,\n//         type: \"mask\",\n//         data: \"\"\n//       },\n//       {\n//         key: i,\n//         type: \"ip\",\n//         data: \"\"\n//       },\n//       {\n//         key: i,\n//         type: \"location\",\n//         data: \"LAS\"\n//       }\n//     ]);\n//   });\n//   i++;\n//   searchDevice.forEach(e => {if (!e[1].data) e[1].data = \"\"})\n//   return searchDevice;\n// };\n\n\nexport default getDeviceData();","map":{"version":3,"sources":["C:/Users/Josh/Desktop/ld/LDREACT/src/common/searchList/getDeviceData.js"],"names":["phones","lasPhones","getData","getDeviceData"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM,CAEreAAeC,aAAa,EAA5B","sourcesContent":["import phones from \"../../data/phone_list\";\r\nimport lasPhones from \"../../data/las_phones\";\r\n\r\nconst getData = () => {\r\n    \r\n}\r\n\r\n\r\n\r\n// const getDeviceData = () => {\r\n//   let i = 0;\r\n//   let searchDevice = [];\r\n\r\n//   phones['phones'].forEach(phone => {\r\n//     const container = require(`../../data/phones/${phone}.json`);\r\n//     const changeName = container => !container ? \"\" : container\r\n\r\n//     const changeUser = (container) => {\r\n//       if (!container) return \"\"\r\n//       if (!container.line[0]) return \"\"\r\n//       if (!container.line[0].displayAscii) return \"\"\r\n//       return container.line[0].displayAscii\r\n//     }\r\n\r\n//     const changeLine = (container) => {\r\n//       if (!container) return \"\"\r\n//       if (!container.line[0]) return \"\"\r\n//       if (!container.line[0].dirn) return \"\"\r\n//       if (!container.line[0].dirn.pattern) return \"\"\r\n//       return container.line[0].dirn.pattern\r\n//     }\r\n\r\n//     const changeMask = (container) => {\r\n//       if (!container) return \"\"\r\n//       if (!container.line[0]) return \"\"\r\n//       if (!container.line[0].e164Mask) return \"\"\r\n//       return container.line[0].e164Mask\r\n//     }\r\n\r\n//     searchDevice.push([\r\n//       {\r\n//         key: i,\r\n//         type: \"mac\",\r\n//         data: changeName(container.resources[0].data.name.toUpperCase())\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"product\",\r\n//         data: container.resources[0].data.product\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"user\",\r\n//         data: changeUser(container.resources[0].data.lines)\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"primary\",\r\n//         data: changeLine(container.resources[0].data.lines)\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"mask\",\r\n//         data: changeMask(container.resources[0].data.lines)\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"ip\",\r\n//         data: changeName(container.resources[0].data.ip_address)\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"location\",\r\n//         data: container.resources[0].meta.hierarchy.split(\"_\").pop().toLowerCase()\r\n//       }\r\n//     ]);\r\n//   });\r\n\r\n//   lasPhones['devices'].forEach(device => {\r\n//     searchDevice.push([\r\n//       {\r\n//         key: i,\r\n//         type: \"mac\",\r\n//         data: device.mac\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"product\",\r\n//         data: \"\"\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"user\",\r\n//         data: device.user\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"line\",\r\n//         data: device.line\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"mask\",\r\n//         data: \"\"\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"ip\",\r\n//         data: \"\"\r\n//       },\r\n//       {\r\n//         key: i,\r\n//         type: \"location\",\r\n//         data: \"LAS\"\r\n//       }\r\n//     ]);\r\n//   });\r\n\r\n//   i++;\r\n//   searchDevice.forEach(e => {if (!e[1].data) e[1].data = \"\"})\r\n\r\n//   return searchDevice;\r\n// };\r\n\r\nexport default getDeviceData();"]},"metadata":{},"sourceType":"module"}